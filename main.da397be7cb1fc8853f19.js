/*! For license information please see main.da397be7cb1fc8853f19.js.LICENSE.txt */
(()=>{var e={3103:(e,t,n)=>{"use strict";n.r(t),n.d(t,{SupportedPackages:()=>pa,load:()=>ma});var r={};n.r(r),n.d(r,{json:()=>R});var a={};n.r(a),n.d(a,{json:()=>D});var i={};n.r(i),n.d(i,{json:()=>L});var s={};n.r(s),n.d(s,{json:()=>O});var o={};n.r(o),n.d(o,{json:()=>P});var c={};n.r(c),n.d(c,{json:()=>F});var l={};n.r(l),n.d(l,{json:()=>B});var u={};n.r(u),n.d(u,{json:()=>$});var h={};n.r(h),n.d(h,{json:()=>U});var d={};n.r(d),n.d(d,{json:()=>z});var p={};n.r(p),n.d(p,{json:()=>G});var f={};n.r(f),n.d(f,{json:()=>H});var m={};n.r(m),n.d(m,{json:()=>W});var g={};n.r(g),n.d(g,{json:()=>V});var y={};n.r(y),n.d(y,{json:()=>j});var x={};n.r(x),n.d(x,{json:()=>X});var v={};n.r(v),n.d(v,{json:()=>q});var b,w,_=n(5360);!function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(b||(b={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(w||(w={}));const T={};function S(e){return T[e]}function E(e,t,n,r,a){const i=t.inputParams[e];if(i&&void 0!==i.inputIndexStart){const e=i.inputIndexStart,s=0===i.inputIndexEnd?void 0:void 0===i.inputIndexEnd?e+1:i.inputIndexEnd;if("tensor"===i.type)return M(t.inputNames[i.inputIndexStart],n,r,a);if("tensors"===i.type)return t.inputNames.slice(e,s).map((e=>M(e,n,r,a)));const o=M(t.inputNames.slice(e)[0],n,r,a),c=o.dataSync();return"number"===i.type?c[0]:_.D5U.GX(o.shape,c)}const s=t.attrParams[e];return s&&s.value}function M(e,t,n,r){const[a,i]=C(e);if(null!=r){const e=r.getHashTableHandleByName(a);if(null!=e)return e}const s=n.currentContextIds.find((e=>!!t[N(a,e)]));return void 0!==s?t[N(a,s)][i]:void 0}function I(e,t){const[n,r]=C(e);return[N(n,t&&t.currentContextId),r]}function N(e,t){return t?`${e}-${t}`:e}function C(e){const t=e.split(":");return 1===t.length?[e,0]:[t[0],Number(t[t.length-1])]}function A(e,t,n){let r=E("pad",e,t,n);if("explicit"===r){r=E("explicitPaddings",e,t,n);const a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function k(e){return e.kept?e:(0,_.d9v)(e)}const R=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],D=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],L=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],O=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],P=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],F=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],B=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],$=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],U=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]}],z=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],G=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],H=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],W=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],V=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],j=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],X=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],q=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}];class Y{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[r,a,i,s,o,c,l,p,d,u,f,m,g,y,x,v,h].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],a=[],i=[],s=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):null!=t.input&&0!==t.input.length||i.push(e[t.name]),e)),{});let o=[];const c=[];let l={},u={};null!=t&&(l=this.mapSignatureEntries(t.inputs),u=this.mapSignatureEntries(t.outputs));const h=Object.keys(s);h.forEach((e=>{const t=s[e];t.inputNames.forEach((e=>{const[n]=I(e);t.inputs.push(s[n]),s[n].children.push(t)}))})),0===Object.keys(u).length?h.forEach((e=>{const t=s[e];0===t.children.length&&c.push(t)})):Object.keys(u).forEach((e=>{const[t]=I(e),n=s[t];null!=n&&(n.signatureKey=u[e],c.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=I(e),n=s[t];n&&(n.signatureKey=l[e],o.push(n))})):o=r;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const p={nodes:s,inputs:o,outputs:c,weights:a,placeholders:r,signature:t,functions:d};return i.length>0&&(p.initNodes=i),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=S(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.substr(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let a;switch(n.type){case"string":a=Z(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Z(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=oe(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=oe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=Q(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=Q(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=se(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=se(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=J(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=J(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=le(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=le(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=ie(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ie(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=ce(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ce(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=ne(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ne(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=re(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=re(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=te(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=te(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const a=[],i=[];e.signature.inputArg.forEach((e=>{const[t]=I(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:ee(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n})),Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach((e=>{const[n]=I(e);t.inputs.push(r[n]),r[n].children.push(t)}))}));const s=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=I(s[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,i.push(a))}));const o=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:i,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function K(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=(0,_.OBj)().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function Z(e,t,n,r=!1){const a=e[t];return null!=a?K(a.s,r):n}function J(e,t,n){const r=e[t];return r?r.b:n}function Q(e,t,n){const r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function ee(e){switch("string"==typeof e&&(e=b[e]),e){case b.DT_FLOAT:return"float32";case b.DT_INT32:case b.DT_INT64:case b.DT_INT8:case b.DT_UINT8:return"int32";case b.DT_BOOL:return"bool";case b.DT_DOUBLE:return"float32";case b.DT_STRING:return"string";default:return null}}function te(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function ne(e,t,n){const r=e[t];return r&&r.type?ee(r.type):n}function re(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>ee(e))):n}function ae(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function ie(e,t,n){const r=e[t];return r&&r.shape?ae(r.shape):n}function se(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function oe(e,t,n,r=!1){const a=e[t];return a&&a.list&&a.list.s?a.list.s.map((e=>K(e,r))):n}function ce(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>ae(e))):n}function le(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class ue{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return M(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return M(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Q(this.node.rawAttrs,e,t);if(null!=n.s)return Z(this.node.rawAttrs,e,t);if(null!=n.b)return J(this.node.rawAttrs,e,t);if(null!=n.shape)return ie(this.node.rawAttrs,e,t);if(null!=n.type)return ne(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return se(this.node.rawAttrs,e,t);if(null!=n.list.s)return oe(this.node.rawAttrs,e,t);if(null!=n.list.shape)return ce(this.node.rawAttrs,e,t);if(null!=n.list.b)return le(this.node.rawAttrs,e,t);if(null!=n.list.type)return re(this.node.rawAttrs,e,t)}return t}}var he=n(6407),de=n(7097),pe=n(9121),fe=n(3740),me=n(569),ge=n(2668);const ye=(0,ge.op)({addN_:function(e){me.hu(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),me.hu(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>(0,fe._1)(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!me.cO(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return de.BV.runKernel(pe.Xz,r)}});var xe=n(747);const ve=(0,ge.op)({mod_:function(e,t){let n=(0,fe._1)(e,"a","mod"),r=(0,fe._1)(t,"b","mod");[n,r]=(0,xe.T_)(n,r);const a={a:n,b:r};return de.BV.runKernel(pe.Vb,a)}});var be=n(4841),we=n(1274),_e=n(2200);const Te=(0,ge.op)({equal_:function(e,t){let n=(0,fe._1)(e,"a","equal"),r=(0,fe._1)(t,"b","equal");[n,r]=(0,xe.T_)(n,r),(0,_e.$N)(n.shape,r.shape);const a={a:n,b:r};return de.BV.runKernel(pe.hd,a)}});var Se=n(5912),Ee=n(6577);const Me=(0,ge.op)({divNoNan_:function(e,t){let n=(0,fe._1)(e,"a","div"),r=(0,fe._1)(t,"b","div");[n,r]=(0,xe.T_)(n,r);const a=(0,we.h)(n,r),i=(0,Ee.P)(a),s=Te(r,i);return(0,Se.a)(s,i,a)}});var Ie=n(9165),Ne=n(827),Ce=n(4513),Ae=n(2271);const ke=(0,ge.op)({maximum_:function(e,t){let n=(0,fe._1)(e,"a","maximum"),r=(0,fe._1)(t,"b","maximum");[n,r]=(0,xe.T_)(n,r),"bool"===n.dtype&&(n=(0,Ae.p)(n,"int32"),r=(0,Ae.p)(r,"int32")),(0,_e.$N)(n.shape,r.shape);const a={a:n,b:r};return de.BV.runKernel(pe.BM,a)}});var Re=n(3453),De=n(5265),Le=n(6235);const Oe=(0,ge.op)({acos_:function(e){const t={x:(0,fe._1)(e,"x","acos")};return de.BV.runKernel(pe.VG,t)}}),Pe=(0,ge.op)({acosh_:function(e){const t={x:(0,fe._1)(e,"x","acosh")};return de.BV.runKernel(pe.Sp,t)}}),Fe=(0,ge.op)({asin_:function(e){const t={x:(0,fe._1)(e,"x","asin")};return de.BV.runKernel(pe.M2,t)}}),Be=(0,ge.op)({asinh_:function(e){const t={x:(0,fe._1)(e,"x","asinh")};return de.BV.runKernel(pe.qw,t)}}),$e=(0,ge.op)({atan_:function(e){const t={x:(0,fe._1)(e,"x","atan")};return de.BV.runKernel(pe.jM,t)}}),Ue=(0,ge.op)({atan2_:function(e,t){let n=(0,fe._1)(e,"a","atan2"),r=(0,fe._1)(t,"b","atan2");[n,r]=(0,xe.T_)(n,r);const a={a:n,b:r};return de.BV.runKernel(pe.QC,a)}}),ze=(0,ge.op)({atanh_:function(e){const t={x:(0,fe._1)(e,"x","atanh")};return de.BV.runKernel(pe.Oy,t)}}),Ge=(0,ge.op)({ceil_:function(e){const t={x:(0,fe._1)(e,"x","ceil")};return de.BV.runKernel(pe.gJ,t)}});var He=n(1661);const We=(0,ge.op)({cos_:function(e){const t={x:(0,fe._1)(e,"x","cos")};return de.BV.runKernel(pe.mc,t)}}),Ve=(0,ge.op)({cosh_:function(e){const t={x:(0,fe._1)(e,"x","cosh")};return de.BV.runKernel(pe.TR,t)}});var je=n(3233);const Xe=(0,ge.op)({erf_:function(e){let t=(0,fe._1)(e,"x","erf");me.hu("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=(0,Ae.p)(t,"float32"));const n={x:t};return de.BV.runKernel(pe.Om,n)}});var qe=n(4842);const Ye=(0,ge.op)({expm1_:function(e){const t={x:(0,fe._1)(e,"x","expm1")};return de.BV.runKernel(pe.Y0,t)}}),Ke=(0,ge.op)({floor_:function(e){const t={x:(0,fe._1)(e,"x","floor")};return de.BV.runKernel(pe.OR,t)}});var Ze=n(2597),Je=n(7474),Qe=n(4386),et=n(7370);const tt=(0,ge.op)({reciprocal_:function(e){const t={x:(0,fe._1)(e,"x","reciprocal")};return de.BV.runKernel(pe.$H,t)}});var nt=n(766),rt=n(7409);const at=(0,ge.op)({round_:function(e){const t={x:(0,fe._1)(e,"x","round")};return de.BV.runKernel(pe.e0,t)}}),it=(0,ge.op)({selu_:function(e){const t={x:(0,fe._1)(e,"x","selu")};return de.BV.runKernel(pe.oF,t)}});var st=n(625);const ot=(0,ge.op)({sin_:function(e){const t={x:(0,fe._1)(e,"x","sin")};return de.BV.runKernel(pe.RQ,t)}}),ct=(0,ge.op)({sign_:function(e){const t={x:(0,fe._1)(e,"x","sign")};return de.BV.runKernel(pe.i5,t)}}),lt=(0,ge.op)({sinh_:function(e){const t={x:(0,fe._1)(e,"x","sinh")};return de.BV.runKernel(pe.w3,t)}}),ut=(0,ge.op)({softplus_:function(e){const t={x:(0,fe._1)(e,"x","softplus")};return de.BV.runKernel(pe.MR,t)}});var ht=n(3261),dt=n(248);const pt=(0,ge.op)({tanh_:function(e){const t={x:(0,fe._1)(e,"x","tanh")};return de.BV.runKernel(pe.MI,t)}}),ft=(0,ge.op)({tan_:function(e){const t={x:(0,fe._1)(e,"x","tan")};return de.BV.runKernel(pe.sE,t)}}),mt=(0,ge.op)({clipByValue_:function(e,t,n){const r=(0,fe._1)(e,"x","clipByValue");me.hu(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const a={x:r},i={clipValueMin:t,clipValueMax:n};return de.BV.runKernel(pe.xn,a,i)}});var gt=n(3582);const yt=(0,ge.op)({rsqrt_:function(e){const t={x:(0,fe._1)(e,"x","rsqrt")};return de.BV.runKernel(pe.bV,t)}}),xt=(0,ge.op)({prod_:function(e,t=null,n=!1){let r=(0,fe._1)(e,"x","prod");"bool"===r.dtype&&(r=(0,Ae.p)(r,"int32"));const a={x:r},i={axis:t,keepDims:n};return de.BV.runKernel(pe.Dl,a,i)}});var vt=n(9133),bt=n(8151);function wt(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){_.D5U.hu(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const a=e[r],i=t[r];_.D5U.hu(a<0||i<0||a===i,(()=>n+` Shapes ${e} and ${t} must match`))}}}function _t(e){return"number"!=typeof e&&!e.some((e=>e<0))}function Tt(e,t,n){let r=St(e,n);const a=!_t(r);if(a&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach((e=>{r=St(e.shape,r)})),!_t(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function St(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const a=e[r],i=t[r];if(a>=0&&i>=0&&a!==i)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:i}return n}class Et{constructor(e,t,n,r,a,i,s){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=i,this.clearAfterRead=s,this.tensors=[],this.closed_=!1,this.idTensor=(0,_.iD$)(0),(0,_.CnY)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),wt(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,(0,_.CnY)(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return(0,_.XeE)([],[0].concat(this.elementShape));const n=this.readMany(e);return wt(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),(0,_.knu)(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return(0,_.XeE)([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return wt(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),(0,_.zoF)(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,(0,_.HHK)(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:t.size/n,i=[];(0,_.lub)((()=>{t=(0,_.XLQ)(t,[1,n,a]);for(let n=0;n<e.length;++n){const s=[0,0===n?0:r[n-1],0],o=[1,e[n],a];i[n]=(0,_.XLQ)((0,_.tPi)(t,s,o),this.elementShape)}return i}));const s=[];for(let t=0;t<e.length;t++)s[t]=t;this.writeMany(s,i)}}class Mt{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);wt(t,e.shape,"TensorList shape mismatch: "),(0,_.CnY)(e)})),this.idTensor=(0,_.iD$)(0),this.maxNumElements=r,(0,_.CnY)(this.idTensor)}get id(){return this.idTensor.id}copy(){return new Mt([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);wt(e,this.elementShape,"TensorList shape mismatch: ");const r=Tt(this.elementShape,this.tensors,e);return(0,_.lub)((()=>{const e=this.tensors.map((e=>(0,_.XLQ)(e,r)));return(0,_.knu)(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=Tt(this.elementShape,this.tensors,e),r=this.tensors.pop();return wt(r.shape,e,"TensorList shape mismatch: "),(0,_.XLQ)(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(wt(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");(0,_.CnY)(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);wt(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=Tt(this.elementShape,this.tensors,t);return(0,_.XLQ)(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);wt(this.elementShape,t.shape,"TensorList shape mismatch: "),(0,_.CnY)(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);wt(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=Tt(this.elementShape,this.tensors,n);return 0===e.length?(0,_.XeE)([],[0].concat(r)):(0,_.lub)((()=>{const t=e.map((e=>(0,_.XLQ)(this.tensors[e],r)));return(0,_.knu)(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);wt(this.elementShape,t,"TensorList shape mismatch: ");const n=Tt(this.elementShape,this.tensors,t);return 0===this.size()?(0,_.XeE)([],[0].concat(n)):(0,_.lub)((()=>{const e=this.tensors.map((e=>(0,_.XLQ)(e,n)));return(0,_.zoF)(e,0)}))}}var It=n(2582),Nt=n(4968);const Ct=(0,ge.op)({conv2d_:function(e,t,n,r,a="NHWC",i=[1,1],s){const o=(0,fe._1)(e,"x","conv2d"),c=(0,fe._1)(t,"filter","conv2d");let l=o,u=!1;3===o.rank&&(u=!0,l=(0,Nt.X)(o,[1,o.shape[0],o.shape[1],o.shape[2]])),me.hu(4===l.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`)),me.hu(4===c.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${c.rank}.`)),null!=s&&me.hu(me.GN(r),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const h="NHWC"===a?l.shape[3]:l.shape[1];me.hu(h===c.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${c.shape[2]}.`)),me.hu(It.jT(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`));const d={x:l,filter:c},p={strides:n,pad:r,dataFormat:a,dilations:i,dimRoundingMode:s},f=de.BV.runKernel(pe.mh,d,p);return u?(0,Nt.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),At=(0,ge.op)({conv1d_:function(e,t,n,r,a="NWC",i=1,s){const o=(0,fe._1)(e,"x","conv1d"),c=(0,fe._1)(t,"filter","conv1d");let l=o,u=!1;2===o.rank&&(u=!0,l=(0,Nt.X)(o,[1,o.shape[0],o.shape[1]])),me.hu(3===l.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`)),me.hu(3===c.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${c.rank}.`)),null!=s&&me.hu(me.GN(r),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`)),me.hu(l.shape[2]===c.shape[1],(()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${c.shape[1]}.`)),me.hu(It.jT(n,i),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${i}'`)),me.hu("NWC"===a,(()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`));const h=(0,Nt.X)(c,[1,c.shape[0],c.shape[1],c.shape[2]]),d=(0,Nt.X)(l,[l.shape[0],1,l.shape[1],l.shape[2]]),p=Ct(d,h,[1,n],r,"NHWC",[1,i],s);return u?(0,Nt.X)(p,[p.shape[2],p.shape[3]]):(0,Nt.X)(p,[p.shape[0],p.shape[2],p.shape[3]])}});var kt=n(633);const Rt=(0,ge.op)({conv2DBackpropFilter_:function(e,t,n,r,a,i="NHWC",s){let o=e;3===e.rank&&(o=(0,Nt.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let c=t;3===c.rank&&(c=(0,Nt.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),me.hu(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),me.hu(4===c.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${c.shape}.`)),me.hu(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const l="NHWC"===i?o.shape[3]:o.shape[1],u="NHWC"===i?c.shape[3]:c.shape[1];me.hu(l===n[2],(()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`)),me.hu(u===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${u}) must match output depth for filter (${n[3]}).`)),null!=s&&me.hu(me.GN(a),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${s} but got pad ${a}.`));const h={x:o,dy:c},d={strides:r,pad:a,dataFormat:i,dimRoundingMode:s,filterShape:n};return de.BV.runKernel(pe.wU,h,d)}}),Dt=(0,ge.op)({conv2DBackpropInput_:function(e,t,n,r,a,i="NHWC",s){me.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,c=t,l=!1;3===t.rank&&(l=!0,c=(0,Nt.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),me.hu(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),me.hu(4===c.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${c.rank}`)),me.hu(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const u="NHWC"===i?o[3]:o[1],h="NHWC"===i?c.shape[3]:c.shape[1];me.hu(u===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[2]}.`)),me.hu(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),null!=s&&me.hu(me.GN(a),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${s} but got pad ${a}.`));const d={dy:c,filter:n},p={strides:r,pad:a,dataFormat:i,dimRoundingMode:s,inputShape:o},f=de.BV.runKernel(pe.wm,d,p);return l?(0,Nt.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});var Lt=n(9612);const Ot=(0,ge.op)({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:i=[1,1],dimRoundingMode:s,bias:o,activation:c="linear",preluActivationWeights:l,leakyreluAlpha:u}){if(c=c||"linear",!1===(0,Lt.uy)(de.BV.state.gradientDepth,c)){let h=Ct(e,t,n,r,a,i,s);return null!=o&&(h=(0,he.I)(h,o)),(0,Lt.QH)(h,c,l,u)}const h=(0,fe._1)(e,"x","conv2d"),d=(0,fe._1)(t,"filter","conv2d");let p=h,f=!1;3===h.rank&&(f=!0,p=(0,Nt.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),me.hu(4===p.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`)),me.hu(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),null!=s&&me.hu(me.GN(r),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`)),me.hu(p.shape[3]===d.shape[2],(()=>`Error in conv2d: depth of input (${p.shape[3]}) must match input depth for filter ${d.shape[2]}.`)),me.hu(It.jT(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),me.hu("NHWC"===a,(()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`));const m=It.Ix(p.shape,d.shape,n,i,r,s);let g,y;null!=o&&(g=(0,fe._1)(o,"bias","fused conv2d"),[g]=(0,xe.T_)(g,h),_e.$N(m.outShape,g.shape)),null!=l&&(y=(0,fe._1)(l,"prelu weights","fused conv2d"));const x=(e,t)=>{const[a,s,o,l]=t,u=(0,Lt.Fr)(e,o,c);me.hu(It.I0(i),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`));const h=[Dt(s.shape,u,a,n,r),Rt(s,u,a.shape,n,r)];if(null!=l){const e=(0,Lt.pf)(l,u);h.push(e)}return h},v={x:p,filter:d,bias:g,preluActivationWeights:y},b={strides:n,pad:r,dataFormat:a,dilations:i,dimRoundingMode:s,activation:c,leakyreluAlpha:u};return null==o?(0,kt.cb)(((e,t,n)=>{let r=de.BV.runKernel(pe._V,v,b);return n([t,e,r]),f&&(r=(0,Nt.X)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}))(p,d):(0,kt.cb)(((e,t,n,r)=>{let a=de.BV.runKernel(pe._V,v,b);return r([t,e,a,n]),f&&(a=(0,Nt.X)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}))(p,d,g)}}),Pt=(0,ge.op)({depthwiseConv2d_:function(e,t,n,r,a="NHWC",i=[1,1],s){const o=(0,fe._1)(e,"x","depthwiseConv2d"),c=(0,fe._1)(t,"filter","depthwiseConv2d");let l=o,u=!1;3===o.rank&&(u=!0,l=(0,Nt.X)(o,[1,o.shape[0],o.shape[1],o.shape[2]])),me.hu(4===l.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`)),me.hu(4===c.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${c.rank}.`)),me.hu(l.shape[3]===c.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`)),null!=s&&me.hu(me.GN(r),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const h={x:l,filter:c},d={strides:n,pad:r,dataFormat:a,dilations:i,dimRoundingMode:s},p=de.BV.runKernel(pe.ci,h,d);return u?(0,Nt.X)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Ft=(0,ge.op)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a,i=[1,1],s){let o=e;3===e.rank&&(o=(0,Nt.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let c=t;3===c.rank&&(c=(0,Nt.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:o,dy:c},u={strides:r,pad:a,dimRoundingMode:s,dilations:i,filterShape:n};return de.BV.runKernel(pe.sL,l,u)}}),Bt=(0,ge.op)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a,i=[1,1],s){let o=t,c=!1;3===t.rank&&(c=!0,o=(0,Nt.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:o,filter:n},u={strides:r,pad:a,dimRoundingMode:s,dilations:i,inputShape:e},h=de.BV.runKernel(pe.y7,l,u);return c?(0,Nt.X)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),$t=(0,ge.op)({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:i=[1,1],dimRoundingMode:s,bias:o,activation:c="linear",preluActivationWeights:l,leakyreluAlpha:u}){if(!1===(0,Lt.uy)(de.BV.state.gradientDepth,c)){let h=Pt(e,t,n,r,a,i,s);return null!=o&&(h=(0,he.I)(h,o)),(0,Lt.QH)(h,c,l,u)}const h=(0,fe._1)(e,"x","depthwiseConv2d"),d=(0,fe._1)(t,"filter","depthwiseConv2d");let p=h,f=!1;3===h.rank&&(f=!0,p=(0,Nt.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),me.hu(4===p.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`)),me.hu(4===d.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`)),me.hu(p.shape[3]===d.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`)),null==i&&(i=[1,1]),me.hu(It.jT(n,i),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),null!=s&&me.hu(me.GN(r),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${s} but got pad ${r}.`));const m=It.Ix(p.shape,d.shape,n,i,r,s,!0);let g,y;null!=o&&(g=(0,fe._1)(o,"bias","fused conv2d"),[g]=(0,xe.T_)(g,h),_e.$N(m.outShape,g.shape)),null!=l&&(y=(0,fe._1)(l,"prelu weights","fused depthwiseConv2d"));const x=(e,t)=>{me.hu(It.I0(i),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`));const[a,o,l,u]=t,h=(0,Lt.Fr)(e,l,c),d=Bt(o.shape,h,a,n,r,i,s),p=Ft(o,h,a.shape,n,r,i,s);return null!=u?[d,p,(0,Lt.pf)(g,h)]:[d,p]},v={x:p,filter:d,bias:g,preluActivationWeights:y},b={strides:n,pad:r,dataFormat:a,dilations:i,dimRoundingMode:s,activation:c,leakyreluAlpha:u};return null==o?(0,kt.cb)(((e,t,n)=>{let r=de.BV.runKernel(pe.lu,v,b);return n([t,e,r]),f&&(r=(0,Nt.X)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}))(p,d):(0,kt.cb)(((e,t,n,r)=>{let a=de.BV.runKernel(pe.lu,v,b);return r([t,e,a,n]),f&&(a=(0,Nt.X)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}))(p,d,g)}});var Ut=n(8687);const zt=(0,ge.op)({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:i="linear",preluActivationWeights:s,leakyreluAlpha:o}){if(!1===(0,Lt.uy)(de.BV.state.gradientDepth,i)){let c=(0,Ut.O)(e,t,n,r);return null!=a&&(c=(0,he.I)(c,a)),(0,Lt.QH)(c,i,s,o)}let c=(0,fe._1)(e,"a","fused matMul"),l=(0,fe._1)(t,"b","fused matMul");[c,l]=(0,xe.T_)(c,l);const u=n?c.shape[c.rank-2]:c.shape[c.rank-1],h=r?l.shape[l.rank-1]:l.shape[l.rank-2],d=n?c.shape[c.rank-1]:c.shape[c.rank-2],p=r?l.shape[l.rank-2]:l.shape[l.rank-1],f=c.shape.slice(0,-2),m=l.shape.slice(0,-2),g=me.NA(f),y=me.NA(m);me.hu(c.rank>=2&&l.rank>=2&&c.rank===l.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${c.rank} and ${l.rank}.`)),me.hu(me.cO(f,m),(()=>`Error in fused matMul: outer dimensions (${f}) and (${m}) of Tensors with shapes ${c.shape} and ${l.shape} must match.`)),me.hu(u===h,(()=>`Error in fused matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${c.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`));const x=c.shape.slice(0,-2).concat([d,p]),v=n?(0,Nt.X)(c,[g,u,d]):(0,Nt.X)(c,[g,d,u]),b=r?(0,Nt.X)(l,[y,p,h]):(0,Nt.X)(l,[y,h,p]);let w,_;null!=a&&(w=(0,fe._1)(a,"bias","fused matMul"),[w]=(0,xe.T_)(w,c),_e.$N(x,w.shape)),null!=s&&(_=(0,fe._1)(s,"prelu weights","fused matMul"));const T=(e,t)=>{const[s,o,c,l]=t,u=(0,Lt.Fr)((0,Nt.X)(e,c.shape),c,i);let h,d;return n||r?!n&&r?(h=(0,Ut.O)(u,o,!1,!1),d=(0,Ut.O)(u,s,!0,!1)):n&&!r?(h=(0,Ut.O)(o,u,!1,!0),d=(0,Ut.O)(s,u,!1,!1)):(h=(0,Ut.O)(o,u,!0,!0),d=(0,Ut.O)(u,s,!0,!0)):(h=(0,Ut.O)(u,o,!1,!0),d=(0,Ut.O)(s,u,!0,!1)),null!=a?[h,d,(0,Lt.pf)(l,u)]:[h,d]},S={a:v,b,bias:w,preluActivationWeights:_},E={transposeA:n,transposeB:r,activation:i,leakyreluAlpha:o};return null==a?(0,kt.cb)(((e,t,n)=>{const r=de.BV.runKernel(pe.us,S,E);return n([e,t,r]),{value:(0,Nt.X)(r,x),gradFunc:T}}))(v,b):(0,kt.cb)(((e,t,n,r)=>{const a=de.BV.runKernel(pe.us,S,E);return r([e,t,a,n]),{value:(0,Nt.X)(a,x),gradFunc:T}}))(v,b,w)}}),Gt=(0,ge.op)({conv2dTranspose_:function(e,t,n,r,a,i){const s=(0,fe._1)(e,"x","conv2dTranspose"),o=(0,fe._1)(t,"filter","conv2dTranspose");return Dt(n,s,o,r,a,"NHWC",i)}}),Ht=(0,ge.op)({conv3d_:function(e,t,n,r,a="NDHWC",i=[1,1,1]){const s=(0,fe._1)(e,"x","conv3d"),o=(0,fe._1)(t,"filter","conv3d");let c=s,l=!1;4===s.rank&&(l=!0,c=(0,Nt.X)(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),me.hu(5===c.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${c.rank}.`)),me.hu(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),me.hu(c.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${c.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),me.hu((0,It.jT)(n,i),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),me.hu("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`));const u={x:c,filter:o},h={strides:n,pad:r,dataFormat:a,dilations:i},d=de.BV.runKernel(pe.x1,u,h);return l?(0,Nt.X)(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Wt=(0,ge.op)({avgPool_:function(e,t,n,r,a){const i=(0,fe._1)(e,"x","avgPool","float32");me.hu(It.jT(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let s=i,o=!1;3===i.rank&&(o=!0,s=(0,Nt.X)(i,[1,i.shape[0],i.shape[1],i.shape[2]])),me.hu(4===s.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${s.rank}.`)),null!=a&&me.hu(me.GN(r),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const c={x:s},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a};let u=de.BV.runKernel(pe.Jh,c,l);return u=(0,Ae.p)(u,i.dtype),o?(0,Nt.X)(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Vt=(0,ge.op)({maxPool_:function(e,t,n,r,a){const i=(0,fe._1)(e,"x","maxPool");let s=i,o=!1;3===i.rank&&(o=!0,s=(0,Nt.X)(i,[1,i.shape[0],i.shape[1],i.shape[2]])),me.hu(4===s.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${s.rank}.`)),me.hu(It.jT(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=a&&me.hu(me.GN(r),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const c={x:s},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a},u=de.BV.runKernel(pe.mT,c,l);return o?(0,Nt.X)(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),jt=(0,ge.op)({maxPoolWithArgmax_:function(e,t,n,r,a=!1){const i={x:(0,fe._1)(e,"x","maxPoolWithArgmax")},s={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},o=de.BV.runKernel(pe.vF,i,s);return{result:o[0],indexes:o[1]}}}),Xt=(0,ge.op)({avgPool3d_:function(e,t,n,r,a,i="NDHWC"){const s=(0,fe._1)(e,"x","avgPool3d","float32");let o=s,c=!1;4===s.rank&&(c=!0,o=(0,Nt.X)(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),me.hu(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),me.hu("NDHWC"===i,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),null!=a&&me.hu(me.GN(r),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const l={x:o},u={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:i};let h=de.BV.runKernel(pe._k,l,u);return h=(0,Ae.p)(h,o.dtype),c?(0,Nt.X)(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),qt=(0,ge.op)({maxPool3d_:function(e,t=[1,1,1],n,r,a,i="NDHWC"){const s=(0,fe._1)(e,"x","maxPool3d");let o=s,c=!1;4===s.rank&&(c=!0,o=(0,Nt.X)(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),me.hu(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),me.hu("NDHWC"===i,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),null!=a&&me.hu(me.GN(r),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const l={x:o},u={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:i},h=de.BV.runKernel(pe.OA,l,u);return c?(0,Nt.X)(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Yt=(0,ge.op)({dilation2d_:function(e,t,n,r,a=[1,1],i="NHWC"){const s=(0,fe._1)(e,"x","dilation2d"),o=(0,fe._1)(t,"filter","dilation2d");me.hu(3===s.rank||4===s.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${s.rank}.`)),me.hu(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),me.hu("NHWC"===i,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`));let c=s,l=!1;3===s.rank&&(c=(0,Nt.X)(s,[1,s.shape[0],s.shape[1],s.shape[2]]),l=!0);const u={x:c,filter:o},h={strides:n,pad:r,dilations:a},d=de.BV.runKernel(pe.p4,u,h);return l?(0,Nt.X)(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});function Kt(e,t,n){const[r,a]=E("fusedOps",e,t,n),i="biasadd"===r,s="prelu"===a,o="fusedbatchnorm"===r,c=E("numArgs",e,t,n);if(i){if(s&&2!==c)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!s&&1!==c)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(o)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");const l=E("strides",e,t,n),u=A(e,t,n),h=E("dataFormat",e,t,n).toUpperCase(),d=E("dilations",e,t,n),[p,f]=E("args",e,t,n);return{stride:l,pad:u,dataFormat:h,dilations:d,biasArg:p,preluArg:f,activationFunc:a,leakyreluAlpha:E("leakyreluAlpha",e,t,n)}}var Zt=n(4006);function Jt(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return de.BV.runKernel(pe.e7,{},r)}const Qt=(0,ge.op)({multinomial_:function(e,t,n,r=!1){const a=(0,fe._1)(e,"logits","multinomial"),i=a.size,s=a.rank;if(i<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${i}.`);if(s>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${s}`);n=n||Math.random();const o={logits:1===s?(0,Nt.X)(a,[1,-1]):a},c={numSamples:t,seed:n,normalized:r},l=de.BV.runKernel(pe.NZ,o,c);return 1===s?(0,Nt.X)(l,[l.size]):l}}),en=(0,ge.op)({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a={indices:(0,fe._1)(e,"indices","oneHot","int32")},i={depth:t,onValue:n,offValue:r};return de.BV.runKernel(pe.we,a,i)}});var tn=n(4917);const nn=(0,ge.op)({onesLike_:function(e){const t={x:(0,fe._1)(e,"x","onesLike")};return de.BV.runKernel(pe.qW,t)}});var rn=n(2657),an=n(6377);class sn{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=a||Math.random();this.random=an.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,i;do{r=2*this.random()-1,a=2*this.random()-1,i=r*r+a*a}while(i>=1||0===i);const s=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*r*s,t=this.mean+this.stdDev*a*s,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class on{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=an.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const cn=(0,ge.op)({randomUniform_:function(e,t=0,n=1,r="float32",a){const i=(0,rn.f)(e,r),s=new on(t,n,null,a);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});var ln=n(7245);const un=(0,ge.op)({truncatedNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const i=new sn(t,n,r,!0,a),s=(0,rn.f)(e,r);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}});var hn=n(9640),dn=n(3254),pn=n(8333);const fn=async function(e){const t=(0,fe._1)(e,"condition","whereAsync","bool"),n=await t.data(),r=(0,pn.Z)(t.shape,n);return e!==t&&t.dispose(),r};var mn=n(4077);function gn(e,t,n){return{boxes:E("boxes",e,t,n),scores:E("scores",e,t,n),maxOutputSize:E("maxOutputSize",e,t,n),iouThreshold:E("iouThreshold",e,t,n),scoreThreshold:E("scoreThreshold",e,t,n),softNmsSigma:E("softNmsSigma",e,t,n)}}const yn=(0,ge.op)({topk_:function(e,t=1,n=!0){const r=(0,fe._1)(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const a=r.shape[r.shape.length-1];if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);const i={x:r},s={k:t,sorted:n},[o,c]=de.BV.runKernel(pe.cW,i,s);return{values:o,indices:c}}}),xn=(0,ge.op)({unique_:function(e,t=0){const n=(0,fe._1)(e,"x","unique","string_or_numeric");(0,me.hu)(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},a={axis:t},[i,s]=de.BV.runKernel(pe.kp,r,a);return{values:i,indices:s}}});var vn=n(6092),bn=n(9494);class wn{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=(0,_.iD$)(0),this.tensorMap=new Map,(0,_.CnY)(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),(0,_.lub)((()=>{const e=(0,_.HHK)(t),r=n.length,a=e.length;_.D5U.hu(r===a,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`));for(let t=0;t<r;t++){const r=n[t],a=e[t];(0,_.CnY)(a),this.tensorMap.set(r,a)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return(0,_.lub)((()=>{const e=[];for(let r=0;r<n.length;r++){const a=n[r],i=this.findWithDefault(a,t);e.push(i)}return(0,_.knu)(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}var _n=n(6500),Tn=n(636),Sn=n(7630);const En=(0,ge.op)({less_:function(e,t){let n=(0,fe._1)(e,"a","less"),r=(0,fe._1)(t,"b","less");[n,r]=(0,xe.T_)(n,r),(0,_e.$N)(n.shape,r.shape);const a={a:n,b:r};return de.BV.runKernel(pe.vt,a)}});var Mn=n(624),In=n(2856);const Nn=(0,ge.op)({logicalNot_:function(e){const t={x:(0,fe._1)(e,"x","logicalNot","bool")};return de.BV.runKernel(pe.Vf,t)}}),Cn=(0,ge.op)({logicalOr_:function(e,t){const n=(0,fe._1)(e,"a","logicalOr","bool"),r=(0,fe._1)(t,"b","logicalOr","bool");(0,_e.$N)(n.shape,r.shape);const a={a:n,b:r};return de.BV.runKernel(pe.MZ,a)}});var An=n(9065);const kn=(0,ge.op)({batchNorm_:function(e,t,n,r,a,i){null==i&&(i=.001);const s=(0,fe._1)(e,"x","batchNorm"),o=(0,fe._1)(t,"mean","batchNorm"),c=(0,fe._1)(n,"variance","batchNorm");let l,u;null!=a&&(l=(0,fe._1)(a,"scale","batchNorm")),null!=r&&(u=(0,fe._1)(r,"offset","batchNorm")),me.hu(o.rank===c.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),me.hu(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),me.hu(null==l||o.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h={x:function(e){let t;return t=0===e.rank||1===e.rank?(0,Nt.X)(e,[1,1,1,e.size]):2===e.rank?(0,Nt.X)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?(0,Nt.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(s),scale:l,offset:u,mean:o,variance:c},d={varianceEpsilon:i},p=de.BV.runKernel(pe.sH,h,d);return(0,Nt.X)(p,s.shape)}}),Rn=(0,ge.op)({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){const i=(0,fe._1)(e,"x","localResponseNormalization");me.hu(4===i.rank||3===i.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${i.rank}.`)),me.hu(me.GN(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let s=i,o=!1;3===i.rank&&(o=!0,s=(0,Nt.X)(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const c={x:s},l={depthRadius:t,bias:n,alpha:r,beta:a},u=de.BV.runKernel(pe.eZ,c,l);return o?(0,Nt.X)(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Dn=(0,ge.op)({softmax_:function(e,t=-1){const n=(0,fe._1)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},a={dim:t};return de.BV.runKernel(pe.Gc,r,a)}});var Ln=n(3307),On=n(5475);const Pn=(0,ge.op)({logSoftmax_:function(e,t=-1){const n=(0,fe._1)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return(0,kt.cb)(((e,n)=>{const r=(0,Ln.F)(e,t,!0),a=(0,Ne.l)(e,r),i=(0,Ne.l)((0,Ae.p)(a,"float32"),(0,Ze.c)((0,On.S)((0,qe.Q)(a),t,!0)));return n([i]),{value:i,gradFunc:(e,n)=>{const[r]=n,a=(0,qe.Q)(r);return(0,Ne.l)(e,(0,be.d)((0,On.S)(e,t,!0),a))}}}))(n)}}),Fn=(0,ge.op)({sparseToDense_:function(e,t,n,r=0){const a=(0,fe._1)(e,"sparseIndices","sparseToDense","int32"),i=(0,fe._1)(t,"sparseValues","sparseToDense"),s=(0,fe._1)(r,"defaultValue","sparseToDense",i.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,i=e.rank>1?e.shape[1]:1;if(n.length!==i)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${i}.`);const s=t.size;if(0!==t.rank&&(1!==t.rank||s!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,i,n,s);const o={sparseIndices:a,sparseValues:i,defaultValue:s},c={outputShape:n};return de.BV.runKernel(pe.D2,o,c)}});var Bn=n(5130),$n=n(5735);const Un=(0,ge.op)({all_:function(e,t=null,n=!1){const r={x:(0,fe._1)(e,"x","all","bool")},a={axis:t,keepDims:n};return de.BV.runKernel(pe.oT,r,a)}}),zn=(0,ge.op)({any_:function(e,t=null,n=!1){const r={x:(0,fe._1)(e,"x","any","bool")},a={axis:t,keepDims:n};return de.BV.runKernel(pe.IK,r,a)}}),Gn=(0,ge.op)({argMax_:function(e,t=0){const n={x:(0,fe._1)(e,"x","argMax")},r={axis:t};return de.BV.runKernel(pe.sJ,n,r)}}),Hn=(0,ge.op)({argMin_:function(e,t=0){const n={x:(0,fe._1)(e,"x","argMin")},r={axis:t};return de.BV.runKernel(pe.aJ,n,r)}}),Wn=(0,ge.op)({cumsum_:function(e,t=0,n=!1,r=!1){const a={x:(0,fe._1)(e,"x","cumsum")},i={axis:t,exclusive:n,reverse:r};return de.BV.runKernel(pe.iH,a,i)}}),Vn=(0,ge.op)({bincount_:function(e,t,n){const r=(0,fe._1)(e,"x","bincount"),a=(0,fe._1)(t,"weights","bincount");me.hu("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),me.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),me.hu(a.size===r.size||0===a.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`));const i={x:r,weights:a},s={size:n};return de.BV.runKernel(pe.zv,i,s)}}),jn=(0,ge.op)({denseBincount_:function(e,t,n,r=!1){const a=(0,fe._1)(e,"x","denseBincount"),i=(0,fe._1)(t,"weights","denseBincount");me.hu("int32"===a.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`)),me.hu(a.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`)),me.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),me.hu(i.size===a.size||0===i.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${i.shape}.`));const s={x:a,weights:i},o={size:n,binaryOutput:r};return de.BV.runKernel(pe.QR,s,o)}});var Xn=n(6884);const qn=(0,ge.op)({gather_:function(e,t,n=0,r=0){const a={x:(0,fe._1)(e,"x","gather"),indices:(0,fe._1)(t,"indices","gather","int32")},i={axis:n,batchDims:r};return de.BV.runKernel(pe.qi,a,i)}});var Yn=n(7486),Kn=n(2676);const Zn=(0,ge.op)({stridedSlice_:function(e,t,n,r,a=0,i=0,s=0,o=0,c=0){const l={x:(0,fe._1)(e,"x","stridedSlice")},u={begin:t,end:n,strides:r,beginMask:a,endMask:i,ellipsisMask:s,newAxisMask:o,shrinkAxisMask:c};return de.BV.runKernel(pe.m2,l,u)}});var Jn=n(9590),Qn=n(2991),er=n(4136),tr=n(7501),nr=n(8644),rr=n(3028);const ar=(0,ge.op)({scatterND_:function(e,t,n){const r=(0,fe._1)(e,"indices","scatterND","int32"),a=(0,fe._1)(t,"updates","scatterND");rr.b0(a,r,n);const i={indices:r,updates:a},s={shape:n};return de.BV.runKernel(pe.xQ,i,s)}}),ir=(0,ge.op)({gatherND_:function(e,t){const n=(0,fe._1)(t,"indices","gatherND","int32"),r={params:(0,fe._1)(e,"x","gatherND"),indices:n};return de.BV.runKernel(pe.q1,r)}});var sr=n(7020),or=n(8447),cr=n(3710),lr=n(4415),ur=n(1300);const hr=(0,ge.op)({mirrorPad_:function(e,t,n){me.hu("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=(0,fe._1)(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");me.hu(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const a="reflect"===n?1:0;for(let e=0;e<r.rank;e++)me.hu(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),me.hu(t[e][0]>=0&&t[e][0]<=r.shape[e]-a&&t[e][1]>=0&&t[e][1]<=r.shape[e]-a,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-a} or less than 0 for input of shape ${r.shape}`));const i={paddings:t,mode:n},s={x:r};return de.BV.runKernel(pe.jQ,s,i)}}),dr=(0,ge.op)({pad_:function(e,t,n=0){const r=(0,fe._1)(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:t,constantValue:n},i={x:r};return de.BV.runKernel(pe.ly,i,a)}}),pr=(0,ge.op)({spaceToBatchND_:function(e,t,n){const r=(0,fe._1)(e,"x","spaceToBatchND");me.hu(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),me.hu(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),me.hu(r.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const a={x:r},i={blockShape:t,paddings:n};return de.BV.runKernel(pe.TQ,a,i)}}),fr=(0,ge.op)({batchToSpaceND_:function(e,t,n){const r=(0,fe._1)(e,"x","batchToSpaceND"),a=t.reduce(((e,t)=>e*t));me.hu(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),me.hu(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),me.hu(r.shape[0]%a==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`));const i={x:r},s={blockShape:t,crops:n};return de.BV.runKernel(pe.zw,i,s)}}),mr=(0,ge.op)({depthToSpace_:function(e,t,n="NHWC"){const r=(0,fe._1)(e,"x","depthToSpace"),a="NHWC"===n?r.shape[1]:r.shape[2],i="NHWC"===n?r.shape[2]:r.shape[3],s="NHWC"===n?r.shape[3]:r.shape[1];me.hu(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),me.hu(i*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),me.hu(s%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${s} for depthToSpace with input shape ${r.shape}`));const o={x:r},c={blockSize:t,dataFormat:n};return de.BV.runKernel(pe.T0,o,c)}});var gr=n(8247);function yr(e,t,n,r){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return _.lub((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[he.I(E("a",e,t,n),E("b",e,t,n))];case"AddN":return[ye(E("tensors",e,t,n))];case"FloorMod":case"Mod":return[ve(E("a",e,t,n),E("b",e,t,n))];case"Mul":return[be.d(E("a",e,t,n),E("b",e,t,n))];case"RealDiv":case"Div":return[we.h(E("a",e,t,n),E("b",e,t,n))];case"DivNoNan":return[Me(E("a",e,t,n),E("b",e,t,n))];case"FloorDiv":return[Ie.q(E("a",e,t,n),E("b",e,t,n))];case"Sub":return[Ne.l(E("a",e,t,n),E("b",e,t,n))];case"Minimum":return[Ce.L(E("a",e,t,n),E("b",e,t,n))];case"Maximum":return[ke(E("a",e,t,n),E("b",e,t,n))];case"Pow":return[Re.s(E("a",e,t,n),E("b",e,t,n))];case"SquaredDifference":return[De.$(E("a",e,t,n),E("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return _.lub((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[Le.W(E("x",e,t,n))];case"Acos":return[Oe(E("x",e,t,n))];case"Acosh":return[Pe(E("x",e,t,n))];case"Asin":return[Fe(E("x",e,t,n))];case"Asinh":return[Be(E("x",e,t,n))];case"Atan":return[$e(E("x",e,t,n))];case"Atan2":return[Ue(E("x",e,t,n),E("y",e,t,n))];case"Atanh":return[ze(E("x",e,t,n))];case"Ceil":return[Ge(E("x",e,t,n))];case"Complex":return[He.P(E("real",e,t,n),E("imag",e,t,n))];case"Cos":return[We(E("x",e,t,n))];case"Cosh":return[Ve(E("x",e,t,n))];case"Elu":return[je.p(E("x",e,t,n))];case"Erf":return[Xe(E("x",e,t,n))];case"Exp":return[qe.Q(E("x",e,t,n))];case"Expm1":return[Ye(E("x",e,t,n))];case"Floor":return[Ke(E("x",e,t,n))];case"Log":return[Ze.c(E("x",e,t,n))];case"Log1p":return[Je.K(E("x",e,t,n))];case"Imag":return[Qe.a(E("x",e,t,n))];case"Neg":return[et.W(E("x",e,t,n))];case"Reciprocal":return[tt(E("x",e,t,n))];case"Real":return[nt.k(E("x",e,t,n))];case"Relu":return[rt.U(E("x",e,t,n))];case"Round":return[at(E("x",e,t,n))];case"Selu":return[it(E("x",e,t,n))];case"Sigmoid":return[st.X(E("x",e,t,n))];case"Sin":return[ot(E("x",e,t,n))];case"Sign":return[ct(E("x",e,t,n))];case"Sinh":return[lt(E("x",e,t,n))];case"Softplus":return[ut(E("x",e,t,n))];case"Sqrt":return[ht._(E("x",e,t,n))];case"Square":return[dt.h(E("x",e,t,n))];case"Tanh":return[pt(E("x",e,t,n))];case"Tan":return[ft(E("x",e,t,n))];case"ClipByValue":return[mt(E("x",e,t,n),E("clipValueMin",e,t,n),E("clipValueMax",e,t,n))];case"Relu6":return[gt.b(E("x",e,t,n))];case"Rsqrt":return[yt(M(e.inputNames[0],t,n))];case"Prod":return[xt(E("x",e,t,n),E("axes",e,t,n))];case"LeakyRelu":return[vt.h(E("x",e,t,n),E("alpha",e,t,n))];case"Prelu":return[bt.A(E("x",e,t,n),E("alpha",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=E("thenBranch",e,t,n),a=E("elseBranch",e,t,n),i=E("cond",e,t,n),s=E("args",e,t,n);return(await i.data())[0]?n.functionMap[r].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=E("body",e,t,n),a=E("cond",e,t,n),i=E("args",e,t,n),s=await n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap),o=i.map((e=>e.id));let c=await s[0].data();s.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let l=i;for(;c[0];){const e=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const i=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);c=await i[0].data(),i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":return[k(E("pred",e,t,n))];case"Switch":{const r=E("pred",e,t,n);let a=E("data",e,t,n);return a.kept||(a=k(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==M(e,t,n)));return r?[k(M(r,t,n))]:void 0}case"Enter":{const r=E("frameName",e,t,n),a=E("tensor",e,t,n);return n.enterFrame(r),[k(a)]}case"Exit":{const r=E("tensor",e,t,n);return n.exitFrame(),[k(r)]}case"NextIteration":{const r=E("tensor",e,t,n);return n.nextIteration(),[k(r)]}case"TensorArrayV3":{const r=E("size",e,t,n),a=E("dtype",e,t,n),i=E("elementShape",e,t,n),s=E("dynamicSize",e,t,n),o=E("clearAfterRead",e,t,n),c=E("identicalElementShapes",e,t,n),l=E("name",e,t,n),u=new Et(l,a,r,i,c,s,o);return n.addTensorArray(u),[u.idTensor,(0,_.iD$)(1)]}case"TensorArrayWriteV3":{const r=E("tensorArrayId",e,t,n),a=E("index",e,t,n),i=E("tensor",e,t,n),s=n.getTensorArray(r.id);return s.write(a,i),[s.idTensor]}case"TensorArrayReadV3":{const r=E("tensorArrayId",e,t,n),a=E("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=E("tensorArrayId",e,t,n),a=E("indices",e,t,n),i=E("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,i)]}case"TensorArrayScatterV3":{const r=E("tensorArrayId",e,t,n),a=E("indices",e,t,n),i=E("tensor",e,t,n),s=n.getTensorArray(r.id);return s.scatter(a,i),[s.idTensor]}case"TensorArrayConcatV3":{const r=E("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),i=E("dtype",e,t,n);return[a.concat(i)]}case"TensorArraySplitV3":{const r=E("tensorArrayId",e,t,n),a=E("tensor",e,t,n),i=E("lengths",e,t,n),s=n.getTensorArray(r.id);return s.split(i,a),[s.idTensor]}case"TensorArraySizeV3":{const r=E("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return[(0,_.iD$)(a.size(),"int32")]}case"TensorArrayCloseV3":{const r=E("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=E("tensorListId",e,t,n),a=E("index",e,t,n),i=E("tensor",e,t,n),s=n.getTensorList(r.id);return s.setItem(a,i),[s.idTensor]}case"TensorListGetItem":{const r=E("tensorListId",e,t,n),a=E("index",e,t,n),i=E("elementShape",e,t,n),s=E("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,i,s)]}case"TensorListScatterV2":case"TensorListScatter":{const r=E("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const i=new Mt([],n,e.dtype,r),s=(0,_.HHK)(e,0);return t.forEach(((e,t)=>{i.setItem(e,s[t])})),i}(E("tensor",e,t,n),r,E("elementShape",e,t,n),E("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=E("elementShape",e,t,n),a=E("elementDType",e,t,n);let i;i="TensorListReserve"===e.op?"numElements":"maxNumElements";const s=function(e,t,n){return new Mt([],e,t,n)}(r,a,E(i,e,t,n));return n.addTensorList(s),[s.idTensor]}case"TensorListGather":{const r=E("tensorListId",e,t,n),a=E("indices",e,t,n),i=E("elementShape",e,t,n),s=E("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,s,i)]}case"TensorListStack":{const r=E("tensorListId",e,t,n),a=E("elementShape",e,t,n),i=E("elementDType",e,t,n),s=E("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,i,s)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);wt(e.shape.slice(1),t,"TensorList shape mismatch: ");const a=(0,_.HHK)(e);return new Mt(a,t,r)}(E("tensor",e,t,n),E("elementShape",e,t,n),E("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=E("tensorListId",e,t,n),a=n.getTensorList(r.id),i=E("dtype",e,t,n),s=E("elementShape",e,t,n);return[a.concat(i,s)]}case"TensorListPushBack":{const r=E("tensorListId",e,t,n),a=E("tensor",e,t,n),i=n.getTensorList(r.id);return i.pushBack(a),[i.idTensor]}case"TensorListPopBack":{const r=E("tensorListId",e,t,n),a=E("elementShape",e,t,n),i=E("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,i)]}case"TensorListSplit":{const r=E("tensor",e,t,n),a=E("elementShape",e,t,n),i=function(e,t,n){let r=0;const a=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const i=St(e.shape.slice(1),n),s=0===r?0:e.size/r,o=(0,_.lub)((()=>{const n=[];e=(0,_.XLQ)(e,[1,r,s]);for(let r=0;r<t.length;++r){const o=[0,0===r?0:a[r-1],0],c=[1,t[r],s];n[r]=(0,_.XLQ)((0,_.tPi)(e,o,c),i)}return e.dispose(),n})),c=new Mt([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)c.setItem(e,o[e]);return c}(r,E("lengths",e,t,n),a);return n.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"convolution":return _.lub((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const r=E("stride",e,t,n),a=E("pad",e,t,n),i=E("dataFormat",e,t,n).toUpperCase(),s=E("dilation",e,t,n);return[At(E("x",e,t,n),E("filter",e,t,n),r,a,i,s)]}case"Conv2D":{const r=E("strides",e,t,n),a=A(e,t,n),i=E("dataFormat",e,t,n).toUpperCase(),s=E("dilations",e,t,n);return[Ct(E("x",e,t,n),E("filter",e,t,n),[r[1],r[2]],a,i,[s[1],s[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:i,dilations:s,biasArg:o,preluArg:c,activationFunc:l,leakyreluAlpha:u}=Kt(e,t,n);return[Ot({x:E("x",e,t,n),filter:E("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:i,dilations:[s[1],s[2]],bias:o,activation:l,preluActivationWeights:c,leakyreluAlpha:u})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:i,dilations:s,biasArg:o,preluArg:c,activationFunc:l,leakyreluAlpha:u}=Kt(e,t,n);return[$t({x:E("x",e,t,n),filter:E("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:i,dilations:[s[1],s[2]],bias:o,activation:l,preluActivationWeights:c,leakyreluAlpha:u})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=E("outputShape",e,t,n),a=E("strides",e,t,n),i=A(e,t,n);return[Gt(E("x",e,t,n),E("filter",e,t,n),r,[a[1],a[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=E("strides",e,t,n),a=A(e,t,n),i=E("dilations",e,t,n),s=E("dataFormat",e,t,n).toUpperCase();return[Pt(E("input",e,t,n),E("filter",e,t,n),[r[1],r[2]],a,s,[i[1],i[2]])]}case"Conv3D":{const r=E("strides",e,t,n),a=E("pad",e,t,n),i=E("dataFormat",e,t,n).toUpperCase(),s=E("dilations",e,t,n);return[Ht(E("x",e,t,n),E("filter",e,t,n),[r[1],r[2],r[3]],a,i,[s[1],s[2],s[3]])]}case"AvgPool":{const r=E("strides",e,t,n),a=E("pad",e,t,n),i=E("kernelSize",e,t,n);return[Wt(E("x",e,t,n),[i[1],i[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=E("strides",e,t,n),a=E("pad",e,t,n),i=E("kernelSize",e,t,n);return[Vt(E("x",e,t,n),[i[1],i[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=E("strides",e,t,n),a=E("pad",e,t,n),i=E("kernelSize",e,t,n),s=E("includeBatchInIndex",e,t,n),{result:o,indexes:c}=jt(E("x",e,t,n),[i[1],i[2]],[r[1],r[2]],a,s);return[o,c]}case"AvgPool3D":{const r=E("strides",e,t,n),a=E("pad",e,t,n),i=E("kernelSize",e,t,n);return[Xt(E("x",e,t,n),[i[1],i[2],i[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=E("strides",e,t,n),a=E("pad",e,t,n),i=E("kernelSize",e,t,n);return[qt(E("x",e,t,n),[i[1],i[2],i[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=E("strides",e,t,n),a=E("pad",e,t,n),i=E("dilations",e,t,n),s=r[1],o=r[2],c=i[1],l=i[2];return[Yt(E("x",e,t,n),E("filter",e,t,n),[s,o],a,[c,l],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return _.lub((()=>((e,t,n)=>{switch(e.op){case"Fill":{const r=E("shape",e,t,n),a=E("dtype",e,t,n),i=E("value",e,t,n);return[Zt.h(r,i,a)]}case"LinSpace":return[Jt(E("start",e,t,n),E("stop",e,t,n),E("num",e,t,n))];case"Multinomial":{const r=E("logits",e,t,n),a=E("numSamples",e,t,n),i=E("seed",e,t,n);return[Qt(r,a,i)]}case"OneHot":{const r=E("indices",e,t,n),a=E("depth",e,t,n),i=E("onValue",e,t,n),s=E("offValue",e,t,n);return[en(r,a,i,s)]}case"Ones":return[tn.i(E("shape",e,t,n),E("dtype",e,t,n))];case"OnesLike":return[nn(E("x",e,t,n))];case"RandomUniform":return[cn(E("shape",e,t,n),E("minval",e,t,n),E("maxval",e,t,n),E("dtype",e,t,n))];case"Range":{const r=E("start",e,t,n),a=E("stop",e,t,n),i=E("step",e,t,n);return[ln.w(r,a,i,E("dtype",e,t,n))]}case"TruncatedNormal":{const r=E("shape",e,t,n),a=E("mean",e,t,n),i=E("stdDev",e,t,n),s=E("seed",e,t,n);return[un(r,a,i,E("dtype",e,t,n),s)]}case"Zeros":return[hn.l(E("shape",e,t,n),E("dtype",e,t,n))];case"ZerosLike":return[Ee.P(E("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:s,scoreThreshold:o,softNmsSigma:c}=gn(e,t,n),l=await dn.BHj.nonMaxSuppressionWithScoreAsync(r,a,i,s,o,c);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:s,scoreThreshold:o}=gn(e,t,n),c=E("padToMaxOutputSize",e,t,n),l=await dn.BHj.nonMaxSuppressionPaddedAsync(r,a,i,s,o,c);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:s,scoreThreshold:o}=gn(e,t,n);return[await dn.BHj.nonMaxSuppressionAsync(r,a,i,s,o)]}case"Where":{const r=Ae.p(E("condition",e,t,n),"bool"),a=[await fn(r)];return r.dispose(),a}case"ListDiff":return async function(e,t){const n=(0,fe._1)(e,"x","setdiff1d"),r=(0,fe._1)(t,"y","setdiff1d");me.hu(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),me.hu(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),me.hu(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const a=await n.data(),i=await r.data(),s=new Set(i);let o=0;for(let e=0;e<a.length;e++)s.has(a[e])||o++;const c=new mn.YD([o],n.dtype),l=new mn.YD([o],"int32");for(let e=0,t=0;e<a.length;e++)s.has(a[e])||(c.values[t]=a[e],l.values[t]=e,t++);return[c.toTensor(),l.toTensor()]}(E("x",e,t,n),E("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return _.lub((()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const r=E("x",e,t,n),a=E("k",e,t,n),i=E("sorted",e,t,n),s=yn(r,a,i);return[s.values,s.indices]}case"Unique":{const r=E("x",e,t,n),a=xn(r);return[a.values,a.indices]}case"UniqueV2":{const r=E("x",e,t,n),a=E("axis",e,t,n),i=xn(r,a);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return _.lub((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=E("images",e,t,n),a=E("size",e,t,n),i=E("alignCorners",e,t,n),s=E("halfPixelCenters",e,t,n);return[dn.BHj.resizeBilinear(r,[a[0],a[1]],i,s)]}case"ResizeNearestNeighbor":{const r=E("images",e,t,n),a=E("size",e,t,n),i=E("alignCorners",e,t,n),s=E("halfPixelCenters",e,t,n);return[dn.BHj.resizeNearestNeighbor(r,[a[0],a[1]],i,s)]}case"CropAndResize":{const r=E("image",e,t,n),a=E("boxes",e,t,n),i=E("boxInd",e,t,n),s=E("cropSize",e,t,n),o=E("method",e,t,n),c=E("extrapolationValue",e,t,n);return[dn.BHj.cropAndResize(r,a,i,s,o,c)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return _.lub((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=E("default",e,t,n);return[M(e.name,t,n)||r];case"Placeholder":return[M(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":return[k(E("x",e,t,n))];case"IdentityN":return E("x",e,t,n).map((e=>k(e)));case"Snapshot":return[k(E("x",e,t,n))];case"Shape":return[vn.R(E("x",e,t,n).shape,"int32")];case"ShapeN":return E("x",e,t,n).map((e=>vn.R(e.shape)));case"Size":return[bn.i(E("x",e,t,n).size,"int32")];case"Rank":return[bn.i(E("x",e,t,n).rank,"int32")];case"NoOp":return[bn.i(1)];case"Print":const a=E("x",e,t,n),i=E("data",e,t,n),s=E("message",e,t,n),o=E("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(s);for(let e=0;e<i.length;e++)console.log(Array.prototype.slice.call(i[e].dataSync()).slice(0,o));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return _.lub((()=>((e,t,n)=>{switch(e.op){case"Equal":return[Te(E("a",e,t,n),E("b",e,t,n))];case"NotEqual":return[_n.Q(E("a",e,t,n),E("b",e,t,n))];case"Greater":return[Tn.p(E("a",e,t,n),E("b",e,t,n))];case"GreaterEqual":return[Sn.b(E("a",e,t,n),E("b",e,t,n))];case"Less":return[En(E("a",e,t,n),E("b",e,t,n))];case"LessEqual":return[Mn.z(E("a",e,t,n),E("b",e,t,n))];case"LogicalAnd":return[In.H(E("a",e,t,n),E("b",e,t,n))];case"LogicalNot":return[Nn(E("a",e,t,n))];case"LogicalOr":return[Cn(E("a",e,t,n),E("b",e,t,n))];case"Select":case"SelectV2":return[Se.a(E("condition",e,t,n),E("a",e,t,n),E("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return _.lub((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[Ut.O(E("a",e,t,n),E("b",e,t,n),E("transposeA",e,t,n),E("transposeB",e,t,n))];case"Transpose":return[An.p(E("x",e,t,n),E("perm",e,t,n))];case"_FusedMatMul":const[r,a]=E("fusedOps",e,t,n),i="biasadd"===r,s="prelu"===a,o=E("numArgs",e,t,n),c=E("leakyreluAlpha",e,t,n);if(i){if(s&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!s&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,u]=E("args",e,t,n);return[zt({a:E("a",e,t,n),b:E("b",e,t,n),transposeA:E("transposeA",e,t,n),transposeB:E("transposeB",e,t,n),bias:l,activation:a,preluActivationWeights:u,leakyreluAlpha:c})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return _.lub((()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[kn(E("x",e,t,n),E("mean",e,t,n),E("variance",e,t,n),E("offset",e,t,n),E("scale",e,t,n),E("epsilon",e,t,n))];case"LRN":return[Rn(E("x",e,t,n),E("radius",e,t,n),E("bias",e,t,n),E("alpha",e,t,n),E("beta",e,t,n))];case"Softmax":return[Dn(E("x",e,t,n))];case"LogSoftmax":return[Pn(E("x",e,t,n))];case"SparseToDense":return[Fn(E("sparseIndices",e,t,n),E("outputShape",e,t,n),E("sparseValues",e,t,n),E("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return _.lub((()=>((e,t,n)=>{switch(e.op){case"Max":{const r=E("axis",e,t,n),a=E("keepDims",e,t,n);return[Ln.F(E("x",e,t,n),r,a)]}case"Mean":{const r=E("axis",e,t,n),a=E("keepDims",e,t,n);return[Bn.J(E("x",e,t,n),r,a)]}case"Min":{const r=E("axis",e,t,n),a=E("keepDims",e,t,n);return[$n.V(E("x",e,t,n),r,a)]}case"Sum":{const r=E("axis",e,t,n),a=E("keepDims",e,t,n);return[On.S(E("x",e,t,n),r,a)]}case"All":{const r=E("axis",e,t,n),a=E("keepDims",e,t,n);return[Un(E("x",e,t,n),r,a)]}case"Any":{const r=E("axis",e,t,n),a=E("keepDims",e,t,n);return[zn(E("x",e,t,n),r,a)]}case"ArgMax":{const r=E("axis",e,t,n);return[Gn(E("x",e,t,n),r)]}case"ArgMin":{const r=E("axis",e,t,n);return[Hn(E("x",e,t,n),r)]}case"Prod":{const r=E("axis",e,t,n),a=E("keepDims",e,t,n);return[xt(E("x",e,t,n),r,a)]}case"Cumsum":{const r=E("axis",e,t,n),a=E("exclusive",e,t,n),i=E("reverse",e,t,n);return[Wn(E("x",e,t,n),r,a,i)]}case"Bincount":const r=E("x",e,t,n),a=E("weights",e,t,n),i=E("size",e,t,n);return[Vn(r,a,i)];case"DenseBincount":{const r=E("x",e,t,n),a=E("weights",e,t,n),i=E("size",e,t,n),s=E("binaryOutput",e,t,n);return[jn(r,a,i,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return _.lub((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=E("n",e,t,n),a=E("axis",e,t,n);let i=E("tensors",e,t,n);return i=i.slice(0,r),[Xn.z(i,a)]}case"Gather":{const r=E("x",e,t,n),a=E("indices",e,t,n);return[qn(r,Ae.p(a,"int32"),0)]}case"GatherV2":{const r=E("axis",e,t,n),a=E("batchDims",e,t,n),i=E("x",e,t,n),s=E("indices",e,t,n);return[qn(i,Ae.p(s,"int32"),r,a)]}case"Reverse":{const r=E("dims",e,t,n),a=[];for(let e=0;e<r.length;e++)r[e]&&a.push(e);const i=E("x",e,t,n);return[Yn.G(i,a)]}case"ReverseV2":{const r=E("axis",e,t,n),a=E("x",e,t,n);return[Yn.G(a,r)]}case"Slice":{const r=E("begin",e,t,n),a=E("size",e,t,n);return[Kn.t(E("x",e,t,n),r,a)]}case"StridedSlice":{const r=E("begin",e,t,n),a=E("end",e,t,n),i=E("strides",e,t,n),s=E("beginMask",e,t,n),o=E("endMask",e,t,n),c=E("ellipsisMask",e,t,n),l=E("newAxisMask",e,t,n),u=E("shrinkAxisMask",e,t,n),h=E("x",e,t,n);return[Zn(h,r,a,i,s,o,c,l,u)]}case"Pack":return(0,_.lub)((()=>{const r=E("axis",e,t,n),a=E("tensors",e,t,n),i=a[0].shape,s=Jn.L(a[0]).shape,o=a.map((e=>{const t=_.D5U.cO(e.shape,i);if(!t&&!_.D5U.cO(Jn.L(e).shape,s))throw new Error("the input tensors shape does not match");return t?e:Nt.X(e,i)}));return[Qn.k(o,r)]}));case"Unpack":{const r=E("axis",e,t,n),a=E("tensor",e,t,n);return er.H(a,r)}case"Tile":{const r=E("reps",e,t,n);return[tr.G(E("x",e,t,n),r)]}case"Split":case"SplitV":{const r=E("axis",e,t,n),a=E("numOrSizeSplits",e,t,n),i=E("x",e,t,n);return nr.V(i,a,r)}case"ScatterNd":{const r=E("indices",e,t,n),a=E("values",e,t,n),i=E("shape",e,t,n);return[ar(r,a,i)]}case"GatherNd":{const r=E("x",e,t,n),a=E("indices",e,t,n);return[ir(r,a)]}case"SparseToDense":{const r=E("sparseIndices",e,t,n),a=E("outputShape",e,t,n),i=E("sparseValues",e,t,n),s=E("defaultValue",e,t,n);return[Fn(r,i,a,i.dtype===s.dtype?s:Ae.p(s,i.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return _.lub((()=>((e,t,n)=>{switch(e.op){case"FFT":return[sr.k(E("x",e,t,n))];case"IFFT":return[or.S(E("x",e,t,n))];case"RFFT":return[cr.Q(E("x",e,t,n))];case"IRFFT":return[lr.w(E("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return _.lub((()=>((e,t,n)=>{switch(e.op){case"Cast":return[Ae.p(E("x",e,t,n),E("dtype",e,t,n))];case"ExpandDims":{const r=E("axis",e,t,n);return[ur.d(E("x",e,t,n),r)]}case"Squeeze":{const r=E("axis",e,t,n);return[Jn.L(E("x",e,t,n),r)]}case"Reshape":return[Nt.X(E("x",e,t,n),E("shape",e,t,n))];case"MirrorPad":return[hr(E("x",e,t,n),E("padding",e,t,n),E("mode",e,t,n))];case"PadV2":case"Pad":return[dr(E("x",e,t,n),E("padding",e,t,n),E("constantValue",e,t,n))];case"SpaceToBatchND":{const r=E("blockShape",e,t,n),a=E("paddings",e,t,n);return[pr(E("x",e,t,n),r,a)]}case"BatchToSpaceND":{const r=E("blockShape",e,t,n),a=E("crops",e,t,n);return[fr(E("x",e,t,n),r,a)]}case"DepthToSpace":{const r=E("blockSize",e,t,n),a=E("dataFormat",e,t,n).toUpperCase();return[mr(E("x",e,t,n),r,a)]}case"BroadcastTo":return[gr.U(E("x",e,t,n),E("shape",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const a=E("keyDType",e,t,n),i=E("valueDType",e,t,n),s=new wn(a,i);return r.addHashTable(e.name,s),[s.handle]}case"LookupTableImport":case"LookupTableImportV2":{const a=E("tableHandle",e,t,n,r),i=E("keys",e,t,n),s=E("values",e,t,n),o=r.getHashTableById(a.id);return[await o.import(i,s)]}case"LookupTableFind":case"LookupTableFindV2":{const a=E("tableHandle",e,t,n,r),i=E("keys",e,t,n),s=E("defaultValue",e,t,n),o=r.getHashTableById(a.id);return[await o.find(i,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const a=S(e.op);if(a&&a.customExecutor)return a.customExecutor(new ue(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return _.D5U.tI(a)?a.then((e=>[].concat(e))):[].concat(a)}class xr{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function vr(e,t,n,r){const a=new Set,i=[];let s=null,o=null;const c=new Set,l=Object.keys(e).map((e=>C(e)[0]));let u=[];null!=r&&(u=r.map((e=>C(e.name)[0])));const h=[...t];for(;h.length>0;){const e=h.pop();(Tr(e)||Sr(e)||Er(e))&&null==s&&(s=e,o=s.children.map((e=>e.name)).filter((e=>a.has(e)))),a.add(e.name),null==n[e.name]&&-1===l.indexOf(e.name)&&-1===u.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{c.has(e.name)||(c.add(e.name),h.push(e))})):i.push(e.name))}return{inputs:e,outputs:t,usedNodes:a,missingInputs:i,dynamicNode:s,syncInputs:o}}const br=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],wr=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],_r=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2"];function Tr(e){return br.indexOf(e.op)>=0}function Sr(e){return wr.indexOf(e.op)>=0}function Er(e){return _r.indexOf(e.op)>=0}class Mr{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new Mr(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=vr(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:i}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(r.length>0){const n=t.map((e=>e.name)),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:a}=n,i=[],s=Object.keys(a).map((e=>C(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;s.forEach((e=>{r.has(e.name)&&i.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&i.push(e)})),null!=o&&o.forEach((e=>{r.has(e.name)&&i.push(e)}));const c=new Set,l=[];for(;i.length>0;){const e=i.pop();c.add(e.name),t[e.name]||l.push(e),e.children.forEach((e=>{!c.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>c.has(e.name)))&&i.push(e)}))}return l}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[C(e)[0]])),a=t.map((e=>C(e)[0]));let i=a.map((e=>this.graph.nodes[e]));0===i.length&&(i=this._outputs);const s=this.getCompilationKey(r,i);let o=this.compiledMap.get(s);null==o&&(o=this.compile(e,i),this.compiledMap.set(s,o));const c={},l={};return(0,_.lub)((()=>{const n=new xr(this.weightMap,c,l,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,a]=C(t),i=[];i[a]=e[t],r[n]=i}));const i=this.getFrozenTensorIds(r),s={};for(let e=0;e<o.length;e++){const t=o[e];if(!r[t.name]){const e=yr(t,r,n,this._resourceManager);if(_.D5U.tI(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,i,a,s)}}return null==this.parent&&n.dispose(i),t.map((e=>M(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,i,s){"control"!==t.category&&-1===i.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(s[e.id]=(s[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const t=function(e,t,n){return t[N(e,n.currentContextId)]}(e.name,n,r);null!=t&&t.forEach((e=>{if(e&&!a.has(e.id)){const t=s[e.id];1===t?(e.dispose(),delete s[e.id]):null!=t&&s[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,r={},a={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));const i=new xr(this.weightMap,r,a,this.functionExecutorMap),s=await this.executeWithControlFlow(e,i,t,n),o=t.map((e=>M(e,s,i))),c=o.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id)),u=new Set([...c,...l,...this.weightIds]);return Object.keys(s).forEach((e=>{s[e].forEach((e=>{!e||e.isDisposed||u.has(e.id)||e.dispose()}))})),null==this.parent&&i.dispose(u),o}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const a=Object.keys(e),i=a.map((e=>this.graph.nodes[C(e)[0]])),s=n.map((e=>C(e)[0]));let o=s.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const{usedNodes:c,missingInputs:l,dynamicNode:u,syncInputs:h}=vr(e,o,this.weightMap,this._initNodes),d=[...i,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),p=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=C(t),a=[];a[r]=e[t],p[n]=a}));const f={},m=this.getFrozenTensorIds(p),g={};for(;d.length>0;){const e=this.processStack(i,d,t,p,g,m,s,f,c);await Promise.all(e)}null!=u||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter((e=>!Tr(e)&&!M(e.name,p,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=u&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${l}]. ${e}`)}return p}processStack(e,t,n,r,a,i,s,o,c){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let u="";if("Enter"===e.node.op&&E("isConstant",e.node,r,n)&&([u]=I(e.node.name,n)),null==r[e.node.name]){const h=yr(e.node,r,n,this._resourceManager);u||([u]=I(e.node.name,n));const d=n.currentContext;_.D5U.tI(h)?l.push(h.then((l=>(r[u]=l,n.currentContext=d,this.checkTensorForDisposal(u,e.node,r,n,i,s,o),this.processChildNodes(e.node,t,n,r,a,c),l)))):(r[u]=h,this.checkTensorForDisposal(u,e.node,r,n,i,s,o),this.processChildNodes(e.node,t,n,r,a,c))}else this.processChildNodes(e.node,t,n,r,a,c)}return l}processChildNodes(e,t,n,r,a,i){e.children.forEach((e=>{const[s]=I(e.name,n);!a[s]&&i.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!M(e,r,n)))&&(a[s]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!M(e,r,n)))&&(a[s]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=C(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){const e=a.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));_.D5U.hu(t,(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&_.D5U.hu(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){const t={};for(const n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=C(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e),{})}checkOutputs(e){e.forEach((e=>{const[t]=C(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class Ir{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class Nr{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new Ir}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=_.io.MP(e,this.loadOptions);else{const t=_.io.rM(e,this.loadOptions);if(0===t.length)t.push(_.io.MP(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=_.io.dI(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Mr(Y.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=Y.Instance.transformGraph(e.modelInitializer);this.initializer=new Mr(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=_.io.yB(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof _.esB||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function Cr(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}model.json?tfjs-format=file`);const n=new Nr(e,t);return await n.load(),n}var Ar=function(){return(Ar=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)};function kr(e,t,n,r){return new(n||(n=Promise))((function(a,i){function s(e){try{c(r.next(e))}catch(e){i(e)}}function o(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,o)}c((r=r.apply(e,t||[])).next())}))}function Rr(e,t){var n,r,a,i,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(a=2&i[0]?r.return:i[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,i[1])).done)return a;switch(r=0,a&&(i=[2&i[0],a.value]),i[0]){case 0:case 1:a=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!((a=(a=s.trys).length>0&&a[a.length-1])||6!==i[0]&&2!==i[0])){s=0;continue}if(3===i[0]&&(!a||i[1]>a[0]&&i[1]<a[3])){s.label=i[1];break}if(6===i[0]&&s.label<a[1]){s.label=a[1],a=i;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(i);break}a[2]&&s.ops.pop(),s.trys.pop();continue}i=t.call(e,s)}catch(e){i=[6,e],r=0}finally{n=a=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}}function Dr(e,t,n,r){return new(n||(n=Promise))((function(a,i){function s(e){try{c(r.next(e))}catch(e){i(e)}}function o(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,o)}c((r=r.apply(e,t||[])).next())}))}function Lr(e,t){var n,r,a,i,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(a=2&i[0]?r.return:i[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,i[1])).done)return a;switch(r=0,a&&(i=[2&i[0],a.value]),i[0]){case 0:case 1:a=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!(a=(a=s.trys).length>0&&a[a.length-1])&&(6===i[0]||2===i[0])){s=0;continue}if(3===i[0]&&(!a||i[1]>a[0]&&i[1]<a[3])){s.label=i[1];break}if(6===i[0]&&s.label<a[1]){s.label=a[1],a=i;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(i);break}a[2]&&s.ops.pop(),s.trys.pop();continue}i=t.call(e,s)}catch(e){i=[6,e],r=0}finally{n=a=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}}var Or=function(e){return{startEndTensor:e,startPoint:(0,_.tPi)(e,[0,0],[-1,2]),endPoint:(0,_.tPi)(e,[0,2],[-1,2])}},Pr={strides:[8,16],anchors:[2,6]};function Fr(e,t){var n,r,a;if(e.topLeft instanceof _.esB&&e.bottomRight instanceof _.esB){var i=(0,_.lub)((function(){return[(0,_.zoF)([(0,_.tPi)((0,_.luU)(t-1,e.topLeft),0,1),(0,_.tPi)(e.topLeft,1,1)]),(0,_.zoF)([(0,_.luU)(t-1,(0,_.tPi)(e.bottomRight,0,1)),(0,_.tPi)(e.bottomRight,1,1)])]}));n=i[0],r=i[1],null!=e.landmarks&&(a=(0,_.lub)((function(){var n=(0,_.luU)((0,_.RRF)([t-1,0]),e.landmarks),r=(0,_.RRF)([1,-1]);return(0,_.dC7)(n,r)})))}else{var s=e.topLeft,o=s[0],c=s[1],l=e.bottomRight,u=l[0],h=l[1];n=[t-1-o,c],r=[t-1-u,h],null!=e.landmarks&&(a=e.landmarks.map((function(e){return[t-1-e[0],e[1]]})))}var d={topLeft:n,bottomRight:r};return null!=a&&(d.landmarks=a),null!=e.probability&&(d.probability=e.probability instanceof _.esB?e.probability.clone():e.probability),d}function Br(e,t){return(0,_.lub)((function(){var n;return n=e.hasOwnProperty("box")?e.box:e,(0,_.L9e)(function(e,t){var n=(0,_.dC7)(e.startPoint,t),r=(0,_.dC7)(e.endPoint,t),a=(0,_.Izb)([n,r],1);return Or(a)}(n,t).startEndTensor)}))}var $r=function(){function e(e,t,n,r,a,i){this.blazeFaceModel=e,this.width=t,this.height=n,this.maxFaces=r,this.anchorsData=function(e,t,n){for(var r=[],a=0;a<n.strides.length;a++)for(var i=n.strides[a],s=Math.floor((t+i-1)/i),o=Math.floor((e+i-1)/i),c=n.anchors[a],l=0;l<s;l++)for(var u=i*(l+.5),h=0;h<o;h++)for(var d=i*(h+.5),p=0;p<c;p++)r.push([d,u]);return r}(t,n,Pr),this.anchors=(0,_.odF)(this.anchorsData),this.inputSizeData=[t,n],this.inputSize=(0,_.RRF)([t,n]),this.iouThreshold=a,this.scoreThreshold=i}return e.prototype.getBoundingBoxes=function(e,t,n){return void 0===n&&(n=!0),Dr(this,void 0,void 0,(function(){var r,a,i,s,o,c,l,u,h,d,p,f,m,g,y=this;return Lr(this,(function(x){switch(x.label){case 0:return r=(0,_.lub)((function(){var t=_.BHj.resizeBilinear(e,[y.width,y.height]),n=(0,_.dC7)((0,_.luU)((0,_.hiC)(t,255),.5),2),r=y.blazeFaceModel.predict(n),a=(0,_.L9e)(r),i=function(e,t,n){var r=(0,_.tPi)(e,[0,1],[-1,2]),a=(0,_.IHx)(r,t),i=(0,_.tPi)(e,[0,3],[-1,2]),s=(0,_.hiC)(i,n),o=(0,_.hiC)(a,n),c=(0,_.hiC)(s,2),l=(0,_.luU)(o,c),u=(0,_.IHx)(o,c),h=(0,_.dC7)(l,n),d=(0,_.dC7)(u,n);return(0,_.Izb)([h,d],1)}(a,y.anchors,y.inputSize),s=(0,_.tPi)(a,[0,0],[-1,1]);return[a,i,(0,_.L9e)((0,_.XD2)(s))]})),a=r[0],i=r[1],s=r[2],o=console.warn,console.warn=function(){},c=_.BHj.nonMaxSuppression(i,s,this.maxFaces,this.iouThreshold,this.scoreThreshold),console.warn=o,[4,c.array()];case 1:return l=x.sent(),c.dispose(),u=l.map((function(e){return(0,_.tPi)(i,[e,0],[1,-1])})),t?[3,3]:[4,Promise.all(u.map((function(e){return Dr(y,void 0,void 0,(function(){var t;return Lr(this,(function(n){switch(n.label){case 0:return[4,e.array()];case 1:return t=n.sent(),e.dispose(),[2,t]}}))}))})))];case 2:u=x.sent(),x.label=3;case 3:for(h=e.shape[1],d=e.shape[2],p=t?(0,_.hiC)([d,h],this.inputSize):[d/this.inputSizeData[0],h/this.inputSizeData[1]],f=[],m=function(e){var r=u[e],i=(0,_.lub)((function(){var i=Or(r instanceof _.esB?r:(0,_.odF)(r));if(!n)return i;var o,c=l[e];return o=t?(0,_.tPi)(y.anchors,[c,0],[1,2]):y.anchorsData[c],{box:i,landmarks:(0,_.XLQ)((0,_.L9e)((0,_.tPi)(a,[c,5],[1,-1])),[6,-1]),probability:(0,_.tPi)(s,[c],[1]),anchor:o}}));f.push(i)},g=0;g<u.length;g++)m(g);return i.dispose(),s.dispose(),a.dispose(),[2,{boxes:f,scaleFactor:p}]}}))}))},e.prototype.estimateFaces=function(e,t,n,r){return void 0===t&&(t=!1),void 0===n&&(n=!1),void 0===r&&(r=!0),Dr(this,void 0,void 0,(function(){var a,i,s,o,c,l,u=this;return Lr(this,(function(h){switch(h.label){case 0:return a=function(e){return e instanceof _.esB?[e.shape[0],e.shape[1]]:[e.height,e.width]}(e),i=a[1],s=(0,_.lub)((function(){return e instanceof _.esB||(e=_.Xhn.n(e)),(0,_.dt4)((0,_.pju)(e,"float32"),0)})),[4,this.getBoundingBoxes(s,t,r)];case 1:return o=h.sent(),c=o.boxes,l=o.scaleFactor,s.dispose(),t?[2,c.map((function(e){var t=Br(e,l),a={topLeft:(0,_.tPi)(t,[0],[2]),bottomRight:(0,_.tPi)(t,[2],[2])};if(r){var s=e,o=s.landmarks,c=s.probability,u=s.anchor,h=(0,_.dC7)((0,_.IHx)(o,u),l);a.landmarks=h,a.probability=c}return n&&(a=Fr(a,i)),a}))]:[2,Promise.all(c.map((function(e){return Dr(u,void 0,void 0,(function(){var t,a,s,o,c,u,h,d,p,f,m,g=this;return Lr(this,(function(y){switch(y.label){case 0:return t=Br(e,l),r?[3,2]:[4,t.array()];case 1:return c=y.sent(),a={topLeft:c.slice(0,2),bottomRight:c.slice(2)},[3,4];case 2:return[4,Promise.all([e.landmarks,t,e.probability].map((function(e){return Dr(g,void 0,void 0,(function(){return Lr(this,(function(t){return[2,e.array()]}))}))})))];case 3:s=y.sent(),o=s[0],c=s[1],u=s[2],h=e.anchor,p=(d=l)[0],f=d[1],m=o.map((function(e){return[(e[0]+h[0])*p,(e[1]+h[1])*f]})),a={topLeft:c.slice(0,2),bottomRight:c.slice(2),landmarks:m,probability:u},function(e){e.startEndTensor.dispose(),e.startPoint.dispose(),e.endPoint.dispose()}(e.box),e.landmarks.dispose(),e.probability.dispose(),y.label=4;case 4:return t.dispose(),n&&(a=Fr(a,i)),[2,a]}}))}))})))]}}))}))},e}();function Ur(e){var t=void 0===e?{}:e,n=t.maxFaces,r=void 0===n?10:n,a=t.inputWidth,i=void 0===a?128:a,s=t.inputHeight,o=void 0===s?128:s,c=t.iouThreshold,l=void 0===c?.3:c,u=t.scoreThreshold,h=void 0===u?.75:u,d=t.modelUrl;return Dr(this,void 0,void 0,(function(){var e;return Lr(this,(function(t){switch(t.label){case 0:return null==d?[3,2]:[4,Cr(d)];case 1:return e=t.sent(),[3,4];case 2:return[4,Cr("https://tfhub.dev/tensorflow/tfjs-model/blazeface/1/default/1",{fromTFHub:!0})];case 3:e=t.sent(),t.label=4;case 4:return[2,new $r(e,i,o,r,l,h)]}}))}))}var zr={silhouette:[10,338,297,332,284,251,389,356,454,323,361,288,397,365,379,378,400,377,152,148,176,149,150,136,172,58,132,93,234,127,162,21,54,103,67,109],lipsUpperOuter:[61,185,40,39,37,0,267,269,270,409,291],lipsLowerOuter:[146,91,181,84,17,314,405,321,375,291],lipsUpperInner:[78,191,80,81,82,13,312,311,310,415,308],lipsLowerInner:[78,95,88,178,87,14,317,402,318,324,308],rightEyeUpper0:[246,161,160,159,158,157,173],rightEyeLower0:[33,7,163,144,145,153,154,155,133],rightEyeUpper1:[247,30,29,27,28,56,190],rightEyeLower1:[130,25,110,24,23,22,26,112,243],rightEyeUpper2:[113,225,224,223,222,221,189],rightEyeLower2:[226,31,228,229,230,231,232,233,244],rightEyeLower3:[143,111,117,118,119,120,121,128,245],rightEyebrowUpper:[156,70,63,105,66,107,55,193],rightEyebrowLower:[35,124,46,53,52,65],rightEyeIris:[473,474,475,476,477],leftEyeUpper0:[466,388,387,386,385,384,398],leftEyeLower0:[263,249,390,373,374,380,381,382,362],leftEyeUpper1:[467,260,259,257,258,286,414],leftEyeLower1:[359,255,339,254,253,252,256,341,463],leftEyeUpper2:[342,445,444,443,442,441,413],leftEyeLower2:[446,261,448,449,450,451,452,453,464],leftEyeLower3:[372,340,346,347,348,349,350,357,465],leftEyebrowUpper:[383,300,293,334,296,336,285,417],leftEyebrowLower:[265,353,276,283,282,295],leftEyeIris:[468,469,470,471,472],midwayBetweenEyes:[168],noseTip:[1],noseBottom:[2],noseRightCorner:[98],noseLeftCorner:[327],rightCheek:[205],leftCheek:[425]};function Gr(e){return[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])]}function Hr(e){return[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2]}function Wr(e,t){void 0===t&&(t=1.5);var n=Hr(e),r=Gr(e),a=[t*r[0]/2,t*r[1]/2];return{startPoint:[n[0]-a[0],n[1]-a[1]],endPoint:[n[0]+a[0],n[1]+a[1]],landmarks:e.landmarks}}function Vr(e){var t=Hr(e),n=Gr(e),r=Math.max.apply(Math,n)/2;return{startPoint:[t[0]-r,t[1]-r],endPoint:[t[0]+r,t[1]+r],landmarks:e.landmarks}}var jr=[[1,0,0],[0,1,0],[0,0,1]];function Xr(e,t){return[[1,0,e],[0,1,t],[0,0,1]]}function qr(e,t){for(var n=0,r=0;r<e.length;r++)n+=e[r]*t[r];return n}function Yr(e,t){for(var n=[],r=0;r<e.length;r++)n.push(e[r][t]);return n}function Kr(e,t){for(var n=[],r=e.length,a=0;a<r;a++){n.push([]);for(var i=0;i<r;i++)n[a].push(qr(e[a],Yr(t,i)))}return n}function Zr(e,t){var n=Math.cos(e),r=Math.sin(e),a=[[n,-r,0],[r,n,0],[0,0,1]],i=Kr(Xr(t[0],t[1]),a);return Kr(i,Xr(-t[0],-t[1]))}var Jr=[13,zr.midwayBetweenEyes[0]],Qr=[3,2],ea=zr.leftEyeLower0,ta=[ea[0],ea[ea.length-1]],na=zr.rightEyeLower0,ra=[na[0],na[na.length-1]],aa=[{key:"EyeUpper0",indices:[9,10,11,12,13,14,15]},{key:"EyeUpper1",indices:[25,26,27,28,29,30,31]},{key:"EyeUpper2",indices:[41,42,43,44,45,46,47]},{key:"EyeLower0",indices:[0,1,2,3,4,5,6,7,8]},{key:"EyeLower1",indices:[16,17,18,19,20,21,22,23,24]},{key:"EyeLower2",indices:[32,33,34,35,36,37,38,39,40]},{key:"EyeLower3",indices:[54,55,56,57,58,59,60,61,62]},{key:"EyebrowUpper",indices:[63,64,65,66,67,68,69,70]},{key:"EyebrowLower",indices:[48,49,50,51,52,53]}];function ia(e,t,n,r){for(var a=0;a<aa.length;a++){var i=aa[a],s=i.key,o=i.indices,c=zr[""+n+s];if(null==r||r.includes(s))for(var l=0;l<o.length;l++){var u=o[l];e[c[l]]=[t[u][0],t[u][1],(t[u][2]+e[c[l]][2])/2]}}}var sa=function(){function e(e,t,n,r,a,i,s){this.regionsOfInterest=[],this.runsWithoutFaceDetector=0,this.boundingBoxDetector=e,this.meshDetector=t,this.irisModel=s,this.meshWidth=n,this.meshHeight=r,this.maxContinuousChecks=a,this.maxFaces=i}return e.prototype.transformRawCoords=function(e,t,n,r){var a,i,s,o,c=this,l=Gr({startPoint:t.startPoint,endPoint:t.endPoint}),u=[l[0]/this.meshWidth,l[1]/this.meshHeight],h=e.map((function(e){return[u[0]*(e[0]-c.meshWidth/2),u[1]*(e[1]-c.meshHeight/2),e[2]]})),d=Zr(n,[0,0]),p=h.map((function(e){return function(e,t){return[qr(e,t[0]),qr(e,t[1])]}(e,d).concat([e[2]])})),f=(i=[[(a=r)[0][0],a[1][0]],[a[0][1],a[1][1]]],s=[a[0][2],a[1][2]],o=[-qr(i[0],s),-qr(i[1],s)],[i[0].concat(o[0]),i[1].concat(o[1]),[0,0,1]]),m=Hr({startPoint:t.startPoint,endPoint:t.endPoint}).concat([1]),g=[qr(m,f[0]),qr(m,f[1])];return p.map((function(e){return[e[0]+g[0],e[1]+g[1],e[2]]}))},e.prototype.getLeftToRightEyeDepthDifference=function(e){return e[ta[0]][2]-e[ra[0]][2]},e.prototype.getEyeBox=function(e,t,n,r,a){void 0===a&&(a=!1);var i=Vr(Wr(this.calculateLandmarksBoundingBox([e[n],e[r]]),2.3)),s=Gr(i),o=_.BHj.cropAndResize(t,[[i.startPoint[1]/this.meshHeight,i.startPoint[0]/this.meshWidth,i.endPoint[1]/this.meshHeight,i.endPoint[0]/this.meshWidth]],[0],[64,64]);return a&&(o=_.BHj.flipLeftRight(o)),{box:i,boxSize:s,crop:o}},e.prototype.getEyeCoords=function(e,t,n,r){void 0===r&&(r=!1);for(var a=[],i=0;i<76;i++){var s=e[3*i],o=e[3*i+1],c=e[3*i+2];a.push([(r?1-s/64:s/64)*n[0]+t.startPoint[0],o/64*n[1]+t.startPoint[1],c])}return{rawCoords:a,iris:a.slice(71)}},e.prototype.getAdjustedIrisCoords=function(e,t,n){var r=e[zr[n+"EyeUpper0"][3]][2],a=e[zr[n+"EyeLower0"][4]][2],i=(r+a)/2;return t.map((function(e,t){var n=i;return 2===t?n=r:4===t&&(n=a),[e[0],e[1],n]}))},e.prototype.predict=function(e,t){return kr(this,void 0,void 0,(function(){var n,r,a,i,s=this;return Rr(this,(function(o){switch(o.label){case 0:return this.shouldUpdateRegionsOfInterest()?[4,this.boundingBoxDetector.getBoundingBoxes(e,!1,!0)]:[3,2];case 1:return n=o.sent(),r=n.boxes,a=n.scaleFactor,0===r.length?(this.regionsOfInterest=[],[2,null]):(i=r.map((function(e){var t,n,r={startPoint:(0,_.L9e)(e.box.startPoint).arraySync(),endPoint:(0,_.L9e)(e.box.endPoint).arraySync()},i=Vr(Wr((n=a,{startPoint:[(t=r).startPoint[0]*n[0],t.startPoint[1]*n[1]],endPoint:[t.endPoint[0]*n[0],t.endPoint[1]*n[1]]})));return Ar({},i,{landmarks:e.landmarks.arraySync()})})),r.forEach((function(e){null!=e&&null!=e.startPoint&&(e.startEndTensor.dispose(),e.startPoint.dispose(),e.endPoint.dispose())})),this.updateRegionsOfInterest(i),this.runsWithoutFaceDetector=0,[3,3]);case 2:this.runsWithoutFaceDetector++,o.label=3;case 3:return[2,(0,_.lub)((function(){return s.regionsOfInterest.map((function(n,r){var a,i=n.landmarks.length>=468,o=Jr[0],c=Jr[1];!1===i&&(o=Qr[0],c=Qr[1]),a=function(e,t){var n;return(n=Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]))-2*Math.PI*Math.floor((n+Math.PI)/(2*Math.PI))}(n.landmarks[o],n.landmarks[c]);var l=Hr({startPoint:n.startPoint,endPoint:n.endPoint}),u=[l[0]/e.shape[2],l[1]/e.shape[1]],h=e,d=jr;0!==a&&(h=_.BHj.rotateWithOffset(e,a,0,u),d=Zr(-a,l));var p={startPoint:n.startPoint,endPoint:n.endPoint},f=(0,_.hiC)(function(e,t,n){var r=t.shape[1],a=t.shape[2],i=[[e.startPoint[1]/r,e.startPoint[0]/a,e.endPoint[1]/r,e.endPoint[0]/a]];return _.BHj.cropAndResize(t,i,[0],n,"bilinear",0)}(p,h,[s.meshHeight,s.meshWidth]),255),m=s.meshDetector.predict(f),g=m[1],y=m[2],x=(0,_.XLQ)(y,[-1,3]).arraySync();if(t){var v=s.getEyeBox(x,f,ta[0],ta[1],!0),b=v.box,w=v.boxSize,T=v.crop,S=s.getEyeBox(x,f,ra[0],ra[1]),E=S.box,M=S.boxSize,I=S.crop,N=s.irisModel.predict((0,_.zoF)([T,I])).dataSync(),C=N.slice(0,228),A=s.getEyeCoords(C,b,w,!0),k=A.rawCoords,R=A.iris,D=N.slice(228),L=s.getEyeCoords(D,E,M),O=L.rawCoords,P=L.iris,F=s.getLeftToRightEyeDepthDifference(x);Math.abs(F)<30?(ia(x,k,"left"),ia(x,O,"right")):F<1?ia(x,k,"left",["EyeUpper0","EyeLower0"]):ia(x,O,"right",["EyeUpper0","EyeLower0"]);var B=s.getAdjustedIrisCoords(x,R,"left"),$=s.getAdjustedIrisCoords(x,P,"right");x=x.concat(B).concat($)}var U=s.transformRawCoords(x,n,a,d),z=(0,_.odF)(U),G=Wr(s.calculateLandmarksBoundingBox(U)),H=Vr(G);return s.regionsOfInterest[r]=Ar({},H,{landmarks:z.arraySync()}),{coords:(0,_.odF)(x,[x.length,3]),scaledCoords:z,box:G,flag:(0,_.L9e)(g)}}))}))]}}))}))},e.prototype.updateRegionsOfInterest=function(e){for(var t=0;t<e.length;t++){var n=e[t],r=this.regionsOfInterest[t],a=0;if(r&&r.startPoint){var i=n.startPoint,s=i[0],o=i[1],c=n.endPoint,l=c[0],u=c[1],h=r.startPoint,d=h[0],p=h[1],f=r.endPoint,m=f[0],g=f[1],y=Math.max(s,d),x=Math.max(o,p),v=(Math.min(l,m)-y)*(Math.min(u,g)-x);a=v/((l-s)*(u-o)+(m-d)*(g-o)-v)}a<.25&&(this.regionsOfInterest[t]=n)}this.regionsOfInterest=this.regionsOfInterest.slice(0,e.length)},e.prototype.clearRegionOfInterest=function(e){null!=this.regionsOfInterest[e]&&(this.regionsOfInterest=this.regionsOfInterest.slice(0,e).concat(this.regionsOfInterest.slice(e+1)))},e.prototype.shouldUpdateRegionsOfInterest=function(){var e=this.regionsOfInterest.length,t=0===e;return 1===this.maxFaces||t?t:e!==this.maxFaces&&this.runsWithoutFaceDetector>=this.maxContinuousChecks},e.prototype.calculateLandmarksBoundingBox=function(e){var t=e.map((function(e){return e[0]})),n=e.map((function(e){return e[1]}));return{startPoint:[Math.min.apply(Math,t),Math.min.apply(Math,n)],endPoint:[Math.max.apply(Math,t),Math.max.apply(Math,n)]}},e}(),oa=[[.499976992607117,.652534008026123],[.500025987625122,.547487020492554],[.499974012374878,.602371990680695],[.482113003730774,.471979022026062],[.500150978565216,.527155995368958],[.499909996986389,.498252987861633],[.499523013830185,.40106201171875],[.289712011814117,.380764007568359],[.499954998493195,.312398016452789],[.499987006187439,.269918978214264],[.500023007392883,.107050001621246],[.500023007392883,.666234016418457],[.5000159740448,.679224014282227],[.500023007392883,.692348003387451],[.499976992607117,.695277988910675],[.499976992607117,.70593398809433],[.499976992607117,.719385027885437],[.499976992607117,.737019002437592],[.499967992305756,.781370997428894],[.499816000461578,.562981009483337],[.473773002624512,.573909997940063],[.104906998574734,.254140973091125],[.365929991006851,.409575998783112],[.338757991790771,.41302502155304],[.311120003461838,.409460008144379],[.274657994508743,.389131009578705],[.393361985683441,.403706014156342],[.345234006643295,.344011008739471],[.370094001293182,.346076011657715],[.319321990013123,.347265005111694],[.297903001308441,.353591024875641],[.24779200553894,.410809993743896],[.396889001131058,.842755019664764],[.280097991228104,.375599980354309],[.106310002505779,.399955987930298],[.2099249958992,.391353011131287],[.355807989835739,.534406006336212],[.471751004457474,.65040397644043],[.474155008792877,.680191993713379],[.439785003662109,.657229006290436],[.414617002010345,.66654098033905],[.450374007225037,.680860996246338],[.428770989179611,.682690978050232],[.374971002340317,.727805018424988],[.486716985702515,.547628998756409],[.485300987958908,.527395009994507],[.257764995098114,.314490020275116],[.401223003864288,.455172002315521],[.429818987846375,.548614978790283],[.421351999044418,.533740997314453],[.276895999908447,.532056987285614],[.483370006084442,.499586999416351],[.33721199631691,.282882988452911],[.296391993761063,.293242990970612],[.169294998049736,.193813979625702],[.447580009698868,.302609980106354],[.392390012741089,.353887975215912],[.354490011930466,.696784019470215],[.067304998636246,.730105042457581],[.442739009857178,.572826027870178],[.457098007202148,.584792017936707],[.381974011659622,.694710969924927],[.392388999462128,.694203019142151],[.277076005935669,.271932005882263],[.422551989555359,.563233017921448],[.385919004678726,.281364023685455],[.383103013038635,.255840003490448],[.331431001424789,.119714021682739],[.229923993349075,.232002973556519],[.364500999450684,.189113974571228],[.229622006416321,.299540996551514],[.173287004232407,.278747975826263],[.472878992557526,.666198015213013],[.446828007698059,.668527007102966],[.422762006521225,.673889994621277],[.445307999849319,.580065965652466],[.388103008270264,.693961024284363],[.403039008378983,.706539988517761],[.403629004955292,.693953037261963],[.460041999816895,.557139039039612],[.431158006191254,.692366003990173],[.452181994915009,.692366003990173],[.475387006998062,.692366003990173],[.465828001499176,.779190003871918],[.472328990697861,.736225962638855],[.473087012767792,.717857003211975],[.473122000694275,.704625964164734],[.473033010959625,.695277988910675],[.427942007780075,.695277988910675],[.426479011774063,.703539967536926],[.423162013292313,.711845993995667],[.4183090031147,.720062971115112],[.390094995498657,.639572978019714],[.013953999616206,.560034036636353],[.499913990497589,.58014702796936],[.413199990987778,.69539999961853],[.409626007080078,.701822996139526],[.468080013990402,.601534962654114],[.422728985548019,.585985004901886],[.463079988956451,.593783974647522],[.37211999297142,.47341400384903],[.334562003612518,.496073007583618],[.411671012639999,.546965003013611],[.242175996303558,.14767599105835],[.290776997804642,.201445996761322],[.327338010072708,.256527006626129],[.399509996175766,.748921036720276],[.441727995872498,.261676013469696],[.429764986038208,.187834024429321],[.412198007106781,.108901023864746],[.288955003023148,.398952007293701],[.218936994671822,.435410976409912],[.41278201341629,.398970007896423],[.257135003805161,.355440020561218],[.427684992551804,.437960982322693],[.448339998722076,.536936044692993],[.178560003638268,.45755398273468],[.247308000922203,.457193970680237],[.286267012357712,.467674970626831],[.332827985286713,.460712015628815],[.368755996227264,.447206974029541],[.398963987827301,.432654976844788],[.476410001516342,.405806005001068],[.189241006970406,.523923993110657],[.228962004184723,.348950982093811],[.490725994110107,.562400996685028],[.404670000076294,.485132992267609],[.019469000399113,.401564002037048],[.426243007183075,.420431017875671],[.396993011236191,.548797011375427],[.266469985246658,.376977026462555],[.439121007919312,.51895797252655],[.032313998788595,.644356966018677],[.419054001569748,.387154996395111],[.462783008813858,.505746960639954],[.238978996872902,.779744982719421],[.198220998048782,.831938028335571],[.107550002634525,.540755033493042],[.183610007166862,.740257024765015],[.134409993886948,.333683013916016],[.385764002799988,.883153975009918],[.490967005491257,.579378008842468],[.382384985685349,.508572995662689],[.174399003386497,.397670984268188],[.318785011768341,.39623498916626],[.343364000320435,.400596976280212],[.396100014448166,.710216999053955],[.187885001301765,.588537991046906],[.430987000465393,.944064974784851],[.318993002176285,.898285031318665],[.266247987747192,.869701027870178],[.500023007392883,.190576016902924],[.499976992607117,.954452991485596],[.366169989109039,.398822009563446],[.393207013607025,.39553701877594],[.410373002290726,.391080021858215],[.194993004202843,.342101991176605],[.388664990663528,.362284004688263],[.365961998701096,.355970978736877],[.343364000320435,.355356991291046],[.318785011768341,.35834002494812],[.301414996385574,.363156020641327],[.058132998645306,.319076001644135],[.301414996385574,.387449026107788],[.499987989664078,.618434011936188],[.415838003158569,.624195992946625],[.445681989192963,.566076993942261],[.465844005346298,.620640993118286],[.49992299079895,.351523995399475],[.288718998432159,.819945991039276],[.335278987884521,.852819979190826],[.440512001514435,.902418971061707],[.128294005990028,.791940987110138],[.408771991729736,.373893976211548],[.455606997013092,.451801002025604],[.499877005815506,.908990025520325],[.375436991453171,.924192011356354],[.11421000212431,.615022003650665],[.448662012815475,.695277988910675],[.4480200111866,.704632043838501],[.447111994028091,.715808033943176],[.444831997156143,.730794012546539],[.430011987686157,.766808986663818],[.406787008047104,.685672998428345],[.400738000869751,.681069016456604],[.392399996519089,.677703022956848],[.367855995893478,.663918972015381],[.247923001646996,.601333022117615],[.452769994735718,.420849978923798],[.43639200925827,.359887003898621],[.416164010763168,.368713974952698],[.413385987281799,.692366003990173],[.228018000721931,.683571994304657],[.468268007040024,.352671027183533],[.411361992359161,.804327011108398],[.499989002943039,.469825029373169],[.479153990745544,.442654013633728],[.499974012374878,.439637005329132],[.432112008333206,.493588984012604],[.499886006116867,.866917014122009],[.49991300702095,.821729004383087],[.456548988819122,.819200992584229],[.344549000263214,.745438992977142],[.37890899181366,.574010014533997],[.374292999505997,.780184984207153],[.319687992334366,.570737957954407],[.357154995203018,.604269981384277],[.295284003019333,.621580958366394],[.447750002145767,.862477004528046],[.410986006259918,.508723020553589],[.31395098567009,.775308012962341],[.354128003120422,.812552988529205],[.324548006057739,.703992962837219],[.189096003770828,.646299958229065],[.279776990413666,.71465802192688],[.1338230073452,.682700991630554],[.336768001317978,.644733011722565],[.429883986711502,.466521978378296],[.455527991056442,.548622965812683],[.437114000320435,.558896005153656],[.467287987470627,.529924988746643],[.414712011814117,.335219979286194],[.37704598903656,.322777986526489],[.344107985496521,.320150971412659],[.312875986099243,.32233202457428],[.283526003360748,.333190023899078],[.241245999932289,.382785975933075],[.102986000478268,.468762993812561],[.267612010240555,.424560010433197],[.297879010438919,.433175981044769],[.333433985710144,.433878004550934],[.366427004337311,.426115989685059],[.396012008190155,.416696012020111],[.420121014118195,.41022801399231],[.007561000064015,.480777025222778],[.432949006557465,.569517970085144],[.458638995885849,.479089021682739],[.473466008901596,.545744001865387],[.476087987422943,.563830018043518],[.468472003936768,.555056989192963],[.433990985155106,.582361996173859],[.483518004417419,.562983989715576],[.482482999563217,.57784903049469],[.42645001411438,.389798998832703],[.438998997211456,.39649498462677],[.450067013502121,.400434017181396],[.289712011814117,.368252992630005],[.276670008897781,.363372981548309],[.517862021923065,.471948027610779],[.710287988185883,.380764007568359],[.526226997375488,.573909997940063],[.895093023777008,.254140973091125],[.634069979190826,.409575998783112],[.661242008209229,.41302502155304],[.688880026340485,.409460008144379],[.725341975688934,.389131009578705],[.606630027294159,.40370500087738],[.654766023159027,.344011008739471],[.629905998706818,.346076011657715],[.680678009986877,.347265005111694],[.702096998691559,.353591024875641],[.75221198797226,.410804986953735],[.602918028831482,.842862963676453],[.719901978969574,.375599980354309],[.893692970275879,.399959981441498],[.790081977844238,.391354024410248],[.643998026847839,.534487962722778],[.528249025344849,.65040397644043],[.525849997997284,.680191040039062],[.560214996337891,.657229006290436],[.585384011268616,.66654098033905],[.549625992774963,.680860996246338],[.57122802734375,.682691991329193],[.624852001667023,.72809898853302],[.513050019741058,.547281980514526],[.51509702205658,.527251958847046],[.742246985435486,.314507007598877],[.598631024360657,.454979002475739],[.570338010787964,.548575043678284],[.578631997108459,.533622980117798],[.723087012767792,.532054007053375],[.516445994377136,.499638974666595],[.662801027297974,.282917976379395],[.70362401008606,.293271005153656],[.830704987049103,.193813979625702],[.552385985851288,.302568018436432],[.607609987258911,.353887975215912],[.645429015159607,.696707010269165],[.932694971561432,.730105042457581],[.557260990142822,.572826027870178],[.542901992797852,.584792017936707],[.6180260181427,.694710969924927],[.607590973377228,.694203019142151],[.722943007946014,.271963000297546],[.577413976192474,.563166975975037],[.614082992076874,.281386971473694],[.616907000541687,.255886018276215],[.668509006500244,.119913995265961],[.770092010498047,.232020974159241],[.635536015033722,.189248979091644],[.77039098739624,.299556016921997],[.826722025871277,.278755009174347],[.527121007442474,.666198015213013],[.553171992301941,.668527007102966],[.577238023281097,.673889994621277],[.554691970348358,.580065965652466],[.611896991729736,.693961024284363],[.59696102142334,.706539988517761],[.596370995044708,.693953037261963],[.539958000183105,.557139039039612],[.568841993808746,.692366003990173],[.547818005084991,.692366003990173],[.52461302280426,.692366003990173],[.534089982509613,.779141008853912],[.527670979499817,.736225962638855],[.526912987232208,.717857003211975],[.526877999305725,.704625964164734],[.526966989040375,.695277988910675],[.572058022022247,.695277988910675],[.573521018028259,.703539967536926],[.57683801651001,.711845993995667],[.581691026687622,.720062971115112],[.609944999217987,.639909982681274],[.986046016216278,.560034036636353],[.5867999792099,.69539999961853],[.590372025966644,.701822996139526],[.531915009021759,.601536989212036],[.577268004417419,.585934996604919],[.536915004253387,.593786001205444],[.627542972564697,.473352015018463],[.665585994720459,.495950996875763],[.588353991508484,.546862006187439],[.757824003696442,.14767599105835],[.709249973297119,.201507985591888],[.672684013843536,.256581008434296],[.600408971309662,.74900496006012],[.55826598405838,.261672019958496],[.570303976535797,.187870979309082],[.588165998458862,.109044015407562],[.711045026779175,.398952007293701],[.781069993972778,.435405015945435],[.587247014045715,.398931980133057],[.742869973182678,.355445981025696],[.572156012058258,.437651991844177],[.55186802148819,.536570012569427],[.821442008018494,.457556009292603],[.752701997756958,.457181990146637],[.71375697851181,.467626988887787],[.66711300611496,.460672974586487],[.631101012229919,.447153985500336],[.6008620262146,.432473003864288],[.523481011390686,.405627012252808],[.810747981071472,.523926019668579],[.771045982837677,.348959028720856],[.509127020835876,.562718033790588],[.595292985439301,.485023975372314],[.980530977249146,.401564002037048],[.573499977588654,.420000016689301],[.602994978427887,.548687994480133],[.733529984951019,.376977026462555],[.560611009597778,.519016981124878],[.967685997486115,.644356966018677],[.580985009670258,.387160003185272],[.537728011608124,.505385041236877],[.760966002941132,.779752969741821],[.801778972148895,.831938028335571],[.892440974712372,.54076099395752],[.816350996494293,.740260004997253],[.865594983100891,.333687007427216],[.614073991775513,.883246004581451],[.508952975273132,.579437971115112],[.617941975593567,.508316040039062],[.825608015060425,.397674977779388],[.681214988231659,.39623498916626],[.656635999679565,.400596976280212],[.603900015354156,.710216999053955],[.81208598613739,.588539004325867],[.56801301240921,.944564998149872],[.681007981300354,.898285031318665],[.733752012252808,.869701027870178],[.633830010890961,.398822009563446],[.606792986392975,.39553701877594],[.589659988880157,.391062021255493],[.805015981197357,.342108011245728],[.611334979534149,.362284004688263],[.634037971496582,.355970978736877],[.656635999679565,.355356991291046],[.681214988231659,.35834002494812],[.698584973812103,.363156020641327],[.941866993904114,.319076001644135],[.698584973812103,.387449026107788],[.584177017211914,.624107003211975],[.554318010807037,.566076993942261],[.534153997898102,.62064003944397],[.711217999458313,.819975018501282],[.664629995822906,.852871000766754],[.559099972248077,.902631998062134],[.871706008911133,.791940987110138],[.591234028339386,.373893976211548],[.544341027736664,.451583981513977],[.624562978744507,.924192011356354],[.88577002286911,.615028977394104],[.551338016986847,.695277988910675],[.551980018615723,.704632043838501],[.552887976169586,.715808033943176],[.555167973041534,.730794012546539],[.569944024085999,.767035007476807],[.593203008174896,.685675978660583],[.599261999130249,.681069016456604],[.607599973678589,.677703022956848],[.631937980651855,.663500010967255],[.752032995223999,.601315021514893],[.547226011753082,.420395016670227],[.563543975353241,.359827995300293],[.583841025829315,.368713974952698],[.586614012718201,.692366003990173],[.771915018558502,.683578014373779],[.531597018241882,.352482974529266],[.588370978832245,.804440975189209],[.52079701423645,.442565023899078],[.567984998226166,.493479013442993],[.543282985687256,.819254994392395],[.655317008495331,.745514988899231],[.621008992195129,.574018001556396],[.625559985637665,.78031200170517],[.680198013782501,.570719003677368],[.64276397228241,.604337990283966],[.704662978649139,.621529996395111],[.552012026309967,.862591981887817],[.589071989059448,.508637011051178],[.685944974422455,.775357007980347],[.645735025405884,.812640011310577],[.675342977046967,.703978002071381],[.810858011245728,.646304965019226],[.72012197971344,.714666962623596],[.866151988506317,.682704985141754],[.663187026977539,.644596993923187],[.570082008838654,.466325998306274],[.544561982154846,.548375964164734],[.562758982181549,.558784961700439],[.531987011432648,.530140042304993],[.585271000862122,.335177004337311],[.622952997684479,.32277899980545],[.655896008014679,.320163011550903],[.687132000923157,.322345972061157],[.716481983661652,.333200991153717],[.758756995201111,.382786989212036],[.897013008594513,.468769013881683],[.732392013072968,.424547016620636],[.70211398601532,.433162987232208],[.66652500629425,.433866024017334],[.633504986763,.426087975502014],[.603875994682312,.416586995124817],[.579657971858978,.409945011138916],[.992439985275269,.480777025222778],[.567192018032074,.569419980049133],[.54136598110199,.478899002075195],[.526564002037048,.546118021011353],[.523913025856018,.563830018043518],[.531529009342194,.555056989192963],[.566035985946655,.582329034805298],[.51631098985672,.563053965568542],[.5174720287323,.577877044677734],[.573594987392426,.389806985855103],[.560697972774506,.395331978797913],[.549755990505219,.399751007556915],[.710287988185883,.368252992630005],[.723330020904541,.363372981548309]];function ca(e){return kr(this,void 0,void 0,(function(){var t,n,r,a,i,s,o,c,l,u,h,d,p,f,m,g;return Rr(this,(function(y){switch(y.label){case 0:return t=e.maxContinuousChecks,n=void 0===t?5:t,r=e.detectionConfidence,a=void 0===r?.9:r,i=e.maxFaces,s=void 0===i?10:i,o=e.iouThreshold,c=void 0===o?.3:o,l=e.scoreThreshold,u=void 0===l?.75:l,h=e.shouldLoadIrisModel,d=void 0===h||h,p=e.modelUrl,f=e.detectorModelUrl,m=e.irisModelUrl,d?[4,Promise.all([la(f,s,c,u),ua(p),ha(m)])]:[3,2];case 1:return g=y.sent(),[3,4];case 2:return[4,Promise.all([la(f,s,c,u),ua(p)])];case 3:g=y.sent(),y.label=4;case 4:return[2,new fa(g[0],g[1],n,a,s,d?g[2]:null)]}}))}))}function la(e,t,n,r){return kr(this,void 0,void 0,(function(){return Rr(this,(function(a){return[2,Ur({modelUrl:e,maxFaces:t,iouThreshold:n,scoreThreshold:r})]}))}))}function ua(e){return kr(this,void 0,void 0,(function(){return Rr(this,(function(t){return null!=e?[2,Cr(e)]:[2,Cr("https://tfhub.dev/mediapipe/tfjs-model/facemesh/1/default/1",{fromTFHub:!0})]}))}))}function ha(e){return kr(this,void 0,void 0,(function(){return Rr(this,(function(t){return null!=e?[2,Cr(e)]:[2,Cr("https://tfhub.dev/mediapipe/tfjs-model/iris/1/default/2",{fromTFHub:!0})]}))}))}function da(e,t){if(e.mesh instanceof _.esB){var n=(0,_.lub)((function(){var n=(0,_.RRF)([t-1,0,0]),r=(0,_.RRF)([1,-1,1]);return(0,_.lub)((function(){return[(0,_.zoF)([(0,_.luU)(t-1,(0,_.tPi)(e.boundingBox.topLeft,0,1)),(0,_.tPi)(e.boundingBox.topLeft,1,1)]),(0,_.zoF)([(0,_.luU)(t-1,(0,_.tPi)(e.boundingBox.bottomRight,0,1)),(0,_.tPi)(e.boundingBox.bottomRight,1,1)]),(0,_.dC7)((0,_.luU)(n,e.mesh),r),(0,_.dC7)((0,_.luU)(n,e.scaledMesh),r)]}))})),r=n[0],a=n[1],i=n[2],s=n[3];return Object.assign({},e,{boundingBox:{topLeft:r,bottomRight:a},mesh:i,scaledMesh:s})}return Object.assign({},e,{boundingBox:{topLeft:[t-1-e.boundingBox.topLeft[0],e.boundingBox.topLeft[1]],bottomRight:[t-1-e.boundingBox.bottomRight[0],e.boundingBox.bottomRight[1]]},mesh:e.mesh.map((function(e){var n=e.slice(0);return n[0]=t-1-e[0],n})),scaledMesh:e.scaledMesh.map((function(e){var n=e.slice(0);return n[0]=t-1-e[0],n}))})}var pa,fa=function(){function e(e,t,n,r,a,i){this.kind="MediaPipeFaceMesh",this.pipeline=new sa(e,t,192,192,n,a,i),this.detectionConfidence=r}return e.getAnnotations=function(){return zr},e.getUVCoords=function(){return oa},e.prototype.estimateFaces=function(e){return kr(this,void 0,void 0,(function(){var t,n,r,a,i,s,o,c,l,u,h,d,p=this;return Rr(this,(function(f){switch(f.label){case 0:if(t=e.returnTensors,n=void 0!==t&&t,r=e.flipHorizontal,a=void 0!==r&&r,i=e.predictIrises,s=void 0===i||i,o=e.input,s&&null==this.pipeline.irisModel)throw new Error("The iris model was not loaded as part of facemesh. Please initialize the model with facemesh.load({shouldLoadIrisModel: true}).");return c=function(e){return e instanceof _.esB?[e.shape[0],e.shape[1]]:[e.height,e.width]}(o),l=c[1],u=(0,_.lub)((function(){return o instanceof _.esB||(o=_.Xhn.n(o)),(0,_.dt4)((0,_.pju)(o,"float32"),0)})),"webgl"!==(0,_.N_N)()?[3,2]:(d=(0,_.OBj)().get("WEBGL_PACK_DEPTHWISECONV"),(0,_.OBj)().set("WEBGL_PACK_DEPTHWISECONV",!0),[4,this.pipeline.predict(u,s)]);case 1:return h=f.sent(),(0,_.OBj)().set("WEBGL_PACK_DEPTHWISECONV",d),[3,4];case 2:return[4,this.pipeline.predict(u,s)];case 3:h=f.sent(),f.label=4;case 4:return u.dispose(),null!=h&&h.length>0?[2,Promise.all(h.map((function(e,t){return kr(p,void 0,void 0,(function(){var r,i,o,c,u,h,d,p,f,m,g,y,x,v,b=this;return Rr(this,(function(w){switch(w.label){case 0:return r=e.coords,i=e.scaledCoords,o=e.box,c=e.flag,u=[c],n||(u=u.concat([r,i])),[4,Promise.all(u.map((function(e){return kr(b,void 0,void 0,(function(){return Rr(this,(function(t){return[2,e.array()]}))}))})))];case 1:if(h=w.sent(),d=h[0],c.dispose(),d<this.detectionConfidence&&this.pipeline.clearRegionOfInterest(t),n)return p={kind:"MediaPipePredictionTensors",faceInViewConfidence:d,mesh:r,scaledMesh:i,boundingBox:{topLeft:(0,_.RRF)(o.startPoint),bottomRight:(0,_.RRF)(o.endPoint)}},a?[2,da(p,l)]:[2,p];for(v in f=h.slice(1),m=f[0],g=f[1],i.dispose(),r.dispose(),y={kind:"MediaPipePredictionValues",faceInViewConfidence:d,boundingBox:{topLeft:o.startPoint,bottomRight:o.endPoint},mesh:m,scaledMesh:g},a&&(y=da(y,l)),x={},zr)(s||!1===v.includes("Iris"))&&(x[v]=zr[v].map((function(e){return y.scaledMesh[e]})));return y.annotations=x,[2,y]}}))}))})))]:[2,[]]}}))}))},e}();function ma(e,t){return void 0===e&&(e=pa.mediapipeFacemesh),void 0===t&&(t={}),kr(this,void 0,void 0,(function(){return Rr(this,(function(n){if(e===pa.mediapipeFacemesh)return[2,ca(t)];throw new Error(e+" is not a valid package name.")}))}))}(pa||(pa={})).mediapipeFacemesh="mediapipe-facemesh"},8166:(e,t,n)=>{"use strict";n.d(t,{H:()=>a});var r=n(5360);function a(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&r.D5U.hu("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}},8912:(e,t,n)=>{"use strict";n.r(t),n.d(t,{MathBackendCPU:()=>s,shared:()=>o,version_cpu:()=>c});var r=n(5360),a=n(8166);const i=r.GDt.ZA;class s extends r.Zuw{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new r.JLz(this,(0,r.SRH)())}nextDataId(){return s.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,(0,r.OBj)().get("IS_NODE")&&r.Wap.warn("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:n,refCount:1}),a}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&r.D5U.HD(n[0])){const i=n.map((e=>r.D5U.YW(e)));a=this.write(i,e,t)}else a=this.write(n,e,t);return{dataId:a,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return r.Wap.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>r.D5U.v5(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,r.f3b)(e.shape,e.dtype,n)}makeOutput(e,t,n){const a=this.write(e,t,n);return(0,r.SRH)().makeTensorFromDataId(a,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=r.D5U.zO();return e(),{kernelMs:r.D5U.zO()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){(0,a.H)([e],"where");const t=this.readSync(e.dataId);return i(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}s.nextDataId=0;var o=n(5226);const c="3.2.0";(0,r.jqO)("cpu",(()=>new s),1);var l=n(6738);const u=(0,l.A)(r.SX0,(e=>e>=0?e:Math.exp(e)-1)),h={kernelName:r.SX0,backendName:"cpu",kernelFunc:u};var d=n(1775);function p(e){const{inputs:t,backend:n,attrs:i}=e,{x:s}=t,{alpha:o}=i;(0,a.H)([s],"leakyRelu");const c=r.D5U.NA(s.shape),l=n.data.get(s.dataId).values,u=r.D5U.WP("float32",c);for(let e=0;e<l.length;e++)u[e]=l[e]<0?o*l[e]:l[e];return n.makeTensorInfo(s.shape,"float32",u)}const f={kernelName:r.J$2,backendName:"cpu",kernelFunc:p};var m=n(3533);const g=(0,m.b)(((e,t)=>e<0?t*e:e));function y(e){const{inputs:t,backend:n}=e,{x:r,alpha:i}=t;(0,a.H)([r,i],"prelu");const s=n.data.get(r.dataId).values,o=n.data.get(i.dataId).values,[c,l]=g(r.shape,i.shape,s,o,r.dtype);return n.makeTensorInfo(l,r.dtype,c)}const x={kernelName:r.o0g,backendName:"cpu",kernelFunc:y},v=(0,l.A)(r.qkr,(e=>Math.max(0,e))),b={kernelName:r.qkr,backendName:"cpu",kernelFunc:v},w=(0,l.A)(r.SbG,(e=>Math.min(Math.max(0,e),6))),_={kernelName:r.SbG,backendName:"cpu",kernelFunc:w};function T(e,t,n,r,a){if("linear"===n)return(0,d.y)({inputs:{x:t},backend:e});if("relu"===n)return v({inputs:{x:t},backend:e});if("elu"===n)return u({inputs:{x:t},backend:e});if("relu6"===n)return w({inputs:{x:t},backend:e});if("prelu"===n)return y({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return p({inputs:{x:t},backend:e,attrs:{alpha:a}});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}var S=n(2779);function E(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{shape:s}=a,o=r.D5U.NA(i.shape),c=r.D5U.JZ(s,o),l=r.D5U.NA(c);r.D5U.hu(o===l,(()=>`The new shape (${c}) has ${l} elements and the old shape (${i.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(i.dataId);const u=n.data.get(i.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=c,t.shape=c}return{dataId:i.dataId,shape:c,dtype:i.dtype}}const M={kernelName:r.HZH,backendName:"cpu",kernelFunc:E};function I(e){const{inputs:t,backend:n,attrs:i}=e,{a:s,b:o}=t,{transposeA:c,transposeB:l}=i;(0,a.H)([s,o],"matMul");const u=s.shape.length,h=o.shape.length,d=c?s.shape[u-2]:s.shape[u-1],p=l?o.shape[h-1]:o.shape[h-2],f=c?s.shape[u-1]:s.shape[u-2],m=l?o.shape[h-2]:o.shape[h-1],g=s.shape.slice(0,-2),y=o.shape.slice(0,-2),x=r.D5U.NA(g),v=r.D5U.NA(y),b=x===v||1===x||1===v;r.D5U.hu(u>=2&&h>=2&&b,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${g}) and (${y}).`));const w=(x>v?s.shape.slice(0,-2):o.shape.slice(0,-2)).concat([f,m]);r.D5U.hu(d===p,(()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${s.shape} and ${o.shape} and transposeA=${c} and transposeB=${l} must match.`));const _=l?[v,m,p]:[v,p,m],T=E({inputs:{x:s},backend:n,attrs:{shape:c?[x,d,f]:[x,f,d]}}),S=E({inputs:{x:o},backend:n,attrs:{shape:_}}),M=c?T.shape[1]:T.shape[2],I=c?T.shape[2]:T.shape[1],N=l?S.shape[1]:S.shape[2],C=Math.max(x,v),A=n.data.get(T.dataId).values,k=n.data.get(S.dataId).values,R=r.D5U.e3(T.shape),D=r.D5U.e3(S.shape),[L,O,P]=c?[R[0],1,R[1]]:[R[0],R[1],1],[F,B,$]=l?[1,D[1],D[0]]:[D[1],1,D[0]],U=I*N,z=(0,r.f3b)([C,I,N],T.dtype),G=z.values,H=n.blockSize;for(let e=0;e<C;e++)for(let t=0;t<I;t+=H)for(let n=0;n<N;n+=H)for(let r=0;r<M;r+=H){const a=Math.min(t+H,I),i=Math.min(n+H,N),s=Math.min(r+H,M);for(let o=t;o<a;o++)for(let t=n;t<i;t++){let n=0;for(let a=r;a<s;a++){const r=Math.min(e,x-1)*L,i=Math.min(e,v-1)*$;n+=A[r+o*O+a*P]*k[a*F+t*B+i]}G[e*U+(o*N+t)]+=n}}return n.disposeIntermediateTensorInfo(T),n.disposeIntermediateTensorInfo(S),n.makeTensorInfo(w,z.dtype,z.values)}const N={kernelName:r.XLW,backendName:"cpu",kernelFunc:I},C={kernelName:r.usg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:i,bias:s,preluActivationWeights:o}=t,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:h}=r;let d,p,f;const m=[];d=I({inputs:{a,b:i},attrs:{transposeA:c,transposeB:l},backend:n}),s&&(p=(0,S.IH)({inputs:{a:d,b:s},backend:n}),m.push(d),d=p),u&&(f=T(n,d,u,o,h),m.push(d),d=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return d}};var A=n(224);const k=(0,l.A)(r.VGw,(e=>Math.acos(e))),R={kernelName:r.VGw,backendName:"cpu",kernelFunc:k},D=(0,l.A)(r.SpW,(e=>Math.acosh(e))),L={kernelName:r.SpW,backendName:"cpu",kernelFunc:D},O={kernelName:r.Xze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,i=t;(0,a.H)(t,"addN");const s=i.map((e=>n.data.get(e.dataId).values)),o=(0,r.f3b)(i[0].shape,i[0].dtype),c=o.values;for(let e=0;e<i.length;e++){const t=s[e];for(let e=0;e<c.length;e++)c[e]+=t[e]}return n.makeTensorInfo(o.shape,o.dtype,o.values)}};var P=n(4802);const F={kernelName:r.oT6,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:s}=t,{axis:o,keepDims:c}=i;(0,a.H)(s,"all");const l=r.D5U.EC(o,s.shape);let u=l;const h=r.Wap.getAxesPermutation(u,s.shape.length);let d=s;null!=h&&(d=(0,P.p)({inputs:{x:s},backend:n,attrs:{perm:h}}),u=r.Wap.getInnerMostAxes(u.length,s.shape.length)),r.Wap.assertAxesAreInnerMostDims("all",u,d.shape.length);const[p,f]=r.Wap.computeOutAndReduceShapes(d.shape,u),m=r.D5U.NA(f),g=r.D5U.wT(r.D5U.NA(p),d.dtype),y=n.data.get(d.dataId).values;for(let e=0;e<g.length;++e){const t=e*m;let n=y[t];for(let e=0;e<m;++e){const r=y[t+e];n=n&&r}g[e]=n}null!=h&&n.disposeIntermediateTensorInfo(d);const x=n.makeTensorInfo(p,d.dtype,g);if(c){const e=E({inputs:{x},backend:n,attrs:{shape:r.Wap.expandShapeToKeepDim(p,l)}});return n.disposeIntermediateTensorInfo(x),e}return x}},B={kernelName:r.IKK,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:s}=t,{axis:o,keepDims:c}=i;(0,a.H)(s,"any");const l=r.D5U.EC(o,s.shape);let u=l;const h=r.Wap.getAxesPermutation(u,s.shape.length);let d=s;null!=h&&(d=(0,P.p)({inputs:{x:s},backend:n,attrs:{perm:h}}),u=r.Wap.getInnerMostAxes(u.length,s.shape.length)),r.Wap.assertAxesAreInnerMostDims("any",u,d.shape.length);const[p,f]=r.Wap.computeOutAndReduceShapes(d.shape,u),m=r.D5U.NA(f),g=r.D5U.wT(r.D5U.NA(p),d.dtype),y=n.data.get(d.dataId).values;for(let e=0;e<g.length;++e){const t=e*m;let n=y[t];for(let e=0;e<m;++e){const r=y[t+e];n=n||r}g[e]=n}null!=h&&n.disposeIntermediateTensorInfo(d);const x=n.makeTensorInfo(p,d.dtype,g);if(c){const e=E({inputs:{x},backend:n,attrs:{shape:r.Wap.expandShapeToKeepDim(p,l)}});return n.disposeIntermediateTensorInfo(x),e}return x}},$={kernelName:r.sJF,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:s}=t,{axis:o}=i;(0,a.H)(s,"argMax");let c=r.D5U.EC(o,s.shape);const l=r.Wap.getAxesPermutation(c,s.shape.length);let u=s;const h=[];null!=l&&(u=(0,P.p)({inputs:{x:s},backend:n,attrs:{perm:l}}),h.push(u),c=r.Wap.getInnerMostAxes(c.length,u.shape.length)),c=[c[0]],r.Wap.assertAxesAreInnerMostDims("argMax",c,u.shape.length);const[d,p]=r.Wap.computeOutAndReduceShapes(u.shape,c),f=r.D5U.NA(d),m=r.D5U.wT(f,"int32"),g=r.D5U.NA(p),y=n.data.get(u.dataId).values;for(let e=0;e<m.length;++e){const t=e*g;let n=y[t],r=0;for(let e=0;e<g;++e){const a=y[t+e];a>n&&(n=a,r=e)}m[e]=r}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(d,"int32",m)}},U={kernelName:r.aJk,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:s}=t,{axis:o}=i;(0,a.H)(s,"argMin");let c=r.D5U.EC(o,s.shape);const l=r.Wap.getAxesPermutation(c,s.shape.length);let u=s;const h=[];null!=l&&(u=(0,P.p)({inputs:{x:s},backend:n,attrs:{perm:l}}),h.push(u),c=r.Wap.getInnerMostAxes(c.length,u.shape.length)),c=[c[0]],r.Wap.assertAxesAreInnerMostDims("argMin",c,u.shape.length);const[d,p]=r.Wap.computeOutAndReduceShapes(u.shape,c),f=r.D5U.NA(d),m=r.D5U.wT(f,"int32"),g=r.D5U.NA(p),y=n.data.get(u.dataId).values;for(let e=0;e<m.length;++e){const t=e*g;let n=y[t],r=0;for(let e=0;e<g;++e){const a=y[t+e];a<n&&(n=a,r=e)}m[e]=r}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(d,"int32",m)}},z=(0,l.A)(r.M2y,(e=>Math.asin(e))),G={kernelName:r.M2y,backendName:"cpu",kernelFunc:z},H=(0,l.A)(r.qw7,(e=>Math.asinh(e))),W={kernelName:r.qw7,backendName:"cpu",kernelFunc:H},V=(0,l.A)(r.jMg,(e=>Math.atan(e))),j={kernelName:r.jMg,backendName:"cpu",kernelFunc:V};var X=n(6205);const q=(0,m.b)(((e,t)=>Math.atan2(e,t))),Y=(0,X.j)(r.QCc,q),K={kernelName:r.QCc,backendName:"cpu",kernelFunc:Y},Z=(0,l.A)(r.Oyi,(e=>Math.atanh(e))),J={kernelName:r.Oyi,backendName:"cpu",kernelFunc:Z};function Q(e,t,n,a,i,s){const o=i.strideHeight,c=i.strideWidth,l=i.dilationHeight,u=i.dilationWidth,h=i.effectiveFilterHeight,d=i.effectiveFilterWidth,p=i.padInfo.top,f=i.padInfo.left,m="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=(0,r.f3b)(i.outShape,n),y=g.values,x=i.outShape[1]*i.outShape[2]*i.outShape[3],v=i.outShape[2]*i.outShape[3],b=i.outShape[3];for(let t=0;t<i.batchSize;++t){const n=t*x,r=t*a[0];for(let t=0;t<i.inChannels;++t)for(let g=0;g<i.outHeight;++g){const x=g*o-p,w=Math.max(0,x),_=Math.min(i.inHeight,h+x),T=n+g*v;for(let n=0;n<i.outWidth;++n){const o=n*c-f,h=Math.max(0,o),p=Math.min(i.inWidth,d+o);let g=m,x=0,v=0;for(let n=w;n<_;n+=l){const i=r+n*a[1];for(let n=h;n<p;n+=u){const r=e[i+n*a[2]+t];"max"===s&&r>g?g=r:"avg"===s&&(x+=r,v++)}if(isNaN(g))break}y[T+n*b+t]="avg"===s?x/v:g}}}return g}function ee(e,t,n,a,i=!1,s=!1){const o=(0,r.f3b)(a.outShape,"int32"),c=a.strideHeight,l=a.strideWidth,u=a.dilationHeight,h=a.dilationWidth,d=a.effectiveFilterHeight,p=a.effectiveFilterWidth,f=a.padInfo.top,m=a.padInfo.left,g=(0,r.f3b)(t,n,e);for(let e=0;e<a.batchSize;++e)for(let t=0;t<a.inChannels;++t)for(let n=0;n<a.outHeight;++n){const r=n*c-f;let y=r;for(;y<0;)y+=u;const x=Math.min(a.inHeight,d+r);for(let c=0;c<a.outWidth;++c){const d=c*l-m;let f=d;for(;f<0;)f+=h;const v=Math.min(a.inWidth,p+d);let b=Number.NEGATIVE_INFINITY,w=-1;for(let n=y;n<x;n+=u){const o=n-r;for(let r=f;r<v;r+=h){const c=r-d,l=g.get(e,n,r,t);l>b&&(b=l,w=i?s?((e*a.inHeight+n)*a.inWidth+r)*a.inChannels+t:(n*a.inWidth+r)*a.inChannels+t:o*p+c)}}o.set(w,e,n,c,t)}}return o}function te(e,t,n,a,i,s){const o=i.strideDepth,c=i.strideHeight,l=i.strideWidth,u=i.dilationDepth,h=i.dilationHeight,d=i.dilationWidth,p=i.effectiveFilterDepth,f=i.effectiveFilterHeight,m=i.effectiveFilterWidth,g=i.padInfo.front,y=i.padInfo.top,x=i.padInfo.left,v="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,b=(0,r.f3b)(i.outShape,n),w=b.values,_=i.outShape[1]*i.outShape[2]*i.outShape[3]*i.outShape[4],T=i.outShape[2]*i.outShape[3]*i.outShape[4],S=i.outShape[3]*i.outShape[4],E=i.outShape[4];for(let t=0;t<i.batchSize;++t){const n=t*_,r=t*a[0];for(let t=0;t<i.inChannels;++t)for(let b=0;b<i.outDepth;++b){const _=b*o-g;let M=_;for(;M<0;)M+=u;const I=Math.min(i.inDepth,p+_),N=n+b*T;for(let n=0;n<i.outHeight;++n){const o=n*c-y;let p=o;for(;p<0;)p+=h;const g=Math.min(i.inHeight,f+o),b=N+n*S;for(let n=0;n<i.outWidth;++n){const o=n*l-x;let c=o;for(;c<0;)c+=d;const f=Math.min(i.inWidth,m+o),y=b+n*E;let _=v,T=0,S=0;for(let n=M;n<I;n+=u){const i=r+n*a[1];for(let n=p;n<g;n+=h){const r=i+n*a[2];for(let n=c;n<f;n+=d){const i=e[r+n*a[3]+t];if("max"===s&&i>_?_=i:"avg"===s&&(T+=i,S++),isNaN(_))break}if(isNaN(_))break}if(isNaN(_))break}w[y+t]="avg"===s?T/S:_}}}}return b}const ne={kernelName:r.JhU,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:s}=t;(0,a.H)(s,"avgPool");const{filterSize:o,strides:c,pad:l,dimRoundingMode:u}=i;r.D5U.hu(r.Wap.eitherStridesOrDilationsAreOne(c,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${c} and dilations '1'`));const h=r.Wap.computePool2DInfo(s.shape,o,c,1,l,u);let p;if(1===h.filterWidth&&1===h.filterHeight&&r.D5U.cO(h.inShape,h.outShape))p=(0,d.y)({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=r.D5U.e3(s.shape),a=Q(e,s.shape,s.dtype,t,h,"avg");p=n.makeTensorInfo(h.outShape,s.dtype,a.values)}return p}},re={kernelName:r._k9,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:s}=t,{filterSize:o,strides:c,pad:l,dimRoundingMode:u,dataFormat:h}=i;(0,a.H)(s,"avgPool3d");const d=r.Wap.computePool3DInfo(s.shape,o,c,1,l,u,h),p=te(n.data.get(s.dataId).values,s.shape,s.dtype,r.D5U.e3(s.shape),d,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}},ae={kernelName:r.IMb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{dy:s,input:o}=t,{filterSize:c,strides:l,pad:u,dimRoundingMode:h}=i;(0,a.H)([s,o],"avgPool3DGrad");const d=r.Wap.computePool3DInfo(o.shape,c,l,1,u,h),p=d.strideDepth,f=d.strideHeight,m=d.strideWidth,g=d.filterDepth,y=d.filterHeight,x=d.filterWidth,v=d.dilationDepth,b=d.dilationHeight,w=d.dilationWidth,_=d.effectiveFilterDepth,T=d.effectiveFilterHeight,S=d.effectiveFilterWidth,E=_-1-d.padInfo.front,M=S-1-d.padInfo.left,I=T-1-d.padInfo.top,N=(0,r.f3b)(o.shape,"float32"),C=1/(g*y*x),A=n.bufferSync(s);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inDepth;++n)for(let r=0;r<d.inHeight;++r)for(let a=0;a<d.inWidth;++a){const i=n-E,s=r-I,o=a-M;let c=0;for(let n=0;n<_;n+=v){const r=(i+n)/p;if(!(r<0||r>=d.outDepth||Math.floor(r)!==r))for(let n=0;n<T;n+=b){const a=(s+n)/f;if(!(a<0||a>=d.outHeight||Math.floor(a)!==a))for(let n=0;n<S;n+=w){const i=(o+n)/m;i<0||i>=d.outWidth||Math.floor(i)!==i||(c+=A.get(e,r,a,i,t))}}}N.set(c*C,e,n,r,a,t)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}},ie={kernelName:r.ROF,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{dy:s,input:o}=t,c=o;(0,a.H)([s,o],"avgPoolGrad");const{filterSize:l,strides:u,pad:h}=i,d=r.Wap.computePool2DInfo(c.shape,l,u,1,h),p=d.strideHeight,f=d.strideWidth,m=d.filterHeight,g=d.filterWidth,y=d.dilationHeight,x=d.dilationWidth,v=d.effectiveFilterHeight,b=d.effectiveFilterWidth,w=b-1-d.padInfo.left,_=v-1-d.padInfo.top,T=(0,r.f3b)(c.shape,"float32"),S=1/(m*g),E=n.data.get(s.dataId).values,M=(0,r.f3b)(s.shape,"float32",E);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const a=n-_,i=r-w;let s=0;for(let n=0;n<v;n+=y){const r=(a+n)/p;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=x){const a=(i+n)/f;a<0||a>=d.outWidth||Math.floor(a)!==a||(s+=M.get(e,r,a,t))}}T.set(s*S,e,n,r,t)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}},se={kernelName:r.sHE,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:s,scale:o,offset:c,mean:l,variance:u}=t;r.D5U.hu(l.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),r.D5U.hu(null==c||l.shape.length===c.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),r.D5U.hu(null==o||l.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),(0,a.H)([s,l,u,o,c],"batchNorm");let{varianceEpsilon:h}=i;null==h&&(h=.001);const d=n.data.get(s.dataId).values,p=n.data.get(l.dataId).values,f=n.data.get(u.dataId).values,m=o?n.data.get(o.dataId).values:new Float32Array([1]),g=c?n.data.get(c.dataId).values:new Float32Array([0]),y=new Float32Array(d.length),x=g.length,v=m.length,b=f.length,w=p.length;let _=0,T=0,S=0,E=0;for(let e=0;e<d.length;++e)y[e]=g[_++]+(d[e]-p[T++])*m[S++]/Math.sqrt(f[E++]+h),_>=x&&(_=0),T>=w&&(T=0),S>=v&&(S=0),E>=b&&(E=0);return n.makeTensorInfo(s.shape,s.dtype,y)}};var oe=n(2578);const ce={kernelName:r.zws,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:s}=t,{blockShape:o,crops:c}=i;(0,a.H)([s],"batchToSpaceND");const l=o.reduce(((e,t)=>e*t)),u=r.Wap.getReshaped(s.shape,o,l),h=r.Wap.getPermuted(u.length,o.length),d=r.Wap.getReshapedPermuted(s.shape,o,l),p=r.Wap.getSliceBeginCoords(c,o.length),f=r.Wap.getSliceSize(d,c,o.length),m=E({inputs:{x:s},backend:n,attrs:{shape:u}}),g=(0,P.p)({inputs:{x:m},backend:n,attrs:{perm:h}}),y=E({inputs:{x:g},backend:n,attrs:{shape:d}}),x=(0,oe.tP)({inputs:{x:y},backend:n,attrs:{begin:p,size:f}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),x}};var le=n(8607);const ue={kernelName:r.zvY,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:i}=t,{size:s}=r,o=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values,l=(0,le.W)(o,c,i.dtype,i.shape,s);return n.makeTensorInfo([s],i.dtype,l)}};var he=n(9258),de=n(4769);const pe=(0,l.A)(r.xnO,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),fe={kernelName:r.xnO,backendName:"cpu",kernelFunc:pe};var me=n(6961);const ge={kernelName:r.yj2,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,a=new Float32Array(r.D5U.NA(t.shape)),i=n.data.get(t.dataId),s=i.complexTensorInfos.real,o=i.complexTensorInfos.imag,c=n.data.get(s.dataId).values,l=n.data.get(o.dataId).values;for(let e=0;e<c.length;e++){const t=c[e],n=l[e];a[e]=Math.hypot(t,n)}return n.makeOutput(a,t.shape,"float32")}};var ye=n(8926);function xe(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,i=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,i)}const ve={kernelName:r.J_u,backendName:"cpu",kernelFunc:xe};var be=n(2186);function we(e){const{inputs:t,backend:n,attrs:a}=e,{axis:i}=a,s=r.D5U.EC(i,t[0].shape)[0];let o=r.Wap.computeOutShape(t.map((e=>e.shape)),s);if(0===r.D5U.NA(o))return n.makeTensorInfo(o,t[0].dtype,[]);const c=t.filter((e=>r.D5U.NA(e.shape)>0));if(1===c.length)return(0,d.y)({inputs:{x:c[0]},backend:n});const l=c.map((e=>e.shape));if(r.Wap.assertParamsConsistent(l,s),"complex64"===c[0].dtype){const e=c.map((e=>(0,be.k)({inputs:{input:e},backend:n}))),t=c.map((e=>xe({inputs:{input:e},backend:n}))),r=we({inputs:e,backend:n,attrs:{axis:s}}),a=we({inputs:t,backend:n,attrs:{axis:s}}),i=(0,me.P)({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}const u=c.map((e=>{const t=r.D5U.NA(e.shape.slice(s));return E({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),h=u.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));o=r.Wap.computeOutShape(u.map((e=>e.shape)),1);const p=1===u[0].shape[0],f=(0,ye.j)(h,o,t[0].dtype,p),m=r.Wap.computeOutShape(c.map((e=>e.shape)),s),g=n.makeTensorInfo(m,t[0].dtype,f);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}const _e={kernelName:r.Eh3,backendName:"cpu",kernelFunc:we};function Te(e){const{inputs:t,backend:n,attrs:i}=e,{x:s,filter:o}=t,{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d}=i;(0,a.H)([s,o],"conv2d");const p=r.Wap.convertConv2DDataFormat(u),f=r.Wap.computeConv2DInfo(s.shape,o.shape,c,h,l,d,!1,p),m=f.filterHeight,g=f.filterWidth,y=f.dilationHeight,x=f.dilationWidth,v=f.padInfo.left,b=f.padInfo.top,w="channelsLast"===f.dataFormat,_=new r.YDk(f.outShape,s.dtype),T=r.D5U.e3(s.shape),S=r.D5U.e3(o.shape),E=T[0],M=w?T[1]:T[2],I=w?T[2]:1,N=w?1:T[1],C=_.strides[0],A=w?_.strides[1]:_.strides[2],k=w?_.strides[2]:1,R=w?1:_.strides[1],D=n.data.get(s.dataId).values,L=n.data.get(o.dataId).values,O=_.values;for(let e=0;e<f.batchSize;++e){const t=e*E,n=e*C;for(let e=0;e<f.outHeight;++e){const r=n+e*A,a=e*f.strideHeight-b;for(let e=0;e<m;++e){const n=a+e*y;if(n<0||n>=f.inHeight)continue;const i=e*S[0],s=t+n*M;for(let e=0;e<f.outWidth;++e){const t=r+e*k,n=e*f.strideWidth-v;for(let e=0;e<g;++e){const r=n+e*x;if(r<0||r>=f.inWidth)continue;const a=s+r*I;let o=i+e*S[1];for(let e=0;e<f.inChannels;++e){const n=D[a+e*N];for(let e=0;e<f.outChannels;++e)O[t+e*R]+=n*L[o+e];o+=f.outChannels}}}}}}return n.makeTensorInfo(_.shape,_.dtype,O)}const Se={kernelName:r.mhS,backendName:"cpu",kernelFunc:Te},Ee={kernelName:r.wUP,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:s,dy:o}=t,{strides:c,pad:l,dataFormat:u,dimRoundingMode:h,filterShape:d}=i;(0,a.H)([s,o],"conv2dBackpropFilter");const p=r.Wap.convertConv2DDataFormat(u),f=r.Wap.computeConv2DInfo(s.shape,d,c,1,l,h,!1,p),{strideHeight:m,strideWidth:g,filterHeight:y,filterWidth:x}=f,v="channelsLast"===f.dataFormat,b=new r.YDk(f.filterShape,"float32"),w=f.padInfo.left,_=f.padInfo.top,T=n.data.get(s.dataId).values,S=n.data.get(o.dataId).values,E=new r.YDk(s.shape,s.dtype,T),M=new r.YDk(o.shape,o.dtype,S);for(let e=0;e<y;++e){const t=Math.max(0,Math.ceil((_-e)/m)),n=Math.min(f.outHeight,(f.inHeight+_-e)/m);for(let r=0;r<x;++r){const a=Math.max(0,Math.ceil((w-r)/g)),i=Math.min(f.outWidth,(f.inWidth+w-r)/g);for(let s=0;s<f.inChannels;++s)for(let o=0;o<f.outChannels;++o){let c=0;for(let l=0;l<f.batchSize;++l)for(let u=t;u<n;++u){const t=e+u*m-_;for(let e=a;e<i;++e){const n=r+e*g-w;c+=v?E.get(l,t,n,s)*M.get(l,u,e,o):E.get(l,s,t,n)*M.get(l,o,u,e)}}b.set(c,e,r,s,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},Me={kernelName:r.wm,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{dy:s,filter:o}=t,{inputShape:c,strides:l,pad:u,dataFormat:h,dimRoundingMode:d}=i;(0,a.H)([s,o],"conv2dBackpropInput");const p=r.D5U.e3(o.shape),f=r.D5U.e3(s.shape);let m=r.Wap.convertConv2DDataFormat(h);const g=r.Wap.computeConv2DInfo(c,o.shape,l,1,u,d,!1,m),y=new r.YDk(g.inShape,"float32"),x=y.values,v=n.data.get(s.dataId).values,b=n.data.get(o.dataId).values,[w,_,T]=p,{batchSize:S,filterHeight:E,filterWidth:M,inChannels:I,inHeight:N,inWidth:C,outChannels:A,outHeight:k,outWidth:R,strideHeight:D,strideWidth:L}=g;m=g.dataFormat;const O=E-1-g.padInfo.top,P=M-1-g.padInfo.left,F="channelsLast"===m,B=y.strides[0],$=F?y.strides[1]:y.strides[2],U=F?y.strides[2]:1,z=F?1:y.strides[1],G=f[0],H=F?f[1]:f[2],W=F?f[2]:1,V=F?1:f[1];for(let e=0;e<S;++e)for(let t=0;t<I;++t)for(let n=0;n<N;++n){const r=n-O,a=Math.max(0,Math.ceil(r/D)),i=Math.min(k,(E+r)/D);for(let s=0;s<C;++s){const o=s-P,c=Math.max(0,Math.ceil(o/L)),l=Math.min(R,(M+o)/L);let u=0;for(let n=a;n<i;++n){const a=n*D-r;for(let r=c;r<l;++r){const i=G*e+H*n+W*r,s=w*(E-1-a)+_*(M-1-(r*L-o))+T*t;for(let e=0;e<A;++e)u+=v[i+V*e]*b[s+e]}}x[B*e+$*n+U*s+z*t]=u}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},Ie={kernelName:r.x12,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:s,filter:o}=t,{strides:c,pad:l,dilations:u}=i;(0,a.H)([s,o],"conv3d");const h=r.Wap.computeConv3DInfo(s.shape,o.shape,c,u,l),{filterDepth:d,filterHeight:p,filterWidth:f,dilationDepth:m,dilationHeight:g,dilationWidth:y,padInfo:x}=h,v=x.front,b=x.left,w=x.top,_=new r.YDk(h.outShape,s.dtype),T=n.data.get(s.dataId).values,S=n.data.get(o.dataId).values,E=_.values,M=r.D5U.e3(s.shape),I=r.D5U.e3(o.shape);for(let e=0;e<h.batchSize;++e){const t=e*M[0],n=e*_.strides[0];for(let e=0;e<h.outDepth;++e){const r=n+e*_.strides[1],a=e*h.strideDepth-v;for(let e=0;e<d;++e){const n=a+e*m;if(n<0||n>=h.inDepth)continue;const i=e*I[0],s=t+n*M[1];for(let e=0;e<h.outHeight;++e){const t=r+e*_.strides[2],n=e*h.strideHeight-w;for(let e=0;e<p;++e){const r=n+e*g;if(r<0||r>=h.inHeight)continue;const a=i+e*I[1],o=s+r*M[2];for(let e=0;e<h.outWidth;++e){const n=t+e*h.outChannels,r=e*h.strideWidth-b;for(let e=0;e<f;++e){const t=r+e*y;if(t<0||t>=h.inWidth)continue;const i=a+e*I[2],s=o+t*h.inChannels;let c=i;for(let e=0;e<h.inChannels;++e){const t=T[s+e];for(let e=0;e<h.outChannels;++e)E[n+e]+=t*S[c+e];c+=h.outChannels}}}}}}}}return n.makeTensorInfo(_.shape,_.dtype,_.values)}},Ne={kernelName:r.o2y,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:s,dy:o}=t,{strides:c,pad:l,filterShape:u}=i;(0,a.H)([s,o],"conv3dBackpropFilterV2");const h=r.D5U.e3(s.shape),d=r.D5U.e3(o.shape),p=r.Wap.computeConv3DInfo(s.shape,u,c,1,l),f=p.strideDepth,m=p.strideHeight,g=p.strideWidth,y=p.filterDepth,x=p.filterHeight,v=p.filterWidth,b=new r.YDk(p.filterShape,"float32"),w=b.values,[_,T,S,E]=b.strides,M=n.data.get(o.dataId).values,[I,N,C,A]=d,k=n.data.get(s.dataId).values,[R,D,L,O]=h,P=p.padInfo.front,F=p.padInfo.left,B=p.padInfo.top;for(let e=0;e<y;++e){const t=Math.max(0,Math.ceil((P-e)/f)),n=Math.min(p.outDepth,(p.inDepth+P-e)/f),r=e*_;for(let a=0;a<x;++a){const i=Math.max(0,Math.ceil((B-a)/m)),s=Math.min(p.outHeight,(p.inHeight+B-a)/m),o=a*T+r;for(let r=0;r<v;++r){const c=Math.max(0,Math.ceil((F-r)/g)),l=Math.min(p.outWidth,(p.inWidth+F-r)/g),u=r*S+o;for(let o=0;o<p.inChannels;++o){const h=o*E+u;for(let u=0;u<p.outChannels;++u){let d=0;for(let h=0;h<p.batchSize;++h){const p=h*R,y=h*I;for(let h=t;h<n;++h){const t=(e+h*f-P)*D+p,n=h*N+y;for(let e=i;e<s;++e){const i=(a+e*m-B)*L+t,s=e*C+n;for(let e=c;e<l;++e){const t=e*A+s;d+=k[(r+e*g-F)*O+i+o]*M[t+u]}}}}w[h+u]=d}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},Ce={kernelName:r.ik2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{dy:s,filter:o}=t,{pad:c,strides:l,inputShape:u}=i;(0,a.H)([s],"conv3dBackpropInputV2");const h=r.D5U.e3(s.shape),d=r.D5U.e3(o.shape),p=r.Wap.computeConv3DInfo(u,o.shape,l,1,c),f=new r.YDk(p.inShape,"float32"),m=f.values,[g,y,x,v]=f.strides,b=n.data.get(s.dataId).values,[w,_,T,S]=h,E=n.data.get(o.dataId).values,[M,I,N,C]=d,{batchSize:A,filterDepth:k,filterHeight:R,filterWidth:D,inChannels:L,inDepth:O,inHeight:P,inWidth:F,outChannels:B,outDepth:$,outHeight:U,outWidth:z,strideDepth:G,strideHeight:H,strideWidth:W}=p,V=k-1-p.padInfo.front,j=R-1-p.padInfo.top,X=D-1-p.padInfo.left;for(let e=0;e<A;++e)for(let t=0;t<L;++t)for(let n=0;n<O;++n){const r=n-V,a=Math.max(0,Math.ceil(r/G)),i=Math.min($,(k+r)/G);for(let s=0;s<P;++s){const o=s-j,c=Math.max(0,Math.ceil(o/H)),l=Math.min(U,(R+o)/H);for(let u=0;u<F;++u){const h=u-X,d=Math.max(0,Math.ceil(h/W)),p=Math.min(z,(D+h)/W);let f=0;for(let n=a;n<i;++n){const a=n*G-r;for(let r=c;r<l;++r){const i=r*H-o;for(let s=d;s<p;++s){const o=w*e+_*n+T*r+S*s,c=M*(k-1-a)+I*(R-1-i)+N*(D-1-(s*W-h))+C*t;for(let e=0;e<B;++e)f+=b[o+e]*E[c+e]}}}m[g*e+y*n+x*s+v*u+t]=f}}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},Ae=(0,l.A)(r.mc4,(e=>Math.cos(e))),ke={kernelName:r.mc4,backendName:"cpu",kernelFunc:Ae},Re=(0,l.A)(r.TR1,(e=>Math.cosh(e))),De={kernelName:r.TR1,backendName:"cpu",kernelFunc:Re},Le={kernelName:r.VcC,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:i,boxes:s,boxInd:o}=t,{cropSize:c,method:l,extrapolationValue:u}=a,[h,d,p,f]=i.shape,m=s.shape[0],[g,y]=c,x=(0,r.f3b)([m,g,y,f],"float32"),v=n.data.get(s.dataId).values,b=n.data.get(o.dataId).values,w=n.data.get(i.dataId).values,_=r.D5U.e3(i.shape),T=r.D5U.e3(x.shape);for(let e=0;e<m;e++){const t=4*e,n=v[t],r=v[t+1],a=v[t+2],i=v[t+3],s=b[e];if(s>=h)continue;const o=g>1?(a-n)*(d-1)/(g-1):0,c=y>1?(i-r)*(p-1)/(y-1):0;for(let t=0;t<g;t++){const h=g>1?n*(d-1)+t*o:.5*(n+a)*(d-1);if(h<0||h>d-1)for(let n=0;n<y;n++)for(let r=0;r<f;r++){const a=r+n*T[2]+t*T[1]+e*T[0];x.values[a]=u}else if("bilinear"===l){const n=Math.floor(h),a=Math.ceil(h),o=h-n;for(let l=0;l<y;l++){const h=y>1?r*(p-1)+l*c:.5*(r+i)*(p-1);if(h<0||h>p-1){for(let n=0;n<f;n++){const r=n+l*T[2]+t*T[1]+e*T[0];x.values[r]=u}continue}const d=Math.floor(h),m=Math.ceil(h),g=h-d;for(let r=0;r<f;r++){let i=r+d*_[2]+n*_[1]+s*_[0];const c=w[i];i=r+m*_[2]+n*_[1]+s*_[0];const u=w[i];i=r+d*_[2]+a*_[1]+s*_[0];const h=w[i];i=r+m*_[2]+a*_[1]+s*_[0];const p=c+(u-c)*g,f=h+(w[i]-h)*g;i=r+l*T[2]+t*T[1]+e*T[0],x.values[i]=p+(f-p)*o}}}else for(let n=0;n<y;++n){const a=y>1?r*(p-1)+n*c:.5*(r+i)*(p-1);if(a<0||a>p-1){for(let r=0;r<f;r++){const a=r+n*T[2]+t*T[1]+e*T[0];x.values[a]=u}continue}const o=Math.round(a),l=Math.round(h);for(let r=0;r<f;r++){const a=r+o*_[2]+l*_[1]+s*_[0],i=r+n*T[2]+t*T[1]+e*T[0];x.values[i]=w[a]}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},Oe={kernelName:r.iHb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:s}=t,{axis:o,exclusive:c,reverse:l}=i;(0,a.H)(s,"cumsum");const u=r.Wap.getAxesPermutation([o],s.shape.length);let h=s;null!=u&&(h=(0,P.p)({inputs:{x:s},backend:n,attrs:{perm:u}}));const d=r.Wap.getInnerMostAxes(1,s.shape.length)[0];if(d!==h.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${h.shape.length-1} but got axis=${d}`);const p=(0,r.x8V)(h.dtype,"int32"),f=r.D5U.wT(r.D5U.NA(h.shape),p),m=n.data.get(h.dataId).values,g=h.shape[h.shape.length-1],y=l?(e,t)=>e+g-t-1:(e,t)=>e+t;for(let e=0;e<m.length;e+=g)for(let t=0;t<g;t++){const n=y(e,t);if(0===t)f[n]=c?0:m[n];else{const r=y(e,t-1);f[n]=c?m[r]+f[r]:m[n]+f[r]}}const x=n.makeTensorInfo(h.shape,p,f);if(null!=u){const e=r.Wap.getUndoAxesPermutation(u),t=(0,P.p)({inputs:{x},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(h),t}return x}},Pe={kernelName:r.QRR,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:i}=t,{size:s,binaryOutput:o}=r;if(1===a.shape.length){const e=n.data.get(a.dataId).values,t=n.data.get(i.dataId).values,r=(0,le.W)(e,t,i.dtype,i.shape,s);return n.makeTensorInfo([s],i.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(i),r=(0,le.i)(e,t,s,o);return n.makeTensorInfo(r.shape,i.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}},Fe={kernelName:r.T0n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{blockSize:s,dataFormat:o}=a;r.D5U.hu("NHWC"===o,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`)),r.D5U.hu(s>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`));const c=i.shape[0],l=i.shape[1],u=i.shape[2],h=i.shape[3],d=l*s,p=u*s,f=h/(s*s),m=n.data.get(i.dataId).values,g=new Float32Array(c*d*p*f);let y=0;for(let e=0;e<c;++e)for(let t=0;t<d;++t){const n=Math.floor(t/s),r=t%s;for(let t=0;t<p;++t){const a=Math.floor(t/s),i=(r*s+t%s)*f;for(let t=0;t<f;++t){const r=t+i+h*(a+u*(n+l*e));g[y++]=m[r]}}}return n.makeTensorInfo([c,d,p,f],i.dtype,g)}};function Be(e){const{inputs:t,backend:n,attrs:i}=e,{x:s,filter:o}=t,{strides:c,pad:l,dilations:u,dimRoundingMode:h}=i;(0,a.H)([s,o],"depthwiseConv2DNative");const d=r.D5U.e3(s.shape),p=r.D5U.e3(o.shape);let f=u;null==f&&(f=[1,1]),r.D5U.hu(r.Wap.eitherStridesOrDilationsAreOne(c,f),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${c} and dilations '${f}'`));const m=r.Wap.computeConv2DInfo(s.shape,o.shape,c,f,l,h,!0),{filterHeight:g,filterWidth:y,dilationHeight:x,dilationWidth:v,padInfo:b}=m,w=b.left,_=b.top,T=m.outChannels/m.inChannels,S=new r.YDk(m.outShape,s.dtype),E=n.data.get(s.dataId).values,M=n.data.get(o.dataId).values,I=S.values;for(let e=0;e<m.batchSize;++e){const t=e*d[0],n=e*S.strides[0];for(let e=0;e<m.outHeight;++e){const r=n+e*S.strides[1],a=e*m.strideHeight-w;for(let e=0;e<g;++e){const n=a+e*x;if(n<0||n>=m.inHeight)continue;const i=e*p[0],s=t+n*d[1];for(let e=0;e<m.outWidth;++e){const t=r+e*S.strides[2],n=e*m.strideWidth-_;for(let e=0;e<y;++e){const r=n+e*v;if(r<0||r>=m.inWidth)continue;const a=i+e*p[1],o=s+r*m.inChannels;let c=t,l=a;for(let e=0;e<m.inChannels;++e){const t=E[o+e];for(let e=0;e<T;++e)I[c+e]+=t*M[l+e];c+=T,l+=T}}}}}}return n.makeTensorInfo(S.shape,S.dtype,S.values)}const $e={kernelName:r.cie,backendName:"cpu",kernelFunc:Be},Ue={kernelName:r.sL$,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:s,dy:o}=t,{strides:c,dilations:l,pad:u,dimRoundingMode:h,filterShape:d}=i;(0,a.H)([s,o],"depthwiseConv2dNativeBackpropFilter");const p=r.Wap.computeConv2DInfo(s.shape,d,c,l,u,h,!0),{strideHeight:f,strideWidth:m,filterHeight:g,filterWidth:y}=p,x=new r.YDk(p.filterShape,"float32"),v=p.padInfo.left,b=p.padInfo.top,w=p.outChannels/p.inChannels,_=n.data.get(s.dataId).values,T=new r.YDk(s.shape,s.dtype,_),S=n.data.get(o.dataId).values,E=new r.YDk(o.shape,o.dtype,S);for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((b-e)/f)),n=Math.min(p.outHeight,(p.inHeight+b-e)/f);for(let r=0;r<y;++r){const a=Math.max(0,Math.ceil((v-r)/m)),i=Math.min(p.outWidth,(p.inWidth+v-r)/m);for(let s=0;s<p.outChannels;++s){const o=Math.trunc(s/w),c=s%w;let l=0;for(let c=0;c<p.batchSize;++c)for(let u=t;u<n;++u){const t=e+u*f-b;for(let e=a;e<i;++e){const n=r+e*m-v;l+=T.get(c,t,n,o)*E.get(c,u,e,s)}}x.set(l,e,r,o,c)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},ze={kernelName:r.y7R,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{dy:s,filter:o}=t,{strides:c,dilations:l,pad:u,dimRoundingMode:h,inputShape:d}=i;(0,a.H)([s,o],"depthwiseConv2DNativeBackpropInput");const p=r.D5U.e3(s.shape),f=r.D5U.e3(o.shape),m=r.Wap.computeConv2DInfo(d,o.shape,c,l,u,h,!0),g=new r.YDk(m.inShape,"float32"),y=g.values,[x,v,b]=g.strides,w=n.data.get(s.dataId).values,[_,T,S]=p,E=n.data.get(o.dataId).values,[M,I,N]=f,{batchSize:C,filterHeight:A,filterWidth:k,inChannels:R,inHeight:D,inWidth:L,outChannels:O,outHeight:P,outWidth:F,strideHeight:B,strideWidth:$}=m,U=A-1-m.padInfo.top,z=k-1-m.padInfo.left,G=O/R;for(let e=0;e<C;++e)for(let t=0;t<R;++t)for(let n=0;n<D;++n){const r=n-U,a=Math.max(0,Math.ceil(r/B)),i=Math.min(P,(A+r)/B);for(let s=0;s<L;++s){const o=s-z,c=Math.max(0,Math.ceil(o/$)),l=Math.min(F,(k+o)/$);let u=0;for(let n=a;n<i;++n){const a=n*B-r;for(let r=c;r<l;++r){const i=_*e+T*n+S*r,s=M*(A-1-a)+I*(k-1-(r*$-o))+N*t;for(let e=0;e<G;++e)u+=w[i+(t*G+e)]*E[s+e]}}y[x*e+v*n+b*s+t]=u}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},Ge={kernelName:r.$w,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,i=r.D5U.NA(a.shape),s=n.data.get(a.dataId).values,o=(0,r.f3b)([i,i],a.dtype),c=o.values;for(let e=0;e<s.length;e++)c[e*i+e]=s[e];const l=[...a.shape,...a.shape];return n.makeTensorInfo(l,o.dtype,o.values)}},He={kernelName:r.p4S,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:i}=e,{strides:s,pad:o,dilations:c}=n,l=t,u=l.data.get(a.dataId).values,h=a.shape.length,d=l.data.get(i.dataId).values,p=i.shape.length,{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:x,outWidth:v,padInfo:b,strideHeight:w,strideWidth:_,filterHeight:T,filterWidth:S,dilationHeight:E,dilationWidth:M,outShape:I}=r.Wap.computeDilation2DInfo(a.shape,i.shape,s,o,"NHWC",c),N=r.D5U.NA(I),C=I.length,A=r.D5U.rQ(a.dtype,N);for(let e=0;e<f;++e)for(let t=0;t<x;++t){const n=t*w-b.top;for(let s=0;s<v;++s){const o=s*_-b.left;for(let c=0;c<y;++c){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<T;++t){const s=n+t*E;if(s>=0&&s<m)for(let n=0;n<S;++n){const f=o+n*M;if(f>=0&&f<g){const o=r.D5U.qy([e,s,f,c],h,r.D5U.e3(a.shape)),m=r.D5U.qy([t,n,c],p,r.D5U.e3(i.shape)),g=u[o]+d[m];g>l&&(l=g)}}}A[r.D5U.qy([e,t,s,c],C,r.D5U.e3(I))]=l}}}return{dataId:l.write(r.D5U.Os(A,a.dtype),I,a.dtype),shape:I,dtype:a.dtype}}},We={kernelName:r.Vn9,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:i,dy:s}=e,{strides:o,pad:c,dilations:l}=n,u=t,h=r.D5U.GX(a.shape,u.data.get(a.dataId).values),d=r.D5U.GX(i.shape,u.data.get(i.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:x,padInfo:v,strideHeight:b,strideWidth:w,filterHeight:_,filterWidth:T,dilationHeight:S,dilationWidth:E,outShape:M}=r.Wap.computeDilation2DInfo(a.shape,i.shape,o,c,"NHWC",l);r.D5U.hu(s.rank===M.length,(()=>`Error in ${r.Vn9}, dy must have the same rank as output ${M.length}, but got ${s.rank}`));const I=r.D5U.GX(M,u.data.get(s.dataId).values),N=r.D5U.l6(i.shape,i.dtype);for(let e=0;e<p;++e)for(let t=0;t<y;++t){const n=t*b-v.top;for(let r=0;r<x;++r){const a=r*w-v.left;for(let i=0;i<g;++i){let s=Number.MIN_SAFE_INTEGER,o=0,c=0;for(let t=0;t<_;++t){const r=n+t*S;if(r>=0&&r<f)for(let n=0;n<T;++n){const l=a+n*E;if(l>=0&&l<m){const a=h[e][r][l][i]+d[t][n][i];a>s&&(s=a,o=t,c=n)}}}N[o][c][i]+=I[e][t][r][i]}}}return{dataId:u.write(r.D5U.Os(N,a.dtype),i.shape,i.dtype),shape:i.shape,dtype:i.dtype}}},Ve={kernelName:r.ekb,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:i,dy:s}=e,{strides:o,pad:c,dilations:l}=n,u=t,h=r.D5U.GX(a.shape,u.data.get(a.dataId).values),d=r.D5U.GX(i.shape,u.data.get(i.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:x,padInfo:v,strideHeight:b,strideWidth:w,filterHeight:_,filterWidth:T,dilationHeight:S,dilationWidth:E,outShape:M}=r.Wap.computeDilation2DInfo(a.shape,i.shape,o,c,"NHWC",l);r.D5U.hu(s.rank===M.length,(()=>`Error in ${r.ekb}, dy must have the same rank as output ${M.length}, but got ${s.rank}`));const I=r.D5U.GX(M,u.data.get(s.dataId).values),N=r.D5U.l6(a.shape,a.dtype);for(let e=0;e<p;++e)for(let t=0;t<y;++t){const n=t*b-v.top;for(let r=0;r<x;++r){const a=r*w-v.left;for(let i=0;i<g;++i){let s=Number.MIN_SAFE_INTEGER,o=n<0?0:n,c=a<0?0:a;for(let t=0;t<_;++t){const r=n+t*S;if(r>=0&&r<f)for(let n=0;n<T;++n){const l=a+n*E;if(l>=0&&l<m){const a=h[e][r][l][i]+d[t][n][i];a>s&&(s=a,o=r,c=l)}}}N[e][o][c][i]+=I[e][t][r][i]}}}return{dataId:u.write(r.D5U.Os(N,a.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},je={kernelName:r.HEU,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:i,y:s}=t;(0,a.H)([i,s],"eluGrad");const o=new Float32Array(r.D5U.NA(s.shape)),c=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values;for(let e=0;e<c.length;++e){const t=c[e];o[e]=t>=1?l[e]:l[e]*(t+1)}return n.makeTensorInfo(s.shape,"float32",o)}},Xe=(0,m.b)(((e,t)=>e===t?1:0)),qe=(0,X.j)(r.hdR,Xe,null,"bool"),Ye={kernelName:r.hdR,backendName:"cpu",kernelFunc:qe},Ke=r.Wap.ERF_P,Ze=r.Wap.ERF_A1,Je=r.Wap.ERF_A2,Qe=r.Wap.ERF_A3,et=r.Wap.ERF_A4,tt=r.Wap.ERF_A5,nt=(0,l.A)(r.Omj,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+Ke*n);return t*(1-((((tt*r+et)*r+Qe)*r+Je)*r+Ze)*r*Math.exp(-n*n))})),rt={kernelName:r.Omj,backendName:"cpu",kernelFunc:nt};var at=n(1211);function it(e){const{inputs:t,backend:n,attrs:a}=e,{input:i}=t,{dim:s}=a,o=i.shape.length,c=i.shape.slice();let l=s;return s<0&&(r.D5U.hu(-(o+1)<=s,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),l=o+s+1),c.splice(l,0,1),E({inputs:{x:i},backend:n,attrs:{shape:c}})}const st={kernelName:r.YFo,backendName:"cpu",kernelFunc:it};var ot=n(969),ct=n(1917);const lt=(0,m.b)(((e,t)=>e/t)),ut=(0,X.j)(r.oHH,lt),ht={kernelName:r.oHH,backendName:"cpu",kernelFunc:ut};var dt=n(1649);function pt(e,t,n){const a=e.shape,i=a[0],s=a[1],o=n.data.get(e.dataId),c=o.complexTensorInfos.real,l=o.complexTensorInfos.imag,u=[i,s],h=r.D5U.NA(u),d=r.D5U.WP("float32",h),p=r.D5U.WP("float32",h);for(let e=0;e<i;e++){const a=(0,oe.tP)({inputs:{x:c},backend:n,attrs:{begin:[e,0],size:[1,s]}}),i=(0,oe.tP)({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,s]}}),o=(0,me.P)({inputs:{real:a,imag:i},backend:n}),{real:u,imag:h}=ft(o,t,n),f=r.Wap.mergeRealAndImagArrays(u,h);for(let t=0;t<s;t++){const n=r.Wap.getComplexWithIndex(f,t);d[e*s+t]=n.real,p[e*s+t]=n.imag}n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o)}const f=n.makeTensorInfo(u,"float32",d),m=n.makeTensorInfo(u,"float32",p),g=(0,me.P)({inputs:{real:f,imag:m},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}function ft(e,t,n){const a=r.D5U.NA(e.shape),i=n.data.get(e.dataId),s=n.data.get(i.complexTensorInfos.real.dataId).values,o=n.data.get(i.complexTensorInfos.imag.dataId).values;if(0==((c=a)&c-1)){const i=mt(s,o,a,t,n),c=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(c,"float32",i.real),t=n.makeTensorInfo(c,"float32",i.imag),s=n.makeTensorInfo([],"float32",r.D5U.hr(a,"float32")),o=(0,d.y)({inputs:{x:s},backend:n}),l=ht.kernelFunc({inputs:{a:e,b:s},backend:n}),u=ht.kernelFunc({inputs:{a:t,b:o},backend:n}),h=n.data.get(l.dataId).values,p=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:h,imag:p}}return i}{const e=function(e,t,n){const a=new Float32Array(2*t);for(let i=0;i<t;i++){let s=0,o=0;for(let a=0;a<t;a++){const c=r.Wap.exponent(i*a,t,n),l=r.Wap.getComplexWithIndex(e,a);s+=l.real*c.real-l.imag*c.imag,o+=l.real*c.imag+l.imag*c.real}n&&(s/=t,o/=t),r.Wap.assignToTypedArray(a,s,o,i)}return a}(r.Wap.mergeRealAndImagArrays(s,o),a,t);return r.Wap.splitRealAndImagArrays(e)}var c}function mt(e,t,n,a,i){if(1===n)return{real:e,imag:t};const s=r.Wap.mergeRealAndImagArrays(e,t),o=n/2,c=r.Wap.complexWithEvenIndex(s),l=c.real,u=c.imag,h=[l.length],d=i.makeTensorInfo(h,"float32",l),p=i.makeTensorInfo(h,"float32",u),f=(0,me.P)({inputs:{real:d,imag:p},backend:i}),m=r.Wap.complexWithOddIndex(s),g=m.real,y=m.imag,x=[g.length],v=i.makeTensorInfo(x,"float32",g),b=i.makeTensorInfo(x,"float32",y),w=(0,me.P)({inputs:{real:v,imag:b},backend:i}),_=mt(l,u,o,a,i),T=_.real,E=_.imag,M=[T.length],I=i.makeTensorInfo(M,"float32",T),N=i.makeTensorInfo(M,"float32",E),C=(0,me.P)({inputs:{real:I,imag:N},backend:i}),A=mt(g,y,o,a,i),k=A.real,R=A.imag,D=[k.length],L=i.makeTensorInfo(D,"float32",k),O=i.makeTensorInfo(D,"float32",R),P=(0,me.P)({inputs:{real:L,imag:O},backend:i}),F=r.Wap.exponents(n,a),B=[F.real.length],$=i.makeTensorInfo(B,"float32",F.real),U=i.makeTensorInfo(B,"float32",F.imag),z=(0,me.P)({inputs:{real:$,imag:U},backend:i}),G=(0,ct.Jp)({inputs:{a:z,b:P},backend:i}),H=(0,S.IH)({inputs:{a:C,b:G},backend:i}),W=(0,dt.lu)({inputs:{a:C,b:G},backend:i}),V=(0,be.k)({inputs:{input:H},backend:i}),j=(0,be.k)({inputs:{input:W},backend:i}),X=xe({inputs:{input:H},backend:i}),q=xe({inputs:{input:W},backend:i}),Y=we({inputs:[V,j],backend:i,attrs:{axis:0}}),K=we({inputs:[X,q],backend:i,attrs:{axis:0}}),Z=i.data.get(Y.dataId).values,J=i.data.get(K.dataId).values;return i.disposeIntermediateTensorInfo(d),i.disposeIntermediateTensorInfo(p),i.disposeIntermediateTensorInfo(f),i.disposeIntermediateTensorInfo(v),i.disposeIntermediateTensorInfo(b),i.disposeIntermediateTensorInfo(w),i.disposeIntermediateTensorInfo(I),i.disposeIntermediateTensorInfo(N),i.disposeIntermediateTensorInfo(C),i.disposeIntermediateTensorInfo(L),i.disposeIntermediateTensorInfo(O),i.disposeIntermediateTensorInfo(P),i.disposeIntermediateTensorInfo($),i.disposeIntermediateTensorInfo(U),i.disposeIntermediateTensorInfo(z),i.disposeIntermediateTensorInfo(G),i.disposeIntermediateTensorInfo(H),i.disposeIntermediateTensorInfo(W),i.disposeIntermediateTensorInfo(V),i.disposeIntermediateTensorInfo(X),i.disposeIntermediateTensorInfo(j),i.disposeIntermediateTensorInfo(q),i.disposeIntermediateTensorInfo(Y),i.disposeIntermediateTensorInfo(K),{real:Z,imag:J}}const gt={kernelName:r.vwp,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,i=r.D5U.NA(a.shape),s=a.shape[a.shape.length-1],o=E({inputs:{x:a},backend:n,attrs:{shape:[i/s,s]}}),c=pt(o,!1,n),l=E({inputs:{x:c},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(c),l}};function yt(e){const{backend:t,attrs:n}=e,{shape:a,value:i,dtype:s}=n,o=s||r.D5U.D2(i),c=r.D5U.rQ(o,r.D5U.NA(a));return function(e,t,n){e.fill(t)}(c,i),t.makeTensorInfo(a,o,c)}const xt={kernelName:r.deh,backendName:"cpu",kernelFunc:yt},vt={kernelName:r.Uyb,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,i=n,s=r.D5U.WP(a.dtype,r.D5U.NA(a.shape)),[o,c,l,u]=a.shape,h=i.data.get(a.dataId).values;for(let e=0;e<o;e++){const t=e*l*c*u;for(let e=0;e<c;e++){const n=e*(l*u);for(let r=0;r<l;r++){const a=r*u;for(let i=0;i<u;i++){const c=[o,e,r,i][2],d=Math.round(l-c),p=t+n+a+i;let f=h[p];d>=0&&d<l&&(f=h[t+n+d*u+i]),s[p]=f}}}}return{dataId:i.write(s,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};var bt=n(6574);const wt=(0,m.b)(((e,t)=>Math.floor(e/t))),_t=(0,X.j)(r.jeX,wt,null,"int32"),Tt={kernelName:r.jeX,backendName:"cpu",kernelFunc:_t},St={kernelName:r._V0,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i,bias:s,preluActivationWeights:o}=t,{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=Te({inputs:{x:a,filter:i},backend:n,attrs:{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d}});if(s){const e=m;m=(0,S.IH)({inputs:{a:m,b:s},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=T(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}},Et={kernelName:r.luS,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i,bias:s,preluActivationWeights:o}=t,{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=Be({inputs:{x:a,filter:i},backend:n,attrs:{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d}});if(s){const e=m;m=(0,S.IH)({inputs:{a:m,b:s},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=T(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}},Mt={kernelName:r.q1x,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:i}=t,s=r.D5U.NA(a.shape),o=i.shape,c=o[o.length-1],[l,u,h,d]=r.Wap.prepareAndValidate(a,i);if(0===u)return n.makeTensorInfo(l,a.dtype,[]);const p=(0,r.f3b)([u,h],a.dtype),f=n.data.get(i.dataId).values,m=n.data.get(a.dataId).values;for(let e=0;e<u;e++){const t=[];let n=0;for(let r=0;r<c;r++){const a=f[e*c+r];n+=a*d[r],t.push(a)}if(n<0||n>=s/h)throw new Error(`Invalid indices: ${t} does not index into ${a.shape}`);for(let t=0;t<h;t++)p.values[e*h+t]=m[n*h+t]}return n.makeTensorInfo(l,p.dtype,p.values)}};var It=n(4468);const Nt={kernelName:r.qi_,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:s,indices:o}=t,{axis:c,batchDims:l}=i;(0,a.H)([s,o],"gatherV2");let u=l;null==l&&(u=0);const h=r.D5U.NA(o.shape),d=r.D5U.EC(c,s.shape)[0],p=r.Wap.segment_util.collectGatherOpShapeInfo(s,o,d,u),f=E({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=E({inputs:{x:o},backend:n,attrs:{shape:[p.batchSize,h/p.batchSize]}}),g=[p.batchSize,p.outerSize,h/p.batchSize,p.sliceSize],y=n.bufferSync(m),x=n.bufferSync(f),v=(0,It.i)(x,y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,v.dtype,v.values)}};var Ct=n(6272);const At=(0,m.b)(((e,t)=>e>=t?1:0)),kt=(0,X.j)(r.Acj,At,null,"bool"),Rt={kernelName:r.Acj,backendName:"cpu",kernelFunc:kt},Dt={kernelName:r.Qg5,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,i=r.D5U.NA(a.shape),s=a.shape[a.shape.length-1],o=E({inputs:{x:a},backend:n,attrs:{shape:[i/s,s]}}),c=pt(o,!0,n),l=E({inputs:{x:c},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(c),l}},Lt=(0,l.A)(r.avt,(e=>Number.isFinite(e)?1:0),"bool"),Ot={kernelName:r.avt,backendName:"cpu",kernelFunc:Lt},Pt=(0,l.A)(r.iWB,(e=>Math.abs(e)===1/0?1:0),"bool"),Ft={kernelName:r.iWB,backendName:"cpu",kernelFunc:Pt},Bt=(0,l.A)(r.r7n,(e=>Number.isNaN(e)?1:0),"bool"),$t={kernelName:r.r7n,backendName:"cpu",kernelFunc:Bt};var Ut=n(8405);const zt=(0,m.b)(((e,t)=>e<=t?1:0)),Gt=(0,X.j)(r.CAk,zt,null,"bool"),Ht={kernelName:r.CAk,backendName:"cpu",kernelFunc:Gt};var Wt=n(1325);const Vt={kernelName:r.e7N,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:i}=n,s=(0,Wt.b)(r,a,i);return t.makeTensorInfo([s.length],"float32",s)}};var jt=n(5223);const Xt=(0,l.A)(r.kU,(e=>Math.log1p(e))),qt={kernelName:r.kU,backendName:"cpu",kernelFunc:Xt},Yt=(0,m.b)(((e,t)=>e&&t)),Kt=(0,X.j)(r.PYm,Yt,null,"bool"),Zt={kernelName:r.PYm,backendName:"cpu",kernelFunc:Kt},Jt=(0,l.A)(r.VfG,(e=>e?0:1),"bool"),Qt={kernelName:r.VfG,backendName:"cpu",kernelFunc:Jt},en=(0,m.b)(((e,t)=>e||t)),tn=(0,X.j)(r.MZg,en,null,"bool"),nn={kernelName:r.MZg,backendName:"cpu",kernelFunc:tn},rn={kernelName:r.eZ0,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:s}=t,{depthRadius:o,bias:c,alpha:l,beta:u}=i;(0,a.H)(s,"LRN");const h=s.shape[3],d=h-1,p=n.data.get(s.dataId).values,f=r.D5U.NA(s.shape),m=new Float32Array(f);function g(e){const t=e%h;let n=e-t+Math.max(0,t-o);const r=e-t+Math.min(t+o,d);let a=0;for(;n<=r;n++){const e=p[n];a+=e*e}return a}for(let e=0;e<f;e++){const t=g(e),n=p[e]*Math.pow(c+l*t,-u);m[e]=n}return n.makeTensorInfo(s.shape,s.dtype,m)}},an={kernelName:r.Hhh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:s,y:o,dy:c}=t,{depthRadius:l,bias:u,alpha:h,beta:d}=i;(0,a.H)(c,"LRNGrad");const p=r.D5U.NA(c.shape),f=c.shape[3],m=n.data.get(c.dataId).values,g=n.data.get(s.dataId).values,y=n.data.get(o.dataId).values,x=new Float32Array(p),v=p;for(let e=0;e<v;e++){const t=e%f,n=e-t+Math.max(0,t-l),r=e-t+Math.min(f,t+l+1);let a=0;for(let e=n;e<r;e++)a+=Math.pow(g[e],2);a=h*a+u;for(let t=n;t<r;t++){let n=-2*h*d*g[t]*y[e]/a;e===t&&(n+=Math.pow(a,-d)),n*=m[e],x[t]+=n}}return n.makeTensorInfo(c.shape,s.dtype,x)}};var sn=n(5126),on=n(7107);function cn(e){const{inputs:t,backend:n,attrs:i}=e,{x:s}=t,{reductionIndices:o,keepDims:c}=i,l=n;let u=s.shape;const h=u.length,d=r.D5U.EC(o,u);let p=d;const f=r.Wap.getAxesPermutation(p,h);let m=l.data.get(s.dataId).values;if(null!=f){const e=new Array(h);for(let t=0;t<e.length;t++)e[t]=u[f[t]];m=(0,on.H)(m,u,s.dtype,f,e),p=r.Wap.getInnerMostAxes(p.length,h),u=e}(0,a.H)(s,"max"),r.Wap.assertAxesAreInnerMostDims("max",p,h);const[g,y]=r.Wap.computeOutAndReduceShapes(u,p),x=r.D5U.NA(y),v=(0,sn.B)(m,x,g,s.dtype),b=l.write(v,g,s.dtype);let w=g;return c&&(w=r.Wap.expandShapeToKeepDim(g,d)),{dataId:b,shape:w,dtype:s.dtype}}const ln={kernelName:r.YoZ,backendName:"cpu",kernelFunc:cn};var un=n(1717);const hn={kernelName:r.mTV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:s}=t;(0,a.H)(s,"maxPool");const{filterSize:o,strides:c,pad:l,dimRoundingMode:u}=i;r.D5U.hu(r.Wap.eitherStridesOrDilationsAreOne(c,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${c} and dilations '1'`));const h=r.Wap.computePool2DInfo(s.shape,o,c,1,l,u);let p;if(1===h.filterWidth&&1===h.filterHeight&&r.D5U.cO(h.inShape,h.outShape))p=(0,d.y)({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=r.D5U.e3(s.shape),a=Q(e,s.shape,s.dtype,t,h,"max");p=n.makeTensorInfo(h.outShape,s.dtype,a.values)}return p}},dn={kernelName:r.OAf,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:s}=t,{filterSize:o,strides:c,pad:l,dimRoundingMode:u,dataFormat:h}=i;(0,a.H)(s,"maxPool3d");const d=r.Wap.computePool3DInfo(s.shape,o,c,1,l,u,h),p=te(n.data.get(s.dataId).values,s.shape,s.dtype,r.D5U.e3(s.shape),d,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}},pn={kernelName:r.OU7,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{dy:s,input:o}=t,{filterSize:c,strides:l,pad:u,dimRoundingMode:h}=i;(0,a.H)([s,o],"maxPool3DGrad");const d=r.Wap.computePool3DInfo(o.shape,c,l,1,u,h),p=function(e,t){const n=(0,r.f3b)(t.outShape,"int32"),a=t.strideDepth,i=t.strideHeight,s=t.strideWidth,o=t.dilationDepth,c=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=t.padInfo.front,f=t.padInfo.top,m=t.padInfo.left;for(let r=0;r<t.batchSize;++r)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const x=y*a-p;let v=x;for(;v<0;)v+=o;const b=Math.min(t.inDepth,u+x);for(let a=0;a<t.outHeight;++a){const u=a*i-f;let p=u;for(;p<0;)p+=c;const w=Math.min(t.inHeight,h+u);for(let i=0;i<t.outWidth;++i){const f=i*s-m;let _=f;for(;_<0;)_+=l;const T=Math.min(t.inWidth,d+f);let S=Number.NEGATIVE_INFINITY,E=-1;for(let t=v;t<b;t+=o){const n=t-x;for(let a=p;a<w;a+=c){const i=a-u;for(let s=_;s<T;s+=l){const o=s-f,c=e.get(r,t,a,s,g);c>=S&&(S=c,E=n*h*d+i*h+o)}}}n.set(E,r,y,a,i,g)}}}return n}(n.bufferSync(o),d),f=d.strideDepth,m=d.strideHeight,g=d.strideWidth,y=d.dilationDepth,x=d.dilationHeight,v=d.dilationWidth,b=d.effectiveFilterDepth,w=d.effectiveFilterHeight,_=d.effectiveFilterWidth,T=b-1-d.padInfo.front,S=_-1-d.padInfo.left,E=w-1-d.padInfo.top,M=(0,r.f3b)(o.shape,"float32"),I=n.bufferSync(s);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inDepth;++n)for(let r=0;r<d.inHeight;++r)for(let a=0;a<d.inWidth;++a){const i=n-T,s=r-E,o=a-S;let c=0;for(let n=0;n<b;n+=y){const r=(i+n)/f;if(!(r<0||r>=d.outDepth||Math.floor(r)!==r))for(let a=0;a<w;a+=x){const i=(s+a)/m;if(!(i<0||i>=d.outHeight||Math.floor(i)!==i))for(let s=0;s<_;s+=v){const l=(o+s)/g;if(l<0||l>=d.outWidth||Math.floor(l)!==l)continue;const u=b*w*_-1-p.get(e,r,i,l,t)===n*w*_+a*_+s?1:0;0!==u&&(c+=I.get(e,r,i,l,t)*u)}}}M.set(c,e,n,r,a,t)}return n.makeTensorInfo(M.shape,M.dtype,M.values)}},fn={kernelName:r.OV7,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{dy:s,input:o,output:c}=t,l=o;(0,a.H)([o,c],"maxPoolGrad");const{filterSize:u,strides:h,pad:d,dimRoundingMode:p}=i,f=r.Wap.computePool2DInfo(l.shape,u,h,1,d,p),m=n.data.get(l.dataId).values,g=(0,r.f3b)(f.outShape,l.dtype,ee(m,l.shape,l.dtype,f).values),y=f.strideHeight,x=f.strideWidth,v=f.dilationHeight,b=f.dilationWidth,w=f.effectiveFilterHeight,_=f.effectiveFilterWidth,T=_-1-f.padInfo.left,S=w-1-f.padInfo.top,E=(0,r.f3b)(l.shape,"float32"),M=n.data.get(s.dataId).values,I=(0,r.f3b)(s.shape,"float32",M);for(let e=0;e<f.batchSize;++e)for(let t=0;t<f.inChannels;++t)for(let n=0;n<f.inHeight;++n)for(let r=0;r<f.inWidth;++r){const a=n-S,i=r-T;let s=0;for(let n=0;n<w;n+=v){const r=(a+n)/y;if(!(r<0||r>=f.outHeight||Math.floor(r)!==r))for(let a=0;a<_;a+=b){const o=(i+a)/x;if(o<0||o>=f.outWidth||Math.floor(o)!==o)continue;const c=w*_-1-g.get(e,r,o,t)===n*_+a?1:0;0!==c&&(s+=I.get(e,r,o,t)*c)}}E.set(s,e,n,r,t)}return n.makeTensorInfo(E.shape,E.dtype,E.values)}},mn={kernelName:r.vFR,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:i}=e,{filterSize:s,strides:o,pad:c,includeBatchInIndex:l}=t,u=n;(0,a.H)(i,"MaxPoolWithArgmax");const h=u.data.get(i.dataId).values,d=r.Wap.computePool2DInfo(i.shape,s,o,[1,1],c),[p,f]=function(e,t,n,a,i){const s=Q(e,0,n,r.D5U.e3(t),i,"max"),o=ee(e,t,n,i,!0,a);return[s.values,o.values]}(h,i.shape,i.dtype,l,d),m=u.write(p,d.outShape,i.dtype),g=u.write(f,d.outShape,i.dtype);return[{dataId:m,shape:d.outShape,dtype:i.dtype},{dataId:g,shape:d.outShape,dtype:"int32"}]}};var gn=n(4391);function yn(e){const{inputs:t,backend:n,attrs:i}=e,{x:s}=t,{axis:o,keepDims:c}=i;let l;(0,a.H)(s,"sum"),l="bool"===s.dtype?(0,he.p)({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):(0,d.y)({inputs:{x:s},backend:n});const u=l.shape.length,h=r.D5U.EC(o,l.shape),p=r.Wap.getAxesPermutation(h,u);let f=h,m=l;null!=p&&(m=(0,P.p)({inputs:{x:l},backend:n,attrs:{perm:p}}),f=r.Wap.getInnerMostAxes(f.length,u)),r.Wap.assertAxesAreInnerMostDims("sum",f,m.shape.length);const[g,y]=r.Wap.computeOutAndReduceShapes(m.shape,f),x=r.Wap.upcastType(m.dtype,"int32");let v=(0,gn.l)(n,g,x);const b=r.D5U.NA(y),w=n.data.get(v.dataId).values,_=n.data.get(m.dataId).values;for(let e=0;e<w.length;++e){const t=e*b;let n=0;for(let e=0;e<b;++e)n+=_[t+e];w[e]=n}if(c){const e=v;v=E({inputs:{x:v},backend:n,attrs:{shape:r.Wap.expandShapeToKeepDim(v.shape,h)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(l),null!=p&&n.disposeIntermediateTensorInfo(m),v}const xn={kernelName:r.GBy,backendName:"cpu",kernelFunc:yn},vn={kernelName:r.q2K,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{axis:s,keepDims:o}=a,c=r.D5U.EC(s,i.shape),l=r.Wap.computeOutAndReduceShapes(i.shape,c)[1],u=r.D5U.NA(l),h=[],d=n.makeTensorInfo([],"float32",new Float32Array([u]));h.push(d);const p=(0,he.p)({inputs:{x:i},backend:n,attrs:{dtype:"float32"}});h.push(p);const f=ut({inputs:{a:p,b:d},backend:n});h.push(f);const m=yn({inputs:{x:f},backend:n,attrs:{axis:s,keepDims:o}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}},bn={kernelName:r.c17,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:s}=t,{axis:o,keepDims:c}=i;(0,a.H)(s,"min");const l=r.D5U.EC(o,s.shape);let u=l;const h=r.Wap.getAxesPermutation(u,s.shape.length);let d=s;null!=h&&(d=(0,P.p)({inputs:{x:s},backend:n,attrs:{perm:h}}),u=r.Wap.getInnerMostAxes(u.length,s.shape.length)),r.Wap.assertAxesAreInnerMostDims("min",u,d.shape.length);const[p,f]=r.Wap.computeOutAndReduceShapes(d.shape,u),m=r.D5U.NA(f),g=r.D5U.wT(r.D5U.NA(p),d.dtype),y=n.data.get(d.dataId).values;for(let e=0;e<g.length;++e){const t=e*m;let n=y[t];for(let e=0;e<m;++e){const r=y[t+e];r<n&&(n=r)}g[e]=n}null!=h&&n.disposeIntermediateTensorInfo(d);const x=n.makeTensorInfo(p,d.dtype,g);if(c){const e=E({inputs:{x},backend:n,attrs:{shape:r.Wap.expandShapeToKeepDim(p,l)}});return n.disposeIntermediateTensorInfo(x),e}return x}};var wn=n(612);const _n={kernelName:r.jQs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:s}=t,{paddings:o,mode:c}=i;(0,a.H)(s,"mirrorPad");const l=o.map(((e,t)=>e[0]+s.shape[t]+e[1])),u=o.map((e=>e[0])),h=o.map(((e,t)=>e[0]+s.shape[t])),d="reflect"===c?0:1,p=n.data.get(s.dataId).values,f=s.shape.length,m=r.D5U.e3(s.shape),g=r.D5U.NA(l),y=l.length,x=r.D5U.e3(l),v=r.D5U.WP(s.dtype,g);for(let e=0;e<g;e++){let t=r.D5U.NE(e,y,x);for(let e=0;e<y;e++)t[e]<u[e]?t[e]=2*u[e]-t[e]-d:t[e]>=h[e]&&(t[e]=2*(h[e]-1)-t[e]+d);t=t.map(((e,t)=>e-u[t]));const n=r.D5U.qy(t,f,m);v[e]=p[n]}return{dataId:n.write(v,l,s.dtype),shape:l,dtype:s.dtype}}},Tn=(0,m.b)(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),Sn=(0,X.j)(r.Vbg,Tn),En={kernelName:r.Vbg,backendName:"cpu",kernelFunc:Sn};var Mn=n(6377);function In(e){const{inputs:t,backend:n,attrs:a}=e,{logits:i}=t,{dim:s}=a,o=i.shape.length;let c=s;if(-1===c&&(c=o-1),c!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${c}`);const l=r.D5U.EC([c],i.shape),u=cn({inputs:{x:i},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),h=r.Wap.expandShapeToKeepDim(u.shape,l),d=E({inputs:{x:u},backend:n,attrs:{shape:h}}),p=(0,dt.lu)({inputs:{a:i,b:d},backend:n}),f=(0,at.Qq)({inputs:{x:p},backend:n}),m=yn({inputs:{x:f},backend:n,attrs:{axis:l,keepDims:!1}}),g=E({inputs:{x:m},backend:n,attrs:{shape:h}}),y=ut({inputs:{a:f,b:g},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),y}const Nn={kernelName:r.Gcp,backendName:"cpu",kernelFunc:In},Cn={kernelName:r.NZg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{logits:s}=t,{numSamples:o,seed:c,normalized:l}=i;(0,a.H)(s,"multinomial");const u=l?s:In({inputs:{logits:s},backend:n,attrs:{dim:-1}}),h=u.shape[0],d=u.shape[1],p=n.data.get(u.dataId).values,f=[h,o],m=r.D5U.wT(r.D5U.NA(f),"int32");for(let e=0;e<h;++e){const t=e*d,n=new Float32Array(d-1);n[0]=p[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+p[t+e];const r=Mn.alea(c.toString()),a=e*o;for(let e=0;e<o;++e){const t=r();m[a+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){m[a+e]=r;break}}}return l||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(f,"int32",m)}};var An=n(854);const kn=r.GDt.GP,Rn={kernelName:r.uv1,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:i,scores:s}=t,{maxOutputSize:o,iouThreshold:c,scoreThreshold:l}=r;(0,a.H)(i,"NonMaxSuppression");const u=n.data.get(i.dataId).values,h=n.data.get(s.dataId).values,{selectedIndices:d}=kn(u,h,o,c,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},Dn=r.GDt.qP,Ln={kernelName:r.cye,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:i,scores:s}=t,{maxOutputSize:o,iouThreshold:c,scoreThreshold:l,padToMaxOutputSize:u}=r;(0,a.H)(i,"NonMaxSuppressionPadded");const h=n.data.get(i.dataId).values,d=n.data.get(s.dataId).values,{selectedIndices:p,validOutputs:f}=Dn(h,d,o,c,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},On=r.GDt.pA,Pn={kernelName:r.W0H,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:i,scores:s}=t,{maxOutputSize:o,iouThreshold:c,scoreThreshold:l,softNmsSigma:u}=r;(0,a.H)(i,"NonMaxSuppressionWithScore");const h=n.data.get(i.dataId).values,d=n.data.get(s.dataId).values,p=o,f=c,m=l,g=u,{selectedIndices:y,selectedScores:x}=On(h,d,p,f,m,g);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([x.length],"float32",new Float32Array(x))]}};var Fn=n(8584);const Bn={kernelName:r.we_,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{indices:s}=t,{depth:o,onValue:c,offValue:l}=i;(0,a.H)(s,"oneHot");const u=r.D5U.NA(s.shape),h=new Float32Array(u*o);h.fill(l);const d=n.data.get(s.dataId).values;for(let e=0;e<u;++e)d[e]>=0&&d[e]<o&&(h[e*o+d[e]]=c);return n.makeTensorInfo([...s.shape,o],"int32",h)}};function $n(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=(0,be.k)({inputs:{input:r},backend:n}),t=$n({inputs:{x:e},backend:n}),a=xe({inputs:{input:r},backend:n}),i=$n({inputs:{x:a},backend:n}),s=(0,me.P)({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),s}return yt({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const Un={kernelName:r.RuY,backendName:"cpu",kernelFunc:$n},zn={kernelName:r.qWM,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){const t=(0,be.k)({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),i=xe({inputs:{input:a},backend:r}),s=$n({inputs:{x:i},backend:r}),o=(0,me.P)({inputs:{real:n,imag:s},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(s),o}return yt({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};function Gn(e){const{inputs:t,backend:n,attrs:a}=e,{axis:i}=a;if(1===t.length)return it({inputs:{input:t[0]},backend:n,attrs:{dim:i}});const s=t[0].shape,o=t[0].dtype;t.forEach((e=>{r.D5U.k5(s,e.shape,"All tensors passed to stack must have matching shapes"),r.D5U.hu(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const c=[],l=we({inputs:t.map((e=>{const t=it({inputs:{input:e},backend:n,attrs:{dim:i}});return c.push(t),t})),backend:n,attrs:{axis:i}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const Hn={kernelName:r.QiL,backendName:"cpu",kernelFunc:Gn},Wn={kernelName:r.lyA,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:s}=t,{paddings:o,constantValue:c}=i;(0,a.H)(s,"pad");const l=o.map(((e,t)=>e[0]+s.shape[t]+e[1])),u=o.map((e=>e[0])),h=n.data.get(s.dataId).values,d=r.D5U.NA(s.shape),p=s.shape.length,f=r.D5U.e3(s.shape),m=r.D5U.NA(l),g=l.length,y=r.D5U.e3(l),x=r.D5U.WP(s.dtype,m);0!==c&&x.fill(c);for(let e=0;e<d;e++){const t=r.D5U.NE(e,p,f).map(((e,t)=>e+u[t]));x[r.D5U.qy(t,g,y)]=h[e]}return{dataId:n.write(x,l,s.dtype),shape:l,dtype:s.dtype}}},Vn=(0,m.b)(((e,t)=>Math.pow(e,t))),jn=(0,X.j)(r.pe_,Vn),Xn={kernelName:r.pe_,backendName:"cpu",kernelFunc:jn};var qn=n(9560),Yn=n(9230);const Kn={kernelName:r.e6w,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,dtype:i,step:s}=n,o=(0,Yn.b)(r,a,s,i);return t.makeTensorInfo([o.length],i,o)}},Zn=(0,l.A)(r.$HU,(e=>1/e)),Jn={kernelName:r.$HU,backendName:"cpu",kernelFunc:Zn},Qn={kernelName:r._Yw,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{images:s}=t,{alignCorners:o,halfPixelCenters:c,size:l}=i;(0,a.H)(s,"resizeBilinear");const u=r.D5U.e3(s.shape),[h,d]=l,[p,f,m,g]=s.shape,y=n.data.get(s.dataId).values,x=new Float32Array(r.D5U.NA([p,h,d,g])),v=[o&&h>1?f-1:f,o&&d>1?m-1:m],b=[o&&h>1?h-1:h,o&&d>1?d-1:d];let w=0;const _=v[0]/b[0],T=v[1]/b[1];for(let e=0;e<p;e++)for(let t=0;t<h;t++){let n;n=c?_*(t+.5)-.5:_*t;const r=Math.max(0,Math.floor(n)),a=n-r,i=Math.min(f-1,Math.ceil(n)),s=e*u[0]+r*u[1],o=e*u[0]+i*u[1];for(let e=0;e<d;e++){let t;t=c?T*(e+.5)-.5:T*e;const n=Math.max(0,Math.floor(t)),r=t-n,i=Math.min(m-1,Math.ceil(t)),l=s+n*u[2],h=o+n*u[2],d=s+i*u[2],p=o+i*u[2];for(let e=0;e<g;e++){const t=y[l+e],n=y[h+e],i=t+(y[d+e]-t)*r,s=i+(n+(y[p+e]-n)*r-i)*a;x[w++]=s}}}return n.makeTensorInfo([p,h,d,g],"float32",x)}},er={kernelName:r.zbQ,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{images:s,dy:o}=t,{alignCorners:c}=i;(0,a.H)([o,s],"resizeBilinearGrad");const l=r.D5U.e3(s.shape),[u,h,d,p]=s.shape,[,f,m]=o.shape,g=new Float32Array(u*h*d*p),y=[c&&f>1?h-1:h,c&&m>1?d-1:d],x=[c&&f>1?f-1:f,c&&m>1?m-1:m],v=y[0]/x[0],b=y[1]/x[1],w=n.data.get(o.dataId).values;let _=0;for(let e=0;e<u;e++){const t=e*l[0];for(let e=0;e<f;e++){const n=e*v,r=Math.floor(n),a=Math.min(Math.ceil(n),h-1),i=t+r*l[1],s=t+a*l[1],o=n-r,c=1-o;for(let e=0;e<m;e++){const t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),d-1),a=t-n,u=1-a,h=i+n*l[2],f=i+r*l[2],m=s+n*l[2],y=s+r*l[2],x=c*u,v=c*a,T=o*u,S=o*a;for(let e=0;e<p;e++){const t=w[_++];g[h+e]+=t*x,g[f+e]+=t*v,g[m+e]+=t*T,g[y+e]+=t*S}}}}return n.makeTensorInfo([u,d,h,p],"float32",g)}},tr={kernelName:r.dpD,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{images:s}=t,{alignCorners:o,halfPixelCenters:c,size:l}=i;(0,a.H)(s,"resizeNearestNeighbor");const u=r.D5U.e3(s.shape),[h,d]=l,[p,f,m,g]=s.shape,y=n.data.get(s.dataId).values,x=new Float32Array(p*h*d*g),v=[o&&h>1?f-1:f,o&&d>1?m-1:m],b=[o&&h>1?h-1:h,o&&d>1?d-1:d],w=v[0]/b[0],_=v[1]/b[1];let T=0;for(let e=0;e<p;e++){const t=e*u[0];for(let e=0;e<h;e++){const n=c?w*(e+.5):w*e;let r=Math.min(f-1,o?Math.round(n):Math.floor(n));c&&(r=Math.max(0,r));const a=t+r*u[1];for(let e=0;e<d;e++){const t=c?_*(e+.5):_*e;let n=Math.min(m-1,o?Math.round(t):Math.floor(t));c&&(n=Math.max(0,n));const r=a+n*u[2];for(let e=0;e<g;e++){const t=y[r+e];x[T++]=t}}}}return n.makeTensorInfo([p,h,d,g],s.dtype,x)}},nr={kernelName:r.Hmb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{images:s,dy:o}=t,{alignCorners:c}=i;(0,a.H)([o,s],"resizeNearestNeighborGrad");const l=r.D5U.e3(s.shape),u=r.D5U.e3(o.shape),[h,d,p,f]=s.shape,[,m,g]=o.shape,y=new Float32Array(h*d*p*f),x=n.data.get(o.dataId).values,v=[c&&m>1?d-1:d,c&&g>1?p-1:p],b=[c&&m>1?m-1:m,c&&g>1?g-1:g],w=v[0]/b[0],_=v[1]/b[1],T=1/w,S=1/_,E=2*Math.ceil(T)+2,M=2*Math.ceil(S)+2;for(let e=0;e<h;e++){const t=e*l[0];for(let e=0;e<d;e++){const n=t+e*l[1],r=Math.floor(e*T),a=Math.floor(r-E/2);for(let r=0;r<p;r++){const i=n+r*l[2],s=Math.floor(r*S),o=Math.floor(s-M/2);for(let n=0;n<f;n++){let s=0;for(let i=0;i<E;i++){const l=i+a;if(l<0||l>=m)continue;const h=t+l*u[1],f=l*w;if(e===Math.min(d-1,c?Math.round(f):Math.floor(f)))for(let e=0;e<M;e++){const t=e+o;if(t<0||t>=g)continue;const a=h+t*u[2],i=t*_;r===Math.min(p-1,c?Math.round(i):Math.floor(i))&&(s+=x[a+n])}}y[i+n]=s}}}}return n.makeTensorInfo(s.shape,s.dtype,y)}},rr={kernelName:r.mKl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:s}=t,{dims:o}=i;(0,a.H)(s,"reverse");const c=s.shape.length,l=r.D5U.EC(o,s.shape);if(0===c)return(0,d.y)({inputs:{x:s},backend:n});const u=new r.YDk(s.shape,s.dtype),h=n.bufferSync(s);for(let e=0;e<u.size;e++){const t=u.indexToLoc(e),n=t.slice();l.forEach((e=>n[e]=s.shape[e]-1-n[e])),u.set(h.get(...n),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},ar={kernelName:r.b9H,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,{radians:i,fillValue:s,center:o}=t,c=n,l=r.D5U.WP(a.dtype,r.D5U.NA(a.shape)),[u,h,d,p]=a.shape,[f,m]=r.Wap.getImageCenter(o,h,d),g=Math.sin(i),y=Math.cos(i),x=c.data.get(a.dataId).values;for(let e=0;e<u;e++){const t=e*d*h*p;for(let e=0;e<h;e++){const n=e*(d*p);for(let r=0;r<d;r++){const a=r*p;for(let i=0;i<p;i++){const o=[u,e,r,i],c=o[2],v=o[1];let b=(c-f)*y-(v-m)*g,w=(c-f)*g+(v-m)*y;b=Math.round(b+f),w=Math.round(w+m);let _=s;"number"!=typeof s&&(_=3===i?255:s[i]),b>=0&&b<d&&w>=0&&w<h&&(_=x[t+w*(d*p)+b*p+i]),l[t+n+a+i]=_}}}}return{dataId:c.write(l,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},ir=(0,l.A)(r.e07,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),sr={kernelName:r.e07,backendName:"cpu",kernelFunc:ir};var or=n(7742);function cr(e,t,n,a,i,s,o,c,l,u){const h=[a/i,i],d=e.values,p=t.values;if(0===a)return(0,r.f3b)(n,t.dtype);const f=(0,r.f3b)(h,t.dtype);f.values.fill(l);for(let e=0;e<s;e++){const r=[];let s=0;for(let t=0;t<o;t++){const n=d[e*o+t];r.push(n),s+=n*c[t]}if(s<0||s>=a/i)throw new Error(`Invalid indices: ${r} does not index into ${n}`);for(let n=0;n<i;n++)u?f.values[s*i+n]+=p[e*i+n]:f.values[s*i+n]=0===t.rank?p[0]:p[e*i+n]}return f}const lr={kernelName:r.xQA,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:i,updates:s}=t,{shape:o}=a,{sliceRank:c,numUpdates:l,sliceSize:u,strides:h,outputSize:d}=r.Wap.calculateShapes(s,i,o),p=cr(n.bufferSync(i),n.bufferSync(s),o,d,u,l,c,h,0,!0);return n.makeTensorInfo(o,p.dtype,p.values)}},ur={kernelName:r.PhF,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:i,t:s,e:o}=t;(0,a.H)([i,s,o],"select");const c=i.shape.length,l=n.data.get(i.dataId).values,u=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,d=(0,r.x8V)(s.dtype,o.dtype),p=r.D5U.wT(r.D5U.NA(s.shape),d);let f=0;const m=0===c||c>1||1===s.shape.length?1:r.D5U.NA(s.shape.slice(1));for(let e=0;e<l.length;e++)for(let t=0;t<m;t++)1===l[e]?p[f++]=u[e]:p[f++]=h[e];return n.makeTensorInfo(s.shape,d,p)}},hr=r.Wap.SELU_SCALEALPHA,dr=r.Wap.SELU_SCALE,pr=(0,l.A)(r.oFR,(e=>e>=0?dr*e:hr*(Math.exp(e)-1))),fr={kernelName:r.oFR,backendName:"cpu",kernelFunc:pr},mr=(0,l.A)(r.a5O,(e=>1/(1+Math.exp(-e)))),gr={kernelName:r.a5O,backendName:"cpu",kernelFunc:mr},yr=(0,l.A)(r.i5y,(e=>e<0?-1:e>0?1:0)),xr={kernelName:r.i5y,backendName:"cpu",kernelFunc:yr},vr=(0,l.A)(r.RQH,(e=>Math.sin(e))),br={kernelName:r.RQH,backendName:"cpu",kernelFunc:vr},wr=(0,l.A)(r.wYB,(e=>Math.sinh(e))),_r={kernelName:r.wYB,backendName:"cpu",kernelFunc:wr},Tr=Math.log(1.1920928955078125e-7)+2,Sr=(0,l.A)(r.MRv,(e=>{const t=e>-Tr,n=e<Tr,r=Math.exp(e);let a;return a=n?r:t?e:Math.log(1+r),a})),Er={kernelName:r.MRv,backendName:"cpu",kernelFunc:Sr},Mr={kernelName:r.TQc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:s}=t,{blockShape:o,paddings:c}=i;(0,a.H)([s],"spaceToBatchND");const l=r.D5U.NA(o),u=[[0,0]];u.push(...c);for(let e=1+o.length;e<s.shape.length;++e)u.push([0,0]);const h=Wn.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),d=r.Wap.getReshaped(h.shape,o,l,!1),p=r.Wap.getPermuted(d.length,o.length,!1),f=r.Wap.getReshapedPermuted(h.shape,o,l,!1),m=E({inputs:{x:h},backend:n,attrs:{shape:d}}),g={x:m},y={perm:p},x=(0,P.p)({inputs:g,backend:n,attrs:y}),v=E({inputs:{x},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(x),v}},Ir={kernelName:r.D2d,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:i,sparseValues:s,defaultValue:o}=t,{outputShape:c}=a,{sliceRank:l,numUpdates:u,sliceSize:h,strides:d,outputSize:p}=r.Wap.calculateShapes(s,i,c),f=cr(n.bufferSync(i),n.bufferSync(s),c,p,h,u,l,d,n.data.get(o.dataId).values[0],!1);return n.makeTensorInfo(c,f.dtype,f.values)}},Nr={kernelName:r.L8s,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{numOrSizeSplits:s,axis:o}=a,c=r.D5U.EC(o,i.shape)[0],l=r.Wap.prepareSplitSize(i,s,c),u=new Array(i.shape.length).fill(0),h=i.shape.slice();return l.map((e=>{const t=[...h];t[c]=e;const r=(0,oe.tP)({inputs:{x:i},backend:n,attrs:{begin:u,size:t}});return u[c]+=e,r}))}},Cr=(0,l.A)(r.FKq,(e=>Math.sqrt(e))),Ar={kernelName:r.FKq,backendName:"cpu",kernelFunc:Cr},kr={kernelName:r.bK0,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;(0,a.H)(n,"square");const i=r.data.get(n.dataId).values,s=new Float32Array(i.length);for(let e=0;e<i.length;++e){const t=i[e];s[e]=t*t}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var Rr=n(212);const Dr=(0,l.A)(r.h8e,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),Lr={kernelName:r.h8e,backendName:"cpu",kernelFunc:Dr};var Or=n(2210);const Pr={kernelName:r.jQk,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:s}=t,{begin:o,end:c,strides:l,beginMask:u,endMask:h,ellipsisMask:d,newAxisMask:p,shrinkAxisMask:f}=i;(0,a.H)(s,"stridedSlice");const{nonStrided:m,$begin:g,$strides:y,size:x,newShape:v,outShape:b}=r.kuN.sliceInfo(s.shape,o,c,l,u,h,d,p,f),w=E({inputs:{x:s},backend:n,attrs:{shape:v}});let _;if(m){const e=(0,oe.tP)({inputs:{x:w},backend:n,attrs:{begin:g,size:x}});_=E({inputs:{x:e},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(e)}else if(b.some((e=>0===e)))_=n.makeTensorInfo(b,s.dtype,[]);else{const e=n.bufferSync(w),t=(0,Or.t)(b,e,y,g);_=n.makeTensorInfo(t.shape,t.dtype,t.values)}const T=E({inputs:{x:_},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(_),T}},Fr=(0,l.A)(r.sEM,(e=>Math.tan(e))),Br={kernelName:r.sEM,backendName:"cpu",kernelFunc:Fr},$r=(0,l.A)(r.MIZ,(e=>Math.tanh(e))),Ur={kernelName:r.MIZ,backendName:"cpu",kernelFunc:$r};var zr=n(7723);const Gr={kernelName:r.n9L,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{reps:s}=r;(0,a.H)(i,"tile");const o=(0,zr.R)(n.bufferSync(i),s);return n.makeTensorInfo(o.shape,o.dtype,o.values)}};var Hr=n(9556);const Wr={kernelName:r.cWu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{k:s,sorted:o}=r;(0,a.H)(i,"topk");const c=n.data.get(i.dataId).values,[l,u]=(0,Hr.W)(c,i.shape,i.dtype,s,o);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};var Vr=n(5638);const jr={kernelName:r.kpP,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:i}=n,{x:s}=t;(0,a.H)(s,"unique");const o=r.data.get(s.dataId).values,{outputValues:c,outputShape:l,indices:u}=(0,Vr.S)(o,i,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,c),r.makeTensorInfo([u.length],"int32",u)]}},Xr={kernelName:r.ToN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:i}=r;i<0&&(i+=a.shape.length);const s=a.shape.length,o=a.shape[i],c=new Array(s-1);let l=0;for(let e=0;e<s;e++)e!==i&&(c[l++]=a.shape[e]);const u=new Array(s).fill(0),h=a.shape.slice();h[i]=1;const d=new Array(o);for(let e=0;e<d.length;e++){u[i]=e;const t=(0,oe.tP)({inputs:{x:a},backend:n,attrs:{begin:u,size:h}});d[e]=E({inputs:{x:t},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(t)}return d}},qr={kernelName:r.Qvg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:s,segmentIds:o}=t,{numSegments:c}=i;(0,a.H)(s,"unsortedSegmentSum");const l=[],u=[],h=s.shape.length-o.shape.length;let d=o;for(let e=0;e<h;++e){const t=it({inputs:{input:d},backend:n,attrs:{dim:e+1}});d=t,u.push(t)}for(let e=0;e<c;++e){const t=r.D5U.hr(e,"int32"),a=n.makeTensorInfo([],"int32",t),i=qe({inputs:{a,b:d},backend:n}),o=(0,he.p)({inputs:{x:i},backend:n,attrs:{dtype:"float32"}}),c=(0,ct.Jp)({inputs:{a:o,b:s},backend:n}),h=yn({inputs:{x:c},backend:n,attrs:{axis:0,keepDims:!1}});l.push(h),u.push(a),u.push(i),u.push(o),u.push(c),u.push(h)}const p=Gn({inputs:l,backend:n,attrs:{axis:0}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},Yr=[C,A.fC,R,L,S.j4,O,F,B,$,U,G,W,j,K,J,ne,re,ae,ie,N,se,ce,ue,he.M,de.y2,fe,me.z,ge,_e,Ee,Me,Se,Ne,Ce,Ie,ke,De,Le,Oe,Pe,Fe,$e,Ue,ze,Ge,He,Ve,We,ht,h,je,Ye,rt,at.SX,st,ot.Vu,gt,xt,vt,bt.Ao,Tt,St,Et,Mt,Nt,Ct.Ce,Rt,d.I,Dt,ve,Ot,Ft,$t,f,Ut.zh,Ht,Vt,jt.xM,qt,Zt,Qt,nn,rn,an,un.eJ,hn,dn,pn,fn,mn,ln,vn,bn,wn.u0,_n,En,Cn,ct.f$,An.AF,Rn,Ln,Pn,Fn.nP,Bn,zn,Hn,Wn,Xn,x,qn.Iz,Kn,be.O,Jn,b,_,M,Qn,er,tr,nr,rr,ar,sr,or.FY,lr,ur,fr,gr,xr,br,_r,oe.C6,Nn,Er,Mr,Ir,Nr,Ar,kr,Rr.MS,Lr,Pr,dt.GR,xn,Br,Ur,Gr,Wr,P.b,jr,Xr,qr,Un];for(const e of Yr)(0,r.wCN)(e)},224:(e,t,n)=>{"use strict";n.d(t,{bk:()=>i,fC:()=>s});var r=n(5360),a=n(8166);function i(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const s={kernelName:r.SYM,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;(0,a.H)(t,"abs");let s=new Float32Array(r.D5U.NA(t.shape));return s=i(n.data.get(t.dataId).values),n.makeOutput(s,t.shape,"float32")}}},2779:(e,t,n)=>{"use strict";n.d(t,{EH:()=>s,IH:()=>c,j4:()=>l});var r=n(5360),a=n(3533),i=n(6205);const s=(0,a.b)(((e,t)=>e+t)),o=(0,i.H)(((e,t,n,r)=>({real:e+n,imag:t+r}))),c=(0,i.j)(r.mm_,s,o),l={kernelName:r.mm_,backendName:"cpu",kernelFunc:c}},8607:(e,t,n)=>{"use strict";n.d(t,{W:()=>a,i:()=>i});var r=n(5360);function a(e,t,n,a,i){const s=r.D5U.NA(a),o=r.D5U.wT(i,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=i||(o[r]+=s>0?t[n]:1)}return o}function i(e,t,n,a=!1){const i=e.shape[0],s=e.shape[1],o=(0,r.f3b)([i,n],t.dtype);for(let r=0;r<i;r++)for(let i=0;i<s;i++){const s=e.get(r,i);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(a?o.set(1,r,s):t.size>0?o.set(o.get(r,s)+t.get(r,i),r,s):o.set(o.get(r,s)+1,r,s))}return o}},9258:(e,t,n)=>{"use strict";n.d(t,{p:()=>l,M:()=>u});var r=n(5360),a=n(3533),i=n(4391),s=n(6961),o=n(1775),c=n(2186);function l(e){const{inputs:t,backend:n,attrs:u}=e,{x:h}=t,{dtype:d}=u;if("complex64"===d){if("complex64"===h.dtype)return(0,o.y)({inputs:{x:h},backend:n});const e=(0,i.l)(n,h.shape,h.dtype),t=l({inputs:{x:h},backend:n,attrs:{dtype:"float32"}}),r=(0,s.P)({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===h.dtype){const e=(0,c.k)({inputs:{input:h},backend:n}),t=l({inputs:{x:e},backend:n,attrs:{dtype:d}});return n.disposeIntermediateTensorInfo(e),t}if(!r.D5U.QB(h.dtype,d)){const e=(0,o.y)({inputs:{x:h},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:d}}if("int32"===d){const e=n.data.get(h.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(h.shape,"int32",t)}if("bool"===d){const e=n.data.get(h.dataId).values,t=r.D5U.Os([0],h.dtype),[i,s]=(0,a.b)(((e,t)=>e!==t?1:0))(h.shape,[],e,t,"bool");return n.makeTensorInfo(s,"bool",i)}throw new Error(`Error in Cast: failed to cast ${h.dtype} to ${d}`)}const u={kernelName:r.RFZ,backendName:"cpu",kernelFunc:l}},4769:(e,t,n)=>{"use strict";n.d(t,{__:()=>s,y2:()=>c});var r=n(5360),a=n(8029),i=n(6738);const s=(0,a.a)((e=>Math.ceil(e))),o=(0,i.O)(r.gJX,s),c={kernelName:r.gJX,backendName:"cpu",kernelFunc:o}},6961:(e,t,n)=>{"use strict";function r(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,i=n.data.get(r.dataId).values,s=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",i),imag:n.makeTensorInfo(a.shape,"float32",s)},o}n.d(t,{P:()=>r,z:()=>a});const a={kernelName:n(5360).Zz9,backendName:"cpu",kernelFunc:r}},8926:(e,t,n)=>{"use strict";n.d(t,{j:()=>a});var r=n(5360);function a(e,t,n,a){const i=r.D5U.rQ(n,r.D5U.NA(t));if(a&&"string"!==n){let t=0;e.forEach((e=>{const n=r.D5U.NA(e.shape);i.set(e.vals,t),t+=n}))}else{let a=0;e.forEach((e=>{const s="string"===n?r.Wap.fromUint8ToStringArray(e.vals):e.vals;let o=0;for(let n=0;n<e.shape[0];++n){const r=n*t[1]+a;for(let t=0;t<e.shape[1];++t)i[r+t]=s[o++]}a+=e.shape[1]}))}return i}},1211:(e,t,n)=>{"use strict";n.d(t,{Ro:()=>s,Qq:()=>o,SX:()=>c});var r=n(5360),a=n(8029),i=n(6738);const s=(0,a.a)((e=>Math.exp(e))),o=(0,i.O)(r.NEP,s),c={kernelName:r.NEP,backendName:"cpu",kernelFunc:o}},969:(e,t,n)=>{"use strict";n.d(t,{OF:()=>s,Vu:()=>c});var r=n(5360),a=n(8029),i=n(6738);const s=(0,a.a)((e=>Math.expm1(e))),o=(0,i.O)(r.Y0y,s),c={kernelName:r.Y0y,backendName:"cpu",kernelFunc:o}},6574:(e,t,n)=>{"use strict";n.d(t,{r6:()=>s,Ao:()=>c});var r=n(5360),a=n(8029),i=n(6738);const s=(0,a.a)((e=>Math.floor(e))),o=(0,i.O)(r.OR,s),c={kernelName:r.OR,backendName:"cpu",kernelFunc:o}},4468:(e,t,n)=>{"use strict";n.d(t,{i:()=>a});var r=n(5360);function a(e,t,n){const a=(0,r.f3b)(n,e.dtype);for(let n=0;n<a.size;++n){const r=a.indexToLoc(n).slice(),i=r[0],s=r[2],o=t.locToIndex([i,s]);r[2]=t.values[o];const c=e.locToIndex(r);a.values[n]=e.values[c]}return a}},6272:(e,t,n)=>{"use strict";n.d(t,{o:()=>s,Ce:()=>c});var r=n(5360),a=n(3533),i=n(6205);const s=(0,a.b)(((e,t)=>e>t?1:0)),o=(0,i.j)(r.iZT,s,null,"bool"),c={kernelName:r.iZT,backendName:"cpu",kernelFunc:o}},1775:(e,t,n)=>{"use strict";function r(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}n.d(t,{y:()=>r,I:()=>a});const a={kernelName:n(5360).iJz,backendName:"cpu",kernelFunc:r}},8405:(e,t,n)=>{"use strict";n.d(t,{rO:()=>s,zh:()=>c});var r=n(5360),a=n(3533),i=n(6205);const s=(0,a.b)(((e,t)=>e<t?1:0)),o=(0,i.j)(r.vtC,s,null,"bool"),c={kernelName:r.vtC,backendName:"cpu",kernelFunc:o}},1325:(e,t,n)=>{"use strict";n.d(t,{b:()=>a});var r=n(5360);function a(e,t,n){const a=(t-e)/(n-1),i=r.D5U.wT(n,"float32");i[0]=e;for(let e=1;e<i.length;e++)i[e]=i[e-1]+a;return i}},5223:(e,t,n)=>{"use strict";n.d(t,{vX:()=>s,xM:()=>c});var r=n(5360),a=n(8029),i=n(6738);const s=(0,a.a)((e=>Math.log(e))),o=(0,i.O)(r.ZbH,s),c={kernelName:r.ZbH,backendName:"cpu",kernelFunc:o}},5126:(e,t,n)=>{"use strict";n.d(t,{B:()=>a});var r=n(5360);function a(e,t,n,a){const i=r.D5U.WP(a,r.D5U.NA(n));for(let n=0;n<i.length;++n){const r=n*t;let a=e[r];for(let n=0;n<t;++n){const t=e[r+n];t>a&&(a=t)}i[n]=a}return i}},1717:(e,t,n)=>{"use strict";n.d(t,{wS:()=>s,eJ:()=>c});var r=n(5360),a=n(3533),i=n(6205);const s=(0,a.b)(((e,t)=>Math.max(e,t))),o=(0,i.j)(r.BMI,s),c={kernelName:r.BMI,backendName:"cpu",kernelFunc:o}},612:(e,t,n)=>{"use strict";n.d(t,{vP:()=>s,u0:()=>c});var r=n(5360),a=n(3533),i=n(6205);const s=(0,a.b)(((e,t)=>Math.min(e,t))),o=(0,i.j)(r.q8u,s),c={kernelName:r.q8u,backendName:"cpu",kernelFunc:o}},1917:(e,t,n)=>{"use strict";n.d(t,{$3:()=>s,Jp:()=>c,f$:()=>l});var r=n(5360),a=n(3533),i=n(6205);const s=(0,a.b)(((e,t)=>e*t)),o=(0,i.H)(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),c=(0,i.j)(r.wYn,s,o),l={kernelName:r.wYn,backendName:"cpu",kernelFunc:c}},854:(e,t,n)=>{"use strict";n.d(t,{uC:()=>s,AF:()=>o});var r=n(5360),a=n(8166),i=n(1917);function s(e,t,n){const a=r.D5U.hr(-1,n);return(0,i.$3)([],t,a,e,n)}const o={kernelName:r.kuV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;(0,a.H)(r,"neg");const i=n.data.get(r.dataId).values,[o,c]=s(i,r.shape,r.dtype);return n.makeTensorInfo(c,r.dtype,o)}}},8584:(e,t,n)=>{"use strict";n.d(t,{Gj:()=>s,nP:()=>c});var r=n(5360),a=n(3533),i=n(6205);const s=(0,a.b)(((e,t)=>e!==t?1:0)),o=(0,i.j)(r.yQU,s,null,"bool"),c={kernelName:r.yQU,backendName:"cpu",kernelFunc:o}},9560:(e,t,n)=>{"use strict";n.d(t,{Qg:()=>s,Iz:()=>o});var r=n(5360),a=n(8166),i=n(4802);function s(e,t,n,a){const[i,s]=r.Wap.computeOutAndReduceShapes(e,a),o=(0,r.x8V)(t,"int32"),c=r.D5U.wT(r.D5U.NA(i),o),l=r.D5U.NA(s);for(let e=0;e<c.length;++e){const t=e*l;let r=1;for(let e=0;e<l;++e)r*=n[t+e];c[e]=r}return{outVals:c,outShape:i,outDtype:o}}const o={kernelName:r.DlI,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:c}=t,{axis:l,keepDims:u}=o;(0,a.H)(c,"prod");const h=c.shape.length,d=r.D5U.EC(l,c.shape),p=r.Wap.getAxesPermutation(d,h);let f=d,m=c;const g=[];null!=p&&(m=(0,i.p)({inputs:{x:c},backend:n,attrs:{perm:p}}),g.push(m),f=r.Wap.getInnerMostAxes(f.length,h));const y=n.data.get(m.dataId).values,{outVals:x,outShape:v,outDtype:b}=s(m.shape,m.dtype,y,f);let w=v;return u&&(w=r.Wap.expandShapeToKeepDim(v,d)),g.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(w,b,x)}}},9230:(e,t,n)=>{"use strict";n.d(t,{b:()=>a});var r=n(5360);function a(e,t,n,a){if(e===t||e<t&&n<0||t<e&&n>1)return r.D5U.wT(0,a);const i=Math.abs(Math.ceil((t-e)/n)),s=r.D5U.wT(i,a);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}},2186:(e,t,n)=>{"use strict";function r(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,i=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,i)}n.d(t,{k:()=>r,O:()=>a});const a={kernelName:n(5360).xJR,backendName:"cpu",kernelFunc:r}},7742:(e,t,n)=>{"use strict";n.d(t,{zd:()=>s,FY:()=>c});var r=n(5360),a=n(8029),i=n(6738);const s=(0,a.a)((e=>1/Math.sqrt(e))),o=(0,i.O)(r.bV0,s),c={kernelName:r.bV0,backendName:"cpu",kernelFunc:o}},2578:(e,t,n)=>{"use strict";n.d(t,{rT:()=>i,tP:()=>s,C6:()=>o});var r=n(5360),a=n(8166);function i(e,t,n,a,i){const s=r.kuN.isSliceContinous(a,t,n),o=r.D5U.NA(n),c=r.D5U.e3(a);if(s){const n=r.kuN.computeFlatOffset(t,c);return"string"===i?e.slice(n,n+o):e.subarray(n,n+o)}const l="string"===i?r.Wap.fromUint8ToStringArray(e):e,u=(0,r.f3b)(a,i,l),h=(0,r.f3b)(n,i);for(let e=0;e<h.size;++e){const n=h.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));h.set(u.get(...r),...n)}return"string"===i?r.Wap.fromStringArrayToUint8(h.values):h.values}function s(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{begin:c,size:l}=s;(0,a.H)(o,"slice");const[u,h]=r.kuN.parseSliceParams(o,c,l);r.kuN.assertParamsValid(o,u,h);const d=i(n.data.get(o.dataId).values,u,h,o.shape,o.dtype);return n.makeTensorInfo(h,o.dtype,d)}const o={kernelName:r.p2w,backendName:"cpu",kernelFunc:s}},212:(e,t,n)=>{"use strict";n.d(t,{Hz:()=>s,MS:()=>c});var r=n(5360),a=n(3533),i=n(6205);const s=(0,a.b)(((e,t)=>{const n=e-t;return n*n})),o=(0,i.j)(r._tC,s),c={kernelName:r._tC,backendName:"cpu",kernelFunc:o}},2210:(e,t,n)=>{"use strict";n.d(t,{t:()=>a});var r=n(5360);function a(e,t,n,a){const i=(0,r.f3b)(e,t.dtype);for(let e=0;e<i.size;e++){const r=i.indexToLoc(e),s=new Array(r.length);for(let e=0;e<s.length;e++)s[e]=r[e]*n[e]+a[e];i.set(t.get(...s),...r)}return i}},1649:(e,t,n)=>{"use strict";n.d(t,{VY:()=>s,lu:()=>c,GR:()=>l});var r=n(5360),a=n(3533),i=n(6205);const s=(0,a.b)(((e,t)=>e-t)),o=(0,i.H)(((e,t,n,r)=>({real:e-n,imag:t-r}))),c=(0,i.j)(r.Tr8,s,o),l={kernelName:r.Tr8,backendName:"cpu",kernelFunc:c}},7723:(e,t,n)=>{"use strict";n.d(t,{R:()=>a});var r=n(5360);function a(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const a=(0,r.f3b)(n,e.dtype);for(let t=0;t<a.values.length;++t){const n=a.indexToLoc(t),r=new Array(e.rank);for(let t=0;t<r.length;t++)r[t]=n[t]%e.shape[t];const i=e.locToIndex(r);a.values[t]=e.values[i]}return a}},9556:(e,t,n)=>{"use strict";n.d(t,{W:()=>a});var r=n(5360);function a(e,t,n,a,i){const s=t[t.length-1],[o,c]=[e.length/s,s],l=r.D5U.WP(n,o*a),u=r.D5U.WP("int32",o*a);for(let t=0;t<o;t++){const n=t*c,r=e.subarray(n,n+c),i=[];for(let e=0;e<r.length;e++)i.push({value:r[e],index:e});i.sort(((e,t)=>t.value-e.value));const s=t*a,o=l.subarray(s,s+a),h=u.subarray(s,s+a);for(let e=0;e<a;e++)o[e]=i[e].value,h[e]=i[e].index}const h=t.slice();return h[h.length-1]=a,[(0,r.f3b)(h,n,l),(0,r.f3b)(h,"int32",u)]}},4802:(e,t,n)=>{"use strict";n.d(t,{p:()=>s,b:()=>o});var r=n(5360),a=n(8166),i=n(7107);function s(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:o}=n;(0,a.H)(s,"transpose");const c=s.shape.length,l=new Array(c);for(let e=0;e<l.length;e++)l[e]=s.shape[o[e]];const u=r.data.get(s.dataId).values,h=(0,i.H)(u,s.shape,s.dtype,o,l);return{dataId:r.write(h,l,s.dtype),shape:l,dtype:s.dtype}}const o={kernelName:r.G3Y,backendName:"cpu",kernelFunc:s}},7107:(e,t,n)=>{"use strict";n.d(t,{H:()=>a});var r=n(5360);function a(e,t,n,a,i){const s=t.length,o=r.D5U.NA(t),c=r.D5U.e3(t),l=r.D5U.e3(i),u=r.D5U.WP(n,r.D5U.NA(i));for(let t=0;t<o;++t){const n=r.D5U.NE(t,s,c),i=new Array(n.length);for(let e=0;e<i.length;e++)i[e]=n[a[e]];u[r.D5U.qy(i,s,l)]=e[t]}return u}},5638:(e,t,n)=>{"use strict";n.d(t,{S:()=>a});var r=n(5360);function a(e,t,n,a){const i=r.D5U.EC(t,n)[0],s=[1,n[0],1];for(let e=0;e<i;e++)s[0]*=n[e];s[1]=n[i];for(let e=i+1;e<n.length;e++)s[2]*=n[e];const o={},c=new Int32Array(n[i]),l=new r.YDk(s,a,e),u=[],h=1===s[0]&&1===s[2];for(let t=0;t<n[i];t++){let n;if(h)n=e[t].toString();else{const e=[];for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)e.push(l.get(n,t,r));n=e.join(",")}if(void 0!==o[n])c[t]=o[n];else{const e=Object.keys(o).length;o[n]=e,c[t]=e,u.push(t)}}const d=s.slice();d[1]=Object.keys(o).length;const p=new r.YDk(d,a);u.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)p.set(l.get(n,e,r),n,t,r)}));const f=n.slice();return f[i]=d[1],{outputValues:p.values,outputShape:f,indices:c}}},5226:(e,t,n)=>{"use strict";n.r(t),n.d(t,{simpleAbsImpl:()=>r.bk,addImpl:()=>a.EH,bincountImpl:()=>i.W,bincountReduceImpl:()=>i.i,ceilImpl:()=>s.__,concatImpl:()=>o.j,expImpl:()=>c.Ro,expm1Impl:()=>l.OF,floorImpl:()=>u.r6,gatherV2Impl:()=>h.i,greaterImpl:()=>d.o,lessImpl:()=>p.rO,linSpaceImpl:()=>f.b,logImpl:()=>m.vX,maxImpl:()=>g.B,maximumImpl:()=>y.wS,minimumImpl:()=>x.vP,multiplyImpl:()=>v.$3,negImpl:()=>b.uC,notEqualImpl:()=>w.Gj,prodImpl:()=>_.Qg,rangeImpl:()=>T.b,rsqrtImpl:()=>S.zd,sliceImpl:()=>E.rT,squaredDifferenceImpl:()=>M.Hz,stridedSliceImpl:()=>I.t,subImpl:()=>N.VY,tileImpl:()=>C.R,topKImpl:()=>A.W,transposeImpl:()=>k.H,uniqueImpl:()=>R.S});var r=n(224),a=n(2779),i=n(8607),s=n(4769),o=n(8926),c=n(1211),l=n(969),u=n(6574),h=n(4468),d=n(6272),p=n(8405),f=n(1325),m=n(5223),g=n(5126),y=n(1717),x=n(612),v=n(1917),b=n(854),w=n(8584),_=n(9560),T=n(9230),S=n(7742),E=n(2578),M=n(212),I=n(2210),N=n(1649),C=n(7723),A=n(9556),k=n(7107),R=n(5638)},3533:(e,t,n)=>{"use strict";n.d(t,{b:()=>a});var r=n(5360);function a(e){return(t,n,a,i,s)=>{const o=r.Wap.assertAndGetBroadcastShape(t,n),c=o.length,l=r.D5U.e3(o),u=r.D5U.NA(o),h=r.D5U.WP(s,u),d=t.length,p=n.length,f=r.D5U.e3(t),m=r.D5U.e3(n),g=r.Wap.getBroadcastDims(t,o),y=r.Wap.getBroadcastDims(n,o);if(g.length+y.length===0)for(let t=0;t<h.length;++t)h[t]=e(a[t%a.length],i[t%i.length]);else for(let t=0;t<h.length;++t){const n=r.D5U.NE(t,c,l),s=n.slice(-d);g.forEach((e=>s[e]=0));const o=r.D5U.qy(s,d,f),u=n.slice(-p);y.forEach((e=>u[e]=0));const x=r.D5U.qy(u,p,m);h[t]=e(a[o],i[x])}return[h,o]}}},6205:(e,t,n)=>{"use strict";n.d(t,{j:()=>o,H:()=>c});var r=n(5360),a=n(8166),i=n(9258),s=n(6961);function o(e,t,n,r){return null==n?({inputs:n,backend:i})=>{const{a:s,b:o}=n,c=i;(0,a.H)([s,o],e);const l=c.data.get(s.dataId).values,u=c.data.get(o.dataId).values,h=r||s.dtype,[d,p]=t(s.shape,o.shape,l,u,h);return c.makeTensorInfo(p,h,d)}:({inputs:e,backend:a})=>{const{a:o,b:c}=e,l=a;if("complex64"===o.dtype||"complex64"===c.dtype){const e=(0,i.p)({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),t=l.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,u=l.data.get(r.dataId).values,h=l.data.get(a.dataId).values,d=(0,i.p)({inputs:{x:c},backend:l,attrs:{dtype:"complex64"}}),p=l.data.get(d.dataId),f=p.complexTensorInfos.real,m=p.complexTensorInfos.imag,g=l.data.get(f.dataId).values,y=l.data.get(m.dataId).values,[x,v,b]=n(o.shape,c.shape,u,h,g,y),w=l.makeTensorInfo(b,"float32",x),_=l.makeTensorInfo(b,"float32",v),T=(0,s.P)({inputs:{real:w,imag:_},backend:l});return l.disposeIntermediateTensorInfo(e),l.disposeIntermediateTensorInfo(d),l.disposeIntermediateTensorInfo(w),l.disposeIntermediateTensorInfo(_),T}{const e=l.data.get(o.dataId).values,n=l.data.get(c.dataId).values,a=r||o.dtype,[i,s]=t(o.shape,c.shape,e,n,a);return l.makeTensorInfo(s,a,i)}}}function c(e){return(t,n,a,i,s,o)=>{const c=r.Wap.assertAndGetBroadcastShape(t,n),l=r.D5U.NA(c),u=c.length,h=r.D5U.e3(c),d=r.D5U.WP("float32",l),p=r.D5U.WP("float32",l),f=r.Wap.getBroadcastDims(t,c),m=r.Wap.getBroadcastDims(n,c),g=r.Wap.mergeRealAndImagArrays(a,i),y=r.Wap.mergeRealAndImagArrays(s,o),x=t.length,v=r.D5U.e3(t),b=n.length,w=r.D5U.e3(n);if(f.length+m.length===0)for(let t=0;t<d.length;t++){const n=t%g.length,r=t%y.length,a=e(g[2*n],g[2*n+1],y[2*r],y[2*r+1]);d[t]=a.real,p[t]=a.imag}else for(let t=0;t<d.length;t++){const n=r.D5U.NE(t,u,h),a=n.slice(-x);f.forEach((e=>a[e]=0));const i=r.D5U.qy(a,x,v),s=n.slice(-b);m.forEach((e=>s[e]=0));const o=r.D5U.qy(s,b,w),c=e(g[2*i],g[2*i+1],y[2*o],y[2*o+1]);d[t]=c.real,p[t]=c.imag}return[d,p,c]}}},8029:(e,t,n)=>{"use strict";n.d(t,{a:()=>a});var r=n(5360);function a(e){return(t,n,a)=>{const i=r.D5U.WP(n,t.length);for(let n=0;n<t.length;++n)i[n]=e(t[n],a);return i}}},6738:(e,t,n)=>{"use strict";n.d(t,{A:()=>i,O:()=>s});var r=n(5360),a=n(8166);function i(e,t,n){return({inputs:i,attrs:s,backend:o})=>{const{x:c}=i;if((0,a.H)(c,e),"string"===c.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const l=o,u=l.data.get(c.dataId).values,h=r.D5U.NA(c.shape),d=n||c.dtype,p=r.D5U.rQ(d,h);for(let e=0;e<h;++e)p[e]=t(u[e],s);return l.makeTensorInfo(c.shape,d,p)}}function s(e,t,n){return({inputs:r,attrs:i,backend:s})=>{const{x:o}=r;if((0,a.H)(o,e),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const c=s,l=c.data.get(o.dataId).values,u=n||o.dtype,h=t(l,u,i);return c.makeTensorInfo(o.shape,u,h)}}},4391:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var r=n(5360),a=n(6961);function i(e,t,n="float32"){if("complex64"===n){const n=i(e,t,"float32"),r=i(e,t,"float32");return(0,a.P)({inputs:{real:n,imag:r},backend:e})}const s=r.D5U.wT(r.D5U.NA(t),n);return e.makeTensorInfo(t,n,s)}},9731:(e,t,n)=>{"use strict";n.r(t),n.d(t,{GPGPUContext:()=>Ve,MathBackendWebGL:()=>Zt,forceHalfFloat:()=>Qt,gpgpu_util:()=>a,setWebGLContext:()=>c,version_webgl:()=>Jt,webgl:()=>en,webgl_util:()=>r});var r={};n.r(r),n.d(r,{assertNotComplex:()=>he,bindCanvasToFramebuffer:()=>$,bindColorTextureToFramebuffer:()=>U,bindTextureToProgramUniformSampler:()=>B,bindTextureUnit:()=>L,bindVertexBufferToProgramAttribute:()=>D,callAndCheck:()=>y,canBeRepresented:()=>x,createFragmentShader:()=>_,createFramebuffer:()=>R,createProgram:()=>S,createStaticIndexBuffer:()=>N,createStaticVertexBuffer:()=>I,createTexture:()=>A,createVertexShader:()=>w,getBatchDim:()=>j,getExtensionOrThrow:()=>b,getFramebufferErrorMessage:()=>H,getMaxTexturesInShader:()=>re,getNumChannels:()=>C,getProgramUniformLocation:()=>F,getProgramUniformLocationOrThrow:()=>P,getRowsCols:()=>X,getShapeAs3D:()=>q,getTextureShapeFromLogicalShape:()=>Y,getWebGLDisjointQueryTimerVersion:()=>ae,getWebGLErrorMessage:()=>v,getWebGLMaxTextureSize:()=>ee,hasExtension:()=>ie,isCapableOfRenderingToFloatTexture:()=>oe,isDownloadFloatTextureEnabled:()=>ce,isReshapeFree:()=>Z,isWebGLFenceEnabled:()=>ue,isWebGLVersionEnabled:()=>se,linkProgram:()=>E,resetMaxTextureSize:()=>te,resetMaxTexturesInShader:()=>ne,unbindColorTextureFromFramebuffer:()=>z,unbindTextureUnit:()=>O,validateFramebuffer:()=>G,validateProgram:()=>M,validateTextureSize:()=>k});var a={};n.r(a),n.d(a,{bindVertexProgramAttributeStreams:()=>Fe,createBufferFromOutputTexture:()=>Ue,createFloat16MatrixTexture:()=>Ae,createFloat16PackedMatrixTexture:()=>Pe,createFloat32MatrixTexture:()=>Ne,createIndexBuffer:()=>Ee,createPackedMatrixTexture:()=>Le,createUnsignedBytesMatrixTexture:()=>Re,createVertexBuffer:()=>Se,createVertexShader:()=>Te,downloadByteEncodedFloatMatrixFromOutputTexture:()=>Ge,downloadFloat32MatrixFromBuffer:()=>ze,downloadMatrixFromPackedOutputTexture:()=>We,downloadPackedMatrixFromBuffer:()=>He,getInternalFormatForFloat16MatrixTexture:()=>Ce,getInternalFormatForFloat16PackedMatrixTexture:()=>Oe,getInternalFormatForFloat32MatrixTexture:()=>Ie,getInternalFormatForPackedMatrixTexture:()=>De,getInternalFormatForUnsignedBytesMatrixTexture:()=>ke,uploadDenseMatrixToTexture:()=>Be,uploadPixelDataToTexture:()=>$e});var i=n(5360);const s={},o={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function c(e,t){s[e]=t}function l(e){if(!(e in s)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return t.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete s[e]}),!1),1===e?t.getContext("webgl",o)||t.getContext("experimental-webgl",o):t.getContext("webgl2",o)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;s[e]=t}const t=s[e];return t.isContextLost()?(delete s[e],l(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),s[e])}var u,h,d;function p(e,t){return[t,e]}function f(e){const t=i.D5U.NA(e),n=Math.ceil(t/4);return i.D5U.YP(n)}function m(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function g(e,t){const n=e;let r,a,s,o,c,l,u,h,d,p;return 2===(0,i.OBj)().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,s=n.RGBA16F,o=n.RGBA32F,c=n.RED,u=4,h=1,d=n.HALF_FLOAT,p=n.FLOAT):(r=e.RGBA,a=e.RGBA,s=e.RGBA,o=n.RGBA,c=e.RGBA,u=4,h=4,d=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT),l=e.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:o,textureFormatFloat:c,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:h,textureTypeHalfFloat:d,textureTypeFloat:p}}function y(e,t){const n=t();return(0,i.OBj)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+v(e,t))}(e),n}function x(e){return!!((0,i.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function v(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function b(e,t){return W(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function w(e,t){const n=W(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(y(e,(()=>e.shaderSource(n,t))),y(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function _(e,t){const n=W(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(y(e,(()=>e.shaderSource(n,t))),y(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=T.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],a=e.split("\n"),s=a.length.toString().length+2,o=a.map(((e,t)=>i.D5U.oj((t+1).toString(),s)+e));let c=0;for(let e=0;e<o.length;e++)c=Math.max(o[e].length,c);const l=o.slice(0,r-1),u=o.slice(r-1,r),h=o.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${i.D5U.oj(u[0],c)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(h.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(u||(u={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(h||(h={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(d||(d={}));const T=/ERROR: [0-9]+:([0-9]+):/g;function S(e){return W(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}function E(e,t){if(y(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function M(e,t){if(y(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function I(e,t){const n=W(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return y(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),y(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function N(e,t){const n=W(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return y(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),y(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function C(){return 2===(0,i.OBj)().getNumber("WEBGL_VERSION")?1:4}function A(e){return W(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}function k(e,t){const n=(0,i.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}function R(e){return W(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}function D(e,t,n,r,a,i,s){const o=e.getAttribLocation(t,n);return-1!==o&&(y(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),y(e,(()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,i,s))),y(e,(()=>e.enableVertexAttribArray(o))),!0)}function L(e,t,n){V(e,n),y(e,(()=>e.activeTexture(e.TEXTURE0+n))),y(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function O(e,t){V(e,t),y(e,(()=>e.activeTexture(e.TEXTURE0+t))),y(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function P(e,t,n){return W(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}function F(e,t,n){return e.getUniformLocation(t,n)}function B(e,t,n,r){y(e,(()=>L(e,t,r))),y(e,(()=>e.uniform1i(n,r)))}function $(e){y(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),y(e,(()=>e.viewport(0,0,e.canvas.width,e.canvas.height))),y(e,(()=>e.scissor(0,0,e.canvas.width,e.canvas.height)))}function U(e,t,n){y(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),y(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function z(e,t){y(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),y(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function G(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+H(e,t))}function H(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function W(e,t,n){const r=y(e,(()=>t()));if(null==r)throw new Error(n);return r}function V(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)}function j(e,t=2){return i.D5U.NA(e.slice(0,e.length-t))}function X(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function q(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[j(e),...X(e)]),t}function Y(e,t=!1){let n=(0,i.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?i.D5U.nY(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=i.D5U.bp(e);e=t.newShape}let r=i.D5U.NA(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=j(e);let n=2,a=2;return e.length&&([n,a]=X(e)),r=t*(n/2)*(a/2),i.D5U.YP(r).map((e=>2*e))}return i.D5U.YP(r)}function K(e){return e%2==0}function Z(e,t){if(e=e.slice(-2),t=t.slice(-2),i.D5U.cO(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(K(n)&&K(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&K(e[0])&&K(t[0])}let J,Q;function ee(e){if(null==J){const t=l(e);J=t.getParameter(t.MAX_TEXTURE_SIZE)}return J}function te(){J=null}function ne(){Q=null}function re(e){if(null==Q){const t=l(e);Q=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Q)}function ae(e){if(0===e)return 0;let t;const n=l(e);return t=ie(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:ie(n,"EXT_disjoint_timer_query")?1:0,t}function ie(e,t){return null!=e.getExtension(t)}function se(e){try{if(null!=l(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function oe(e){if(0===e)return!1;const t=l(e);if(1===e){if(!ie(t,"OES_texture_float"))return!1}else if(!ie(t,"EXT_color_buffer_float"))return!1;return le(t)}function ce(e){if(0===e)return!1;const t=l(e);if(1!==e){if(ie(t,"EXT_color_buffer_float"))return le(t);const e="EXT_color_buffer_half_float";if(ie(t,e)){const n=t.getExtension(e);return function(e,t){const n=g(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),i}(t,n)}return!1}return!!ie(t,"OES_texture_float")&&(!!ie(t,"WEBGL_color_buffer_float")&&le(t))}function le(e){const t=g(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function ue(e){return 2===e&&null!=l(e).fenceSync}function he(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&i.D5U.hu("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const de=(0,i.OBj)();function pe(){let e,t,n,r,a,s,o,c,l,u;return 2===(0,i.OBj)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",o="out vec4 outputColor;",c="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",o="",c="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:o,defineSpecialNaN:c,defineSpecialInf:l,defineRound:u}}function fe(e,t,n="index"){const r=i.D5U.e3(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / ${t}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`)).join("")}function me(e){const t=i.D5U.e3(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}de.registerFlag("HAS_WEBGL",(()=>de.getNumber("WEBGL_VERSION")>0)),de.registerFlag("WEBGL_VERSION",(()=>se(2)?2:se(1)?1:0)),de.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),de.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===de.get("WEBGL_VERSION"))),de.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),de.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),de.registerFlag("WEBGL_PACK",(()=>de.getBool("HAS_WEBGL"))),de.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_PACK_CLIP",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>!1)),de.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_PACK_REDUCE",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_LAZILY_UNPACK",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_CONV_IM2COL",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>ee(de.getNumber("WEBGL_VERSION")))),de.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>re(de.getNumber("WEBGL_VERSION")))),de.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=de.getNumber("WEBGL_VERSION");return 0===e?0:ae(e)})),de.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>de.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!i.C2$.t())),de.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>oe(de.getNumber("WEBGL_VERSION")))),de.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!de.getBool("WEBGL_FORCE_F16_TEXTURES")&&de.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),de.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>ce(de.getNumber("WEBGL_VERSION")))),de.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>ue(de.getNumber("WEBGL_VERSION")))),de.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>de.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),de.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),de.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)}));const ge="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";class ye{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=u.DENSE;const t=f(e),n=pe();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${fe(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class xe{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=u.DENSE;const t=f(e),n=pe();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${fe(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class ve{constructor(e){this.variableNames=["A"],this.outTexUsage=h.DOWNLOAD;const t=pe();this.outputShape=e,this.userCode=`\n      ${ge}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class be{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=h.DOWNLOAD;const t=pe();this.outputShape=e,this.userCode=`\n      ${ge}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class we{constructor(e,t,n=!1){this.variableNames=["A"];const r=pe(),[a,i]=t;this.outputShape=e;let s="result";n&&(s="floor(result * 255. + 0.5)"),this.userCode=`\n      ${me(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${i};\n        int c = imod(flatIndex, ${i});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${i}.0, ${a}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${s}, 0., 0., 0.);\n      }\n    `}}class _e{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=pe(),[a,i]=t;this.outputShape=e;let s="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let n=0;n<=1;n++){const o=2*t+n;s+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${e[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${t} < ${e[1]}) {\n              localCoords[1] += ${t};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${i};\n              c = imod(flatIndex, ${i});\n              uv = (vec2(c, r) + halfCR) / vec2(${i}.0, ${a}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${o}] = values[0];\n              } else if(offset == 1) {\n                result[${o}] = values[1];\n              } else if(offset == 2) {\n                result[${o}] = values[2];\n              } else {\n                result[${o}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${me(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${s}\n\n        ${r.output} = ${o};\n      }\n    `}}function Te(e){const t=pe();return w(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function Se(e){return I(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function Ee(e){return N(e,new Uint16Array([0,1,2,2,1,3]))}function Me(e,t,n,r,a,i){k(t,n);const s=A(e),o=e.TEXTURE_2D;return y(e,(()=>e.bindTexture(o,s))),y(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),y(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),y(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),y(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),y(e,(()=>e.texImage2D(o,0,r,t,n,0,a,i,null))),y(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),s}function Ie(e){return e.internalFormatFloat}function Ne(e,t,n,r){const[a,i]=p(t,n);return Me(e,a,i,Ie(r),r.textureFormatFloat,e.FLOAT)}function Ce(e){return e.internalFormatHalfFloat}function Ae(e,t,n,r){const[a,i]=p(t,n);return Me(e,a,i,Ce(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function ke(e){return e.downloadTextureFormat}function Re(e,t,n,r){const[a,i]=p(t,n);return Me(e,a,i,ke(r),e.RGBA,e.UNSIGNED_BYTE)}function De(e){return e.internalFormatPackedFloat}function Le(e,t,n,r){const[a,i]=m(t,n);return Me(e,a,i,De(r),e.RGBA,e.FLOAT)}function Oe(e){return e.internalFormatPackedHalfFloat}function Pe(e,t,n,r){const[a,i]=m(t,n);return Me(e,a,i,Oe(r),e.RGBA,r.textureTypeHalfFloat)}function Fe(e,t,n){return y(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),D(e,t,"clipSpacePos",n,3,20,0)&&D(e,t,"uv",n,2,20,12)}function Be(e,t,n,r,a,i){let s,o,c;y(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(s=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,c=e.RGBA):(s=new Float32Array(n*r*4),o=e.FLOAT,c=i.internalFormatPackedFloat),s.set(a),y(e,(()=>e.texImage2D(e.TEXTURE_2D,0,c,n,r,0,e.RGBA,o,s))),y(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function $e(e,t,n){y(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?y(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):y(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),y(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function Ue(e,t,n,r){const a=e.createBuffer();y(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));const i=16*t*n;return y(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,i,e.STREAM_READ))),y(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),y(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}function ze(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}function Ge(e,t,n,r){const[a,i]=p(t,n),s=new Uint8Array(t*n*4);return y(e,(()=>e.readPixels(0,0,a,i,r.downloadTextureFormat,e.UNSIGNED_BYTE,s))),new Float32Array(s.buffer)}function He(e,t,n,r,a,i,s,o){const c=e,l=new Float32Array(function(e,t){const[n,r]=m(e,t);return n*r*4}(i,s));return c.bindBuffer(c.PIXEL_PACK_BUFFER,t),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,l),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),l}function We(e,t,n){const r=new Float32Array(t*n*4);return y(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}class Ve{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=(0,i.OBj)().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,c(t,e)):this.gl=l(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===(0,i.OBj)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=b(this.gl,e),ie(this.gl,t))this.textureHalfFloatExtension=b(this.gl,t);else if((0,i.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),ie(this.gl,r))this.colorBufferHalfFloatExtension=b(this.gl,r);else if((0,i.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",ie(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!ie(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=Se(this.gl),this.indexBuffer=Ee(this.gl),this.framebuffer=R(this.gl),this.textureConfig=g(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,i.OBj)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;y(e,(()=>e.finish())),y(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),y(e,(()=>e.deleteFramebuffer(this.framebuffer))),y(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),y(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),y(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),Ne(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),Ae(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),Re(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),$e(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),Be(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),Pe(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),Le(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(z(this.gl,this.framebuffer),this.outputTexture=null),y(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>Ge(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,i){return He(this.gl,e,0,0,0,a,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return ze(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=Ue(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if((0,i.OBj)().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else(0,i.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,(0,i.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>We(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=_(t,e),r=Te(t),a=S(t);return y(t,(()=>t.attachShader(a,r))),y(t,(()=>t.attachShader(a,n))),E(t,a),this.debug&&M(t,a),this.vertexAttrsAreBound||(this.setProgram(a),this.vertexAttrsAreBound=Fe(t,this.program,this.vertexBuffer)),a}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&y(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&M(this.gl,this.program),y(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?P(this.gl,e,t):F(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),y(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),B(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=m(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&M(this.gl,this.program),G(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),y(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),y(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=b(this.gl,2===(0,i.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,i.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===(0,i.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await i.D5U.WD((()=>this.disposed||this.isQueryAvailable(e,(0,i.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,(0,i.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||i.D5U.WD((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),U(this.gl,e,this.framebuffer),this.debug&&G(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(U(this.gl,this.outputTexture,this.framebuffer),this.debug&&G(this.gl)):z(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;U(r,e,this.framebuffer),this.debug&&G(r),this.outputTexture=e,y(r,(()=>r.viewport(0,0,t,n))),y(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),y(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{getBroadcastDims:je}=i.Wap;function Xe(e,t,n,r){const a=[];e.forEach((e=>{const t=i.D5U.NA(e.shapeInfo.logicalShape);e.shapeInfo.isUniform?a.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(a.push(`uniform sampler2D ${e.name};`),a.push(`uniform int offset${e.name};`))}));const s=a.join("\n"),o=e.map((e=>function(e,t,n=!1){let r="";r+=n?Ye(e):qe(e);const a=e.shapeInfo.logicalShape,s=t.logicalShape;return a.length<=s.length&&(r+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,c=je(e.shapeInfo.logicalShape,t.logicalShape),l=nt(o),u=o-s;let h;const d=["x","y","z","w","u","v"];h=0===s?"":o<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${d[e+u]} = 0;`)).join("\n");let p="";p=o<2&&s>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${d[t+u]}`)).join(", ");let f="return outputValue;";const m=1===i.D5U.NA(e.shapeInfo.logicalShape),g=1===i.D5U.NA(t.logicalShape);if(1!==s||m||g){if(m&&!g)f=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(c.length){const e=s-2,t=s-1;c.indexOf(e)>-1&&c.indexOf(t)>-1?f="return vec4(outputValue.x);":c.indexOf(e)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":c.indexOf(t)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${l} coords = getOutputCoords();\n      ${h}\n      vec4 outputValue = get${r}(${p});\n      ${f}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,o=e.shapeInfo.texShape,c=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&c===l&&null==e.shapeInfo.flatOffset&&i.D5U.cO(o,s))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=nt(l),h=je(e.shapeInfo.logicalShape,t.logicalShape),d=l-c;let p;const f=["x","y","z","w","u","v"];p=0===c?"":l<2&&h.length>=1?"coords = 0;":h.map((e=>`coords.${f[e+d]} = 0;`)).join("\n");let m="";return m=l<2&&c>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${f[t+d]}`)).join(", "),`\n    float ${a}() {\n      ${u} coords = getOutputCoords();\n      ${p}\n      return get${r}(${m});\n    }\n  `}(e,t)),r}(e,t,r))).join("\n"),c=t.texShape,l=pe(),u=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(l);let h,d,p=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${Ke}\n    ${Ze}\n    ${Je}\n  `}(l);return t.isPacked?(h=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,t);case 2:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(i.D5U.cO(e,t))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(e[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t);default:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2);let i=a,s="",o="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],s=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+s,o=`b${t}, `+o;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${s}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${o});\n    }\n  `}(e,t)}}(t.logicalShape,c),d=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(l)):(h=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return 1===(n=t)[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return resTexRC.x * ${n[1]} + resTexRC.y;\n    }\n  `;case 2:return function(e,t){return i.D5U.cO(e,t)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=fe(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(e,t);case 4:return function(e,t){const n=fe(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t);case 5:return function(e,t){const n=fe(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=fe(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}var n}(t.logicalShape,c),d=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(l)),r&&(p+=Qe),[p,u,d,s,h,o,n].join("\n")}function qe(e){const t=e.shapeInfo.logicalShape;switch(t.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;const[r,a]=e.shapeInfo.texShape;if(1===r&&1===a)return`\n      float ${n}() {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const[i,s]=e.shapeInfo.texShape;return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${i}, ${s}, ${et(t)});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${tt(e)}\n      }\n    `;const r=e.shapeInfo.texShape,a=r[0],i=r[1];if(1===i&&1===a)return`\n      float ${n}(int index) {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const s=et(t);return 1===i?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${s}) + 0.5) / ${a}.0);\n        return sampleTexture(${t}, uv);\n      }\n    `:1===a?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${s}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${t}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${i}, index + ${s});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape;if(null!=a&&i.D5U.cO(t,a)){const e=a[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${e}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:s,keptDims:o}=i.D5U.bp(t),c=s;if(c.length<t.length){const t=["row","col"];return`\n      ${qe(rt(e,c))}\n      float ${r}(int row, int col) {\n        return ${r}(${at(t,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));\n        ${tt(e)}\n      }\n    `;const l=a[0],u=a[1],h=et(n);return 1===u?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===l?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${t[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${l}, ${u}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[1]*t[2],s=t[2],{newShape:o,keptDims:c}=i.D5U.bp(t),l=o;if(l.length<t.length){const t=["row","col","depth"];return`\n        ${qe(rt(e,l))}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${at(t,c)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${s}, 1)));\n        ${tt(e)}\n      }\n    `;const u=e.shapeInfo.texShape,h=u[0],d=u[1],p=e.shapeInfo.flatOffset;if(d===a&&null==p)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${s}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(d===s&&null==p)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${s} + depth + ${et(n)};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(e);case 4:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[3],s=t[2]*a,o=t[1]*s,{newShape:c,keptDims:l}=i.D5U.bp(t);if(c.length<t.length){const t=["row","col","depth","depth2"];return`\n      ${qe(rt(e,c))}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${at(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${s}, ${a}, 1)));\n        ${tt(e)}\n      }\n    `;const u=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==u)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===a&&null==u)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${t[1]*t[2]}, ${t[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${s} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${et(n)});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,o=t[2]*s,c=t[1]*o,{newShape:l,keptDims:u}=i.D5U.bp(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${qe(rt(e,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${at(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${o}, ${s}, ${a})) +\n          depth3;\n        ${tt(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${o}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===a&&null==h)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${o} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${et(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=i.D5U.bp(t);if(a.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${qe(rt(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${at(t,s)});\n      }\n    `}const o=t[5],c=t[4]*o,l=t[3]*c,u=t[2]*l,h=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${h}, ${u}, ${l}, ${c})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${o}, 1)));\n        ${tt(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,f=p[0],m=p[1];if(m===h&&null==d)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${c}, ${o})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(m===o&&null==d)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${h} + col * ${u} + depth * ${l} +\n          depth2 * ${c} + depth3 * ${o} + depth4 + ${et(n)};\n      vec2 uv = uvFromFlat(${f}, ${m}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function Ye(e){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${pe().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e.shapeInfo.texShape,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],i=pe();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${a[0]}, ${a[1]}, index);\n      return ${i.texture2D}(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=a[0],o=a[1],c=pe();if(null!=a&&i.D5U.cO(t,a))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${s}.0);\n\n        return ${c.texture2D}(${n}, uv);\n      }\n    `;const l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(t[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${c.texture2D}(${n}, uv);\n    }\n  `}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===t[0]){const n=[1,2],a=["b","row","col"];return`\n        ${Ye(rt(e,t.slice(1)))}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${at(a,n)});\n        }\n      `}const s=i[0],o=i[1],c=Math.ceil(t[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${s}, ${o}, ${c*Math.ceil(t[1]/2)}, ${c}, b, row, col);\n      return ${pe().texture2D}(${n}, uv);\n    }\n  `}(e);default:return function(e){const t=e.shapeInfo.logicalShape,n=t.length,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape,s=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],o=s[0],c=s[1],l=Math.ceil(t[n-1]/2);let u=l*Math.ceil(t[n-2]/2),h="int b, int row, int col",d=`b * ${u} + (row / 2) * ${l} + (col / 2)`;for(let e=2;e<n-1;e++)h=`int b${e}, `+h,u*=t[n-e-1],d=`b${e} * ${u} + `+d;return`\n    vec4 ${a}(${h}) {\n      int index = ${d};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${o});\n      return ${pe().texture2D}(${r}, uv);\n    }\n  `}(e)}}const Ke="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Ze="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Je="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Qe="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function et(e){return`offset${e}`}function tt(e){const t=e.name,n=i.D5U.NA(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function nt(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function rt(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function at(e,t){return t.map((t=>e[t])).join(", ")}function it(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,a=t[n],s=a.shape;if(!i.D5U.cO(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(e.isUniform&&a.isUniform)return;const o=e.texShape,c=a.isUniform?null:a.texData.texShape;if(!i.D5U.cO(o,c))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${c} must match`)}))}var st=n(5226);const{addImpl:ot,bincountImpl:ct,bincountReduceImpl:lt,ceilImpl:ut,concatImpl:ht,expImpl:dt,expm1Impl:pt,floorImpl:ft,gatherV2Impl:mt,greaterImpl:gt,lessImpl:yt,linSpaceImpl:xt,logImpl:vt,maxImpl:bt,maximumImpl:wt,minimumImpl:_t,multiplyImpl:Tt,negImpl:St,prodImpl:Et,rangeImpl:Mt,rsqrtImpl:It,simpleAbsImpl:Nt,sliceImpl:Ct,stridedSliceImpl:At,subImpl:kt,tileImpl:Rt,topKImpl:Dt,transposeImpl:Lt,uniqueImpl:Ot}=st;function Pt(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function Ft(e,t){return 1===t?[e]:Pt(e,t)}class Bt{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=Ft("rc",t),r=nt(t),a=function(e,t,n){if(1===e)return`rc > ${t[0]}`;let r="";for(let a=e-2;a<e;a++)r+=`${n[a]} >= ${t[a]}`,a<e-1&&(r+="||");return r}(t,e,n),i=function(e,t,n,r){if(1===e)return"";const a=r.slice(-2);return`\n    int r = ${a[0]};\n    int c = ${a[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),s=function(e,t){const n=e.length,r=function(e,t){const n=[];for(let r=0;r<=1;r++)for(let a=0;a<=1;a++){let i=`${0===r?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let n=2;n<e;n++)i=`${t[t.length-1-n]},`+i;n.push(i)}return n}(n,t);return 1===n?`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${a}) {\n            setOutput(vec4(0));\n          } else {\n            ${i}\n\n            setOutput(vec4(${s}));\n          }\n        }\n      `}}}class $t{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=t,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${fe(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${me(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${e[1]};\n        int cols = ${e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class Ut{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=Gt(t,n),a=Ht(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const i=zt(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}let s;return r===d.PACKED_2X2_FLOAT32?s=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===d.PACKED_2X2_FLOAT16?s=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===d.UNPACKED_FLOAT32?s=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===d.UNPACKED_FLOAT16?s=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===d.PACKED_4X1_UNSIGNED_BYTE&&(s=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(s),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),s}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const a=Gt(n,r),s=Ht(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);const o=zt(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),c=(0,i.OBj)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==c&&this._numBytesAllocated>c?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=o):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const l=this.usedTextures[s],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function zt(e,t,n,r,a){const i=function(e,t){switch(e){case d.PACKED_2X2_FLOAT32:return De(t);case d.PACKED_2X2_FLOAT16:return Oe(t);case d.UNPACKED_FLOAT32:return Ie(t);case d.UNPACKED_FLOAT16:return Ce(t);case d.PACKED_4X1_UNSIGNED_BYTE:return ke(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let s;if(a){const[t,n]=m(e[0],e[1]);s=t*n}else{const[t,n]=p(e[0],e[1]);s=t*n}return s*function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}(n,i)}function Gt(e,t){if(e===h.UPLOAD)return d.PACKED_2X2_FLOAT32;if(e===h.RENDER||null==e)return function(e){return(0,i.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?d.PACKED_2X2_FLOAT32:d.UNPACKED_FLOAT32:e?d.PACKED_2X2_FLOAT16:d.UNPACKED_FLOAT16}(t);if(e===h.DOWNLOAD||e===h.PIXELS)return d.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function Ht(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class Wt{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const Vt="return abs(x);",jt="return x;";class Xt{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class qt{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=Ft("rc",t),r=nt(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),i=n.slice(-2),s=t<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${s}));\n      }\n    `}}const Yt=i.GDt.ZA,Kt={};class Zt extends i.Zuw{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!(0,i.OBj)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=l((0,i.OBj)().getNumber("WEBGL_VERSION"));this.binaryCache=((t=(0,i.OBj)().getNumber("WEBGL_VERSION"))in Kt||(Kt[t]={}),Kt[t]),this.gpgpu=new Ve(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new Ut(this.gpgpu),this.numMBBeforeWarning=null==(0,i.OBj)().global.screen?1024:(0,i.OBj)().global.screen.height*(0,i.OBj)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new i.JLz(this,(0,i.SRH)())}nextDataId(){return Zt.nextDataId++}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(e,t,n){if(((0,i.OBj)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,i.OBj)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:h.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,a){if((0,i.OBj)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:h.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:o,isPacked:c}=t;if(null!=s){let t;t=c?new Xt(o,jt):new Wt(o,jt);const n=this.runWebGLProgram(t,[{dataId:e,shape:o,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const l=null!=this.activeTimers;let u,h;if(l&&(u=i.D5U.zO()),"complex64"===r){const e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);h=i.Wap.mergeRealAndImagArrays(e,t)}else h=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=i.D5U.zO()-u),this.convertAndCacheOnCPU(e,h)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:o,isPacked:c}=t;if(null!=a){let t;t=c?new Xt(r,jt):new Wt(r,jt);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(!(0,i.OBj)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,i.OBj)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,h=null;if("complex64"!==s&&(0,i.OBj)().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);h=this.gpgpu.createBufferFromTexture(t.texture,...f(r))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const e=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),t=e[0],n=e[1];u=i.Wap.mergeRealAndImagArrays(t,n)}else if(null==h)u=this.getValuesFromTexture(e);else{const e=i.D5U.NA(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(h,e)}null!=l&&this.disposeIntermediateTensorInfo(l);const d=this.convertAndCacheOnCPU(e,u),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach((e=>e(d))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&(0,i.SRH)().removeDataId(e,this),this.pendingDeletes--),d}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>i.D5U.v5(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,i.f3b)(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!x(n)){if((0,i.OBj)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=i.D5U.NA(t);if((0,i.OBj)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),i=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...f(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),i}const s=(0,i.OBj)().getBool("WEBGL_PACK")&&!0===r,o=s?q(t):t,c=s?new be(o):new ve(o),l=this.runWebGLProgram(c,[{shape:o,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture,u.texShape[0],u.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(l),h}timerAvailable(){return(0,i.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=i.D5U.xH(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=i.D5U.xH(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if((0,i.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);o.kernelMs=i.D5U.Sm(e),o.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,i.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:i.D5U.zO(),endMs:null}}endTimer(e){return(0,i.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=i.D5U.zO(),e)}async getQueryTime(e){if((0,i.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:i,slice:s}=this.texData.get(e),o=s&&s.origDataId||e,c=this.dataRefCount.get(o);c>1?this.dataRefCount.set(o,c-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,i)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}getCPUBackend(){return(0,i.OBj)().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=(0,i.SRH)().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(e,t=128){const n=this.getCPUBackend();return(0,i.OBj)().getBool("IS_TEST")||this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&e.every((e=>null==this.texData.get(e.dataId).texture&&i.D5U.NA(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){i.Wap.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return Yt(e.shape,t)}packedUnaryOp(e,t,n){const r=new Xt(e.shape,t),a=this.compileAndRun(r,[e],n);return(0,i.SRH)().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=Nt(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if((0,i.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Vt,e.dtype);const t=new Wt(e.shape,Vt),n=this.compileAndRun(t,[e]);return(0,i.SRH)().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&i.D5U.HD(n[0])){const a=n.map((e=>i.D5U.YW(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return(0,i.SRH)().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new qt(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new Bt(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[j(e.shape),...X(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[j(t),...X(t)],i=new $t(a,n),s=this.runWebGLProgram(i,[r],e.dtype,null,!0);return{dataId:s.dataId,shape:t,dtype:s.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:a}=t,i=q(r);let s;return s=n?new xe(i):new ye(i),{dtype:a,shape:r,dataId:this.runWebGLProgram(s,[{shape:i,dtype:a,dataId:e}],a,null,!0).dataId}}runWebGLProgram(e,t,n,r,a=!1){const s=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(s.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===u.DENSE){const t=f(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===i.D5U.NA(s.shape))return o.values=i.D5U.WP(s.dtype,0),s;const c=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&i.D5U.NA(t.shape)<=(0,i.OBj)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),c.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!Z(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),c.push(t),n=this.texData.get(t.dataId),e.shape=r}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(s.dataId);const h={shape:s.shape,texData:o,isUniform:!1},d=function(e,t,n){let r="";t.concat(n).forEach((e=>{const t=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0,n=e.isUniform?"uniform":e.texData.texShape;r+=`${e.shape}_${n}_${t}`}));const a=e.userCode;let i=e.constructor.name;return i+="_"+r+"_"+a,i}(e,l,h),p=this.getAndSaveBinary(d,(()=>function(e,t,n,r){const a=t.userCode,s=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),o=s.map((e=>e.shapeInfo)),c={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},l=Xe(s,c,a,t.packedInputs),u=e.createProgram(l);let h=null;const d=e.getUniformLocation(u,"NAN",!1);1===(0,i.OBj)().getNumber("WEBGL_VERSION")&&(h=e.getUniformLocation(u,"INFINITY",!1));const p={};for(let n=0;n<t.variableNames.length;n++){const r=t.variableNames[n],a=!1;p[r]=e.getUniformLocation(u,r,a),p[`offset${r}`]=e.getUniformLocation(u,`offset${r}`,a)}return{program:t,source:l,webGLProgram:u,uniformLocations:p,inShapeInfos:o,outShapeInfo:c,infLoc:h,nanLoc:d}}(this.gpgpu,e,l,h))),m=null!=this.activeTimers;let g;m&&(g=this.startTimer()),function(e,t,n,r,a){it(t.inShapeInfos,n),it([t.outShapeInfo],[r]);const s=r.texData.texture,o=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s,o[0],o[1]):e.setOutputMatrixTexture(s,o[0],o[1]),e.setProgram(t.webGLProgram),1===(0,i.OBj)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const a=t.program.variableNames[r],s=t.uniformLocations[a],o=t.uniformLocations[`offset${a}`];if(null!=s)if(n.isUniform)if(i.D5U.NA(n.shape)<2)e.gl.uniform1f(s,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}else null!=n.texData.slice&&null!=o&&e.gl.uniform1i(o,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,s,r)})),null!=a&&a(e,t.webGLProgram),e.executeProgram()}(this.gpgpu,p,l,h,r),c.forEach((e=>this.disposeIntermediateTensorInfo(e))),m&&(g=this.endTimer(g),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(g)}));const y=(0,i.OBj)().get("WEBGL_FLUSH_THRESHOLD");if(y>0){const e=i.D5U.zO();e-this.lastGlFlushTime>y&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!(0,i.OBj)().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){const e=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),e}return s}compileAndRun(e,t,n,r,a=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||((0,i.OBj)().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,i.lub)((()=>{if(!(0,i.OBj)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=(0,i.OBj)().getBool("DEBUG");(0,i.OBj)().set("DEBUG",!1);const t=this.abs((0,i.iD$)(1e-8)).dataSync()[0];if((0,i.OBj)().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:s,usage:o,isPacked:c}=t;if(null!=s)return;const l=null!=this.activeTimers;let u;l&&(u=i.D5U.zO());let d=t.texShape;if(null==d&&(d=Y(n,c),t.texShape=d),null!=a){const e=q(n);let s,o=d[1],p=d[0];const f=a instanceof Uint8Array;c?([o,p]=m(d[0],d[1]),s=new _e(e,[p,o],f)):s=new we(e,[p,o],f);const g=this.makeTensorInfo([p,o],r);this.texData.get(g.dataId).usage=f?h.PIXELS:h.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(g.dataId),o,p,a);const y=!0,x=this.runWebGLProgram(s,[g],r,null,y),v=this.texData.get(x.dataId);t.texture=v.texture,t.texShape=v.texShape,t.isPacked=v.isPacked,t.usage=v.usage,this.disposeIntermediateTensorInfo(g),this.texData.delete(x.dataId),t.values=null,l&&(this.uploadWaitMs+=i.D5U.zO()-u)}else{const e=this.acquireTexture(d,o,r,c);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*i.D5U.bT(t)}}Zt.nextDataId=0;const Jt="3.2.0";function Qt(){(0,i.OBj)().set("WEBGL_FORCE_F16_TEXTURES",!0)}i.C2$.j()&&(0,i.jqO)("webgl",(()=>new Zt),2);const en={forceHalfFloat:Qt};class tn{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=i.Wap.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class nn{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i.Wap.assertAndGetBroadcastShape(t,n);const a=this.outputShape.length;let s="";if(r)if(0===a||1===i.D5U.NA(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s=`\n          ${nt(a)} coords = getOutputCoords();\n        `,1===a)s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=Ft("coords",a);s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}}function rn(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const an={kernelName:i.iJz,backendName:"webgl",kernelFunc:rn};function sn(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,i=n.makeTensorInfo(r.shape,"complex64"),s=n.texData.get(i.dataId),o=rn({inputs:{x:r},backend:n}),c=rn({inputs:{x:a},backend:n});return s.complexTensorInfos={real:o,imag:c},i}const on={kernelName:i.Zz9,backendName:"webgl",kernelFunc:sn},cn="return (a < 0.) ? b * a : a;",ln="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",un={kernelName:i.J$2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,o=n.makeTensorInfo([],"float32",i.D5U.hr(s,"float32")),c=(0,i.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new nn(ln,a.shape,o.shape):new tn(cn,a.shape,o.shape),l=n.runWebGLProgram(c,[a,o],a.dtype);return n.disposeIntermediateTensorInfo(o),l}},hn="return (a < 0.) ? b * a : a;",dn="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",pn={kernelName:i.o0g,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=(0,i.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new nn(dn,r.shape,a.shape):new tn(hn,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}};function fn({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{const{x:o}=a,c=s,l=r||o.dtype;if(c.shouldExecuteOnCPU([o])&&null!=n){const e=c.texData.get(o.dataId),t=n(e.values,l);return c.makeTensorInfo(o.shape,l,t)}let u;return u=(0,i.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new Xt(o.shape,t):new Wt(o.shape,e),c.runWebGLProgram(u,[o],l)}}function mn({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:o,backend:c})=>{const{a:l,b:u}=o,h=c;if(r&&"complex64"===l.dtype){const t=h.texData.get(l.dataId),n=h.texData.get(u.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:l.shape},s={dataId:r.dataId,dtype:r.dtype,shape:u.shape},o=new tn(e,l.shape,u.shape);return h.runWebGLProgram(o,[a,s],(0,i.x8V)(n.dtype,r.dtype))})),s=sn({inputs:{real:r,imag:a},backend:h});return h.disposeIntermediateTensorInfo(r),h.disposeIntermediateTensorInfo(a),s}const d=s||(0,i.x8V)(l.dtype,u.dtype);if(h.shouldExecuteOnCPU([l,u])&&null!=a){const e=h.texData.get(l.dataId),t=h.texData.get(u.dataId),[n,r]=a(l.shape,u.shape,e.values,t.values,d),i=h.makeTensorInfo(r,d);return h.texData.get(i.dataId).values=n,i}let p;return p=(0,i.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new nn(t,l.shape,u.shape,n):new tn(e,l.shape,u.shape),h.runWebGLProgram(p,[l,u],d)}}function gn(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?dn:hn;if("leakyrelu"===e)return t?ln:cn;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class yn{constructor(e,t,n,r=!1,a=!1,i=!1,s=null,o=!1,c=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const l=r?e[1]:e[2],u=Math.ceil(l/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=a?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";s&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${s}\n        }`:c?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${s}\n        }`:`vec4 activation(vec4 x) {\n          ${s}\n        }`,g="result = activation(result);");const y=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let x="rc.x",v="rc.x";e[0]<t[0]?x=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(v=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n\n      const float sharedDimension = ${u}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${u}; i++) {\n          int batchA = ${x};\n          int batchB = ${v};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class xn{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=i.Wap.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const vn="return a * b;";function bn(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,s=i.Wap.upcastType(r.dtype,a.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),i=new xn("return areal * breal - aimag * bimag;",r.shape,a.shape),s=new xn("return areal * bimag + aimag * breal;",r.shape,a.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],c=n.runWebGLProgram(i,o,"float32"),l=n.runWebGLProgram(s,o,"float32"),u=sn({inputs:{real:c,imag:l},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),u}if(n.shouldExecuteOnCPU([r,a])){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),[i,o]=Tt(r.shape,a.shape,e.values,t.values,s),c=n.makeTensorInfo(o,s);return n.texData.get(c.dataId).values=i,c}let o;return o=(0,i.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new nn(vn,r.shape,a.shape):new tn(vn,r.shape,a.shape),n.runWebGLProgram(o,[r,a],s)}const wn={kernelName:i.wYn,backendName:"webgl",kernelFunc:bn};function _n(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,o=n,c=i.D5U.NA(a.shape),l=i.D5U.JZ(s,c),u=i.D5U.NA(l);i.D5U.hu(c===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${a.shape}) has ${c} elements. The new shape and old shape must have the same number of elements.`));const h=o.texData.get(a.dataId);return!h.isPacked||Z(a.shape,l)||null!==h.texture&&Z(h.shape,l)?(o.incRef(a.dataId),{dataId:a.dataId,shape:l,dtype:a.dtype}):function(e,t,n){const r=[j(e.shape),...X(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},i=[j(t),...X(t)],s=new $t(i,r),o=n.runWebGLProgram(s,[a],e.dtype,null,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}(a,l,o)}const Tn={kernelName:i.HZH,backendName:"webgl",kernelFunc:_n};class Sn{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];const o=4*Math.floor(n/4),c=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${i.D5U.GN(e)?e.toPrecision(2):e}, ones);`}let u="";a%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===c}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===c}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===c}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class En{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:i}=e;this.outputShape=[r,i];let s="0.0",o="";"prod"===t?s="1.0":"min"===t?(s="1.0 / 1e-20",o="min"):"max"===t&&(s="-1.0 / 1e-20",o="max");let c=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?c="sumValue":"prod"===t?c="prodValue":"all"===t?c="allValue":"any"===t&&(c="anyValue");const l=4*Math.floor(n/4),u=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,d="vec4";"all"===t?(s="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(s="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${s};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${s});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===u}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===u}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===u}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${c});\n      }\n    `}}function Mn(e,t,n,r){const a=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=i.Wap.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let s=e;for(let i=0;i<a.length;i++){const{inSize:o,windowSize:c,outSize:l}=a[i];let u,h;u="mean"===n?0===i?new Sn({windowSize:c,inSize:o,batchSize:e.shape[0],outSize:l},o):new Sn({windowSize:c,inSize:o,batchSize:e.shape[0],outSize:l}):new En({windowSize:c,inSize:o,batchSize:e.shape[0],outSize:l},n),h=s,s=r.runWebGLProgram(u,[s],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return s}class In{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=nt(this.rank),a=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class Nn{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=nt(this.rank),a=Pt("rc",this.rank),i=new Array(this.rank);for(let e=0;e<t.length;e++)i[t[e]]=a[e];const s=`vec2(${i.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,c=`getChannel(getA(${i.join()}), ${s})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${c};\n      if(${o}) {\n        result[1] = ${c};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${c};\n        if(${o}) {\n          result[3] = ${c};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function Cn(e,t,n){const r=(0,i.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Nn(e.shape,t):new In(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function An(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:o}=r;return function(e,t,n,r){const a=t,s=e.shape.length,o=i.D5U.EC(a,e.shape);let c=o;const l=i.Wap.getAxesPermutation(c,s),u=null!=l;let h=e;u&&(h=Cn(e,l,r),c=i.Wap.getInnerMostAxes(c.length,s)),i.Wap.assertAxesAreInnerMostDims("sum",c,s);const[d,p]=i.Wap.computeOutAndReduceShapes(h.shape,c);let f=d;n&&(f=i.Wap.expandShapeToKeepDim(d,o));const m=i.D5U.NA(p),g=_n({inputs:{x:h},attrs:{shape:[i.D5U.NA(e.shape)/m,m]},backend:r}),y=Mn(g,(0,i.z4k)(e.dtype),"sum",r),x=_n({inputs:{x:y},attrs:{shape:f},backend:r});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(y),u&&r.disposeIntermediateTensorInfo(h),x}(a,s,o,n)}const kn={kernelName:i.GBy,backendName:"webgl",kernelFunc:An};function Rn(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:i}=r,s=n,o=a.shape.length,c=new Array(o);for(let e=0;e<c.length;e++)c[e]=a.shape[i[e]];let l;if(s.shouldExecuteOnCPU([a])){const e=s.texData.get(a.dataId).values,t=Lt(e,a.shape,a.dtype,i,c);l=s.makeTensorInfo(c,a.dtype),s.texData.get(l.dataId).values=t}else l=Cn(a,i,s);return l}const Dn={kernelName:i.G3Y,backendName:"webgl",kernelFunc:Rn};function Ln({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:c=0,activation:l=null}){const u=e.shape.length,h=t.shape.length,d=n?e.shape[u-2]:e.shape[u-1],p=r?t.shape[h-1]:t.shape[h-2],f=n?e.shape[u-1]:e.shape[u-2],m=r?t.shape[h-2]:t.shape[h-1],g=e.shape.slice(0,-2),y=t.shape.slice(0,-2),x=i.D5U.NA(g),v=i.D5U.NA(y),b=x===v||1===x||1===v;i.D5U.hu(u>=2&&h>=2&&b,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${g}) and (${y}).`));const w=(x>v?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([f,m]);i.D5U.hu(d===p,(()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const _=n?[x,d,f]:[x,f,d],T=r?[v,m,p]:[v,p,m],S=_n({inputs:{x:e},backend:a,attrs:{shape:_}}),E=_n({inputs:{x:t},backend:a,attrs:{shape:T}}),M=[S,E],I=Math.max(x,v),N=n?S.shape[1]:S.shape[2],C=null!=s,A=null!=o,k="leakyrelu"===l,R=null!=l?gn(l,!0):null;let D;if((1===f||1===m)&&N>1e3&&!1===(C||A||k||null!=R)){let e=S,t=E;n&&(e=Rn({inputs:{x:S},backend:a,attrs:{perm:[0,2,1]}}),M.push(e)),r&&(t=Rn({inputs:{x:E},backend:a,attrs:{perm:[0,2,1]}}),M.push(t));const i=1===m;let s=e;1!==m&&(s=_n({inputs:{x:e},backend:a,attrs:{shape:[I,N,1]}}),M.push(s));const o=1===m?2:1;let c=t;i&&(c=_n({inputs:{x:t},backend:a,attrs:{shape:[I,1,N]}}),M.push(c));const l=bn({inputs:{a:s,b:c},backend:a});D=An({inputs:{x:l},backend:a,attrs:{axis:o,keepDims:!0}}),M.push(l)}else{const l=(0,i.x8V)(e.dtype,t.dtype),u=new yn(_,T,[I,f,m],n,r,C,R,A,k),h=[S,E];if(null!=s&&h.push(s),A&&h.push(o),k){const e=a.makeTensorInfo([],"float32",i.D5U.hr(c,"float32"));h.push(e),M.push(e)}D=a.runWebGLProgram(u,h,l)}const L=_n({inputs:{x:D},backend:a,attrs:{shape:w}});M.push(D);for(const e of M)a.disposeIntermediateTensorInfo(e);return L}const On={kernelName:i.usg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:i,bias:s,preluActivationWeights:o}=t,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:h}=r;return Ln({a,b:i,transposeA:c,transposeB:l,backend:n,bias:s,preluActivationWeights:o,leakyreluAlpha:h,activation:u})}},Pn="return abs(x);",Fn={kernelName:i.SYM,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=Nt(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let a;return a=(0,i.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Xt(r.shape,Pn):new Wt(r.shape,Pn),n.runWebGLProgram(a,[r],r.dtype)}},Bn=fn({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),$n={kernelName:i.VGw,backendName:"webgl",kernelFunc:Bn},Un=fn({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),zn={kernelName:i.SpW,backendName:"webgl",kernelFunc:Un},Gn="return a + b;",Hn=mn({opSnippet:Gn,packedOpSnippet:Gn,supportsComplex:!0,cpuKernelImpl:ot}),Wn={kernelName:i.mm_,backendName:"webgl",kernelFunc:Hn};class Vn{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class jn{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const Xn={kernelName:i.Xze,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,a=n;if(1===a.length)return rn({inputs:{x:a[0]},backend:r});if(a.length>(0,i.OBj)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),i=e({inputs:a.slice(t),backend:r});return e({inputs:[n,i],backend:r})}const s=a.map((e=>e.dtype)).reduce(((e,t)=>(0,i.x8V)(e,t))),o=a.map((e=>e.shape)),c=(0,i.OBj)().getBool("WEBGL_PACK")?new jn(a[0].shape,o):new Vn(a[0].shape,o);return r.runWebGLProgram(c,a,s)}},qn={kernelName:i.oT6,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:o}=r,c=a.shape.length,l=i.D5U.EC(s,a.shape);let u=l;const h=i.Wap.getAxesPermutation(u,c);let d=a;null!=h&&(d=Rn({inputs:{x:a},backend:n,attrs:{perm:h}}),u=i.Wap.getInnerMostAxes(u.length,c)),i.Wap.assertAxesAreInnerMostDims("all",u,c);const[p,f]=i.Wap.computeOutAndReduceShapes(d.shape,u),m=_n({inputs:{x:d},backend:n,attrs:{shape:[-1,i.D5U.NA(f)]}}),g=Mn(m,m.dtype,"all",n);let y;return y=_n(o?{inputs:{x:g},backend:n,attrs:{shape:i.Wap.expandShapeToKeepDim(p,l)}}:{inputs:{x:g},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(d),y}},Yn={kernelName:i.IKK,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:o}=r,c=a.shape.length,l=i.D5U.EC(s,a.shape);let u=l;const h=i.Wap.getAxesPermutation(u,c);let d=a;null!=h&&(d=Rn({inputs:{x:a},backend:n,attrs:{perm:h}}),u=i.Wap.getInnerMostAxes(u.length,c)),i.Wap.assertAxesAreInnerMostDims("any",u,c);const[p,f]=i.Wap.computeOutAndReduceShapes(d.shape,u),m=_n({inputs:{x:d},backend:n,attrs:{shape:[-1,i.D5U.NA(f)]}}),g=Mn(m,m.dtype,"any",n);let y;return y=_n(o?{inputs:{x:g},backend:n,attrs:{shape:i.Wap.expandShapeToKeepDim(p,l)}}:{inputs:{x:g},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(d),y}};class Kn{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:i}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,i];const s="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${s} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class Zn{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,i.D5U.hu(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");const o=this.outputShape,c=o.length,l=nt(c),u=Ft("coords",c);let h,d;if(1===s){d=c+1;const e=nt(d);h=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[c-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[c-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[c-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[c-2]};`}else d=c,h=`\n        ${l} sourceLocR = coords;\n        ++${u[c-1]};\n        ${l} sourceLocG = coords;\n        ++${u[c-2]};\n        ${l} sourceLocA = coords;\n        --${u[c-1]};\n        ${l} sourceLocB = coords;\n        --${u[c-2]};`;const p=["x","y","z","w","u","v"].slice(0,d),f="."+p[d-1],m=p.map((e=>"int "+e)),g=Ft("sourceLocR",d-1).concat("inIdx.r"),y=Ft("sourceLocG",d-1).concat("inIdx.g"),x=Ft("sourceLocB",d-1).concat("inIdx.b"),v=Ft("sourceLocA",d-1).concat("inIdx.a"),b="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${x.join()}),\n                             getBestIndicesAChannel(${v.join()})));`,_=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${y.join()}) : 0.,\n            hasNextRow ? getAChannel(${x.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${v.join()}) : 0.)`,T=r?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${T}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[c-1]} < ${o[c-1]-1};\n        bool hasNextRow = ${u[c-2]} < ${o[c-2]-1};\n        ${h}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${_};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${_};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${b}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function Jn(e,t,n,r=null){let a=t.shape[0],s=t.shape[1];null!=r&&(a=r.shape[0],s=r.shape[1]);const o=i.Wap.computeOptimalWindowSize(s),c={windowSize:o,inSize:s,batchSize:a,outSize:Math.ceil(s/o)},l=new Kn(c,n,null==r),u=[t];null!=r&&u.push(r);const h=e.runWebGLProgram(l,u,"int32");if(1===h.shape[1])return h;const d=Jn(e,t,n,h);return e.disposeIntermediateTensorInfo(h),d}function Qn(e,t,n,r=null){const a=null!=r?r.shape:t.shape,s=a[a.length-1],o=i.Wap.computeOptimalWindowSize(s),c=new Zn(a,o,n,null==r),l=null==r?[t]:[t,r],u=e.runWebGLProgram(c,l,"int32");if(u.shape.length===t.shape.length){const r=Qn(e,t,n,u);return e.disposeIntermediateTensorInfo(u),r}return u}function er(e,t,n,r){const a=[n];if(i.Wap.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!(0,i.OBj)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],[s,o]=i.Wap.computeOutAndReduceShapes(t.shape,a),c=i.D5U.NA(o),l=_n({inputs:{x:t},backend:e,attrs:{shape:[-1,c]}});n.push(l);const u=Jn(e,l,r);n.push(u);const h=_n({inputs:{x:u},backend:e,attrs:{shape:s}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),h}return Qn(e,t,r)}const tr={kernelName:i.sJF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let o=i.D5U.EC(s,a.shape);const c=i.Wap.getAxesPermutation(o,a.shape.length);let l=a;const u=[];null!=c&&(l=Rn({inputs:{x:a},backend:n,attrs:{perm:c}}),u.push(l),o=i.Wap.getInnerMostAxes(o.length,l.shape.length)),i.Wap.assertAxesAreInnerMostDims("argMax",[o[0]],l.shape.length);const h=er(n,l,o[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},nr={kernelName:i.aJk,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let o=i.D5U.EC(s,a.shape);const c=i.Wap.getAxesPermutation(o,a.shape.length);let l=a;const u=[];null!=c&&(l=Rn({inputs:{x:a},backend:n,attrs:{perm:c}}),u.push(l),o=i.Wap.getInnerMostAxes(o.length,l.shape.length)),i.Wap.assertAxesAreInnerMostDims("argMin",[o[0]],l.shape.length);const h=er(n,l,o[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},rr=fn({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),ar={kernelName:i.M2y,backendName:"webgl",kernelFunc:rr},ir=fn({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),sr={kernelName:i.qw7,backendName:"webgl",kernelFunc:ir},or=fn({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),cr={kernelName:i.jMg,backendName:"webgl",kernelFunc:or},lr=mn({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),ur={kernelName:i.QCc,backendName:"webgl",kernelFunc:lr},hr=fn({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),dr={kernelName:i.Oyi,backendName:"webgl",kernelFunc:hr};class pr{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,s=e.strideHeight,o=e.strideWidth,c=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${s}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${u};\n              wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / count");const v=4*Math.floor(i/4),b=i%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${u};\n            wR += ${c}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${v}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${v};\n          if (${1===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${x});\n      }\n    `}}class fr{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,s=e.strideDepth,o=e.strideHeight,c=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const x="avg"===t;let v="0.0";if(x||(v="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${s}, ${o}, ${c});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${u}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const w=4*Math.floor(i/4),_=i%4,T=`\n      if (${x}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${s}, ${o}, ${c});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${v};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${v});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${T}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===_}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${T}\n            } else if (${2===_}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${T}\n            } else if (${3===_}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${T}\n            }\n          }\n          setOutput(${b});\n        }\n      }\n    `}}const mr={kernelName:i.JhU,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;he(a,"avgPool");const{filterSize:s,strides:o,pad:c,dimRoundingMode:l}=r;i.D5U.hu(i.Wap.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const u=i.Wap.computePool2DInfo(a.shape,s,o,1,c,l);if(1===u.filterWidth&&1===u.filterHeight&&i.D5U.cO(u.inShape,u.outShape))return rn({inputs:{x:a},backend:n});const h=new pr(u,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}},gr={kernelName:i._k9,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:o,pad:c,dimRoundingMode:l,dataFormat:u}=r,h=i.Wap.computePool3DInfo(a.shape,s,o,[1,1,1],c,l,u),d=new fr(h,"avg",!1);return n.runWebGLProgram(d,[a],"float32")}};class yr{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,i=e.dilationHeight,s=e.dilationWidth,o=e.effectiveFilterHeight,c=e.effectiveFilterWidth,l=o-1-e.padInfo.top,u=c-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${u});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${i}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${c};\n            wC+= ${s}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class xr{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,i=e.strideHeight,s=e.strideWidth,o=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=u-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${u};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${c}) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const vr={kernelName:i.IMb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,o=s,{filterSize:c,strides:l,pad:u,dimRoundingMode:h}=r,d=i.Wap.computePool3DInfo(o.shape,c,l,[1,1,1],u,h),p=new xr(d);return n.runWebGLProgram(p,[a],o.dtype)}},br={kernelName:i.ROF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,o=s;he([a,s],"avgPoolGrad");const{filterSize:c,strides:l,pad:u}=r,h=i.Wap.computePool2DInfo(o.shape,c,l,1,u),d=new yr(h);return n.runWebGLProgram(d,[a],o.dtype)}},wr={kernelName:i.XLW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:i}=t,{transposeA:s,transposeB:o}=r;return Ln({a,b:i,transposeA:s,transposeB:o,backend:n})}};class _r{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],i.Wap.assertAndGetBroadcastShape(e,t),i.Wap.assertAndGetBroadcastShape(e,n);let o="0.0";null!=r&&(i.Wap.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let c="1.0";null!=a&&(i.Wap.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${o};\n        float scale = ${c};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class Tr{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],i.Wap.assertAndGetBroadcastShape(e,t),i.Wap.assertAndGetBroadcastShape(e,n);let o="vec4(0.0)";null!=r&&(i.Wap.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let c="vec4(1.0)";null!=a&&(i.Wap.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${o};\n        vec4 scale = ${c};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const Sr={kernelName:i.sHE,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:a,variance:s,offset:o,scale:c}=e;i.D5U.hu(a.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),i.D5U.hu(null==o||a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),i.D5U.hu(null==c||a.shape.length===c.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[r,a,s];let h=null;null!=o&&(h=o.shape,u.push(o));let d=null;null!=c&&(d=c.shape,u.push(c));const p=(0,i.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new Tr(r.shape,a.shape,s.shape,h,d,l):new _r(r.shape,a.shape,s.shape,h,d,l);return t.runWebGLProgram(p,u,u[0].dtype)}};class Er{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=nt(this.rank),n=`uniform int start[${this.rank}];`,r=function(e){if(1===e)return"sourceLoc";if(e<=6)return Mr.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let a;a=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${Mr[t]} = start[${t}] + coords.${Mr[t]};`)).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${a}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}const Mr=["x","y","z","w","u","v"];class Ir{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;const t=nt(this.rank),n=Ft("coords",this.rank),r=Ft("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,i=`getChannel(getSource(${r.join()}), ${a})`,s=`\n      result.x = ${i};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${i};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${i};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${i};\n        }\n      }\n    `,c=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${c}\n        vec4 result = vec4(0.);\n        ${s}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}function Nr(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:o}=r,[c,l]=i.kuN.parseSliceParams(a,s,o);if(i.kuN.assertParamsValid(a,c,l),0===i.D5U.NA(l))return n.makeTensorInfo(l,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=Ct(e.values,c,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,t)}const{isPacked:u}=n.texData.get(a.dataId),h=i.kuN.isSliceContinous(a.shape,c,l);if(u||!h){const e=(0,i.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ir(l):new Er(l),t=e.getCustomSetupFunc(c);return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,r){const a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),o=r.texData.get(s.dataId);Object.assign(o,a),o.refCount=1,o.shape=n,o.dtype=e.dtype;let c=i.kuN.computeFlatOffset(t,i.D5U.e3(e.shape));a.slice&&(c+=a.slice.flatOffset),o.slice={flatOffset:c,origDataId:a.slice&&a.slice.origDataId||e.dataId};const l=r.dataRefCount.get(o.slice.origDataId)||1;return r.dataRefCount.set(o.slice.origDataId,l+1),s}(a,c,l,n)}const Cr={kernelName:i.p2w,backendName:"webgl",kernelFunc:Nr},Ar={kernelName:i.zws,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:o}=r;i.D5U.hu(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const c=s.reduce(((e,t)=>e*t)),l=i.Wap.getReshaped(a.shape,s,c),u=i.Wap.getPermuted(l.length,s.length),h=i.Wap.getReshapedPermuted(a.shape,s,c),d=i.Wap.getSliceBeginCoords(o,s.length),p=i.Wap.getSliceSize(h,o,s.length),f=[],m=_n({inputs:{x:a},backend:n,attrs:{shape:l}}),g=Rn({inputs:{x:m},backend:n,attrs:{perm:u}}),y=_n({inputs:{x:g},backend:n,attrs:{shape:h}}),x=Nr({inputs:{x:y},backend:n,attrs:{begin:d,size:p}});return f.push(m),f.push(g),f.push(y),f.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},kr={kernelName:i.zvY,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:i}=t,{size:s}=r,o=n.readSync(a.dataId),c=n.readSync(i.dataId),l=ct(o,c,i.dtype,i.shape,s);return n.makeTensorInfo([s],i.dtype,l)}},Rr=mn({opSnippet:"return float(a != b);",dtype:"bool"}),Dr={kernelName:i.yQU,backendName:"webgl",kernelFunc:Rr};function Lr(e){const{inputs:t,backend:n}=e,{input:r}=t;return rn({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const Or={kernelName:i.xJR,backendName:"webgl",kernelFunc:Lr},Pr={kernelName:i.RFZ,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:a}=t,{x:s}=n,{dtype:o}=a;if("complex64"===o){if("complex64"===s.dtype)return rn({inputs:{x:s},backend:r});const t=i.lls(s.shape),n=e({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=sn({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===s.dtype){const t=Lr({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:o}});return r.disposeIntermediateTensorInfo(t),n}if(!i.D5U.QB(s.dtype,o)){const e=rn({inputs:{x:s},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:o}}if("int32"===o)return function(e,t){const n=new Wt(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===o){const e=r.makeTensorInfo([],"bool",i.D5U.WP("bool",1)),t=Rr({inputs:{a:s,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${o}`)}},Fr="return ceil(x);",Br=fn({opSnippet:Fr,packedOpSnippet:Fr,cpuKernelImpl:ut}),$r={kernelName:i.gJX,backendName:"webgl",kernelFunc:Br};class Ur{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}class zr{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}const Gr={kernelName:i.xnO,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:o}=r;let c;c=(0,i.OBj)().getBool("WEBGL_PACK_CLIP")?new zr(a.shape):new Ur(a.shape);const l=c.getCustomSetupFunc(s,o);return n.runWebGLProgram(c,[a],a.dtype,l)}};class Hr{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function Wr(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const Vr={kernelName:i.yj2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),i=new Hr(r.shape),s=[Wr(r,a.complexTensorInfos.real),Wr(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(i,s,s[0].dtype)}};class jr{constructor(e){this.outputShape=[],this.outputShape=i.Wap.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class Xr{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=i.Wap.computeOutShape(e,t);const n=this.outputShape,r=n.length,a=nt(r),s=Ft("coords",r),o=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const c=new Array(e.length-1);c[0]=e[0][t];for(let n=1;n<c.length;n++)c[n]=c[n-1]+e[n][t];const l=o[t],u=o.slice(-2),h=o.join();let d=`if (${l} < ${c[0]}) {\n        return getChannel(\n            getT0(${h}), vec2(${u.join()}));\n        }`;for(let e=1;e<c.length;e++){const t=c[e-1];d+=`\n        if (${l} < ${c[e]}  && ${l} >= ${c[e-1]}) {\n          return getChannel(\n            getT${e}(${qr(o,l,t)}),\n            vec2(${qr(u,l,t)}));\n        }`}const p=c.length,f=c[c.length-1];d+=`\n        return getChannel(\n          getT${p}(${qr(o,l,f)}),\n          vec2(${qr(u,l,f)}));`,this.userCode=`\n      float getValue(${o.map((e=>"int "+e))}) {\n        ${d}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}function qr(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function Yr(e){const{inputs:t,backend:n}=e,{input:r}=t;return rn({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const Kr={kernelName:i.J_u,backendName:"webgl",kernelFunc:Yr};function Zr(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>Lr({inputs:{input:e},backend:n}))),a=e.map((e=>Yr({inputs:{input:e},backend:n}))),i=Zr(r,t,n),s=Zr(a,t,n),o=sn({inputs:{real:i,imag:s},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(s),o}if("string"===r){const{tensors2D:a,outShape:s}=Jr(e,t,n),o=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),c=1===a[0].shape[0],l=ht(o,s,r,c),u=i.Wap.computeOutShape(e.map((e=>e.shape)),t),h=n.makeTensorInfo(u,r,l);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}if(e.length>(0,i.OBj)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),a=Zr(e.slice(0,r),t,n),i=Zr(e.slice(r),t,n),s=Zr([a,i],t,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),s}if((0,i.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const a=new Xr(e.map((e=>e.shape)),t);return n.runWebGLProgram(a,e,r)}const{tensors2D:a,outShape:s}=Jr(e,t,n),o=new jr(a.map((e=>e.shape))),c=n.runWebGLProgram(o,a,r);a.forEach((e=>n.disposeIntermediateTensorInfo(e)));const l=_n({inputs:{x:c},attrs:{shape:s},backend:n});return n.disposeIntermediateTensorInfo(c),l}function Jr(e,t,n){const r=i.Wap.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>_n({inputs:{x:e},attrs:{shape:[-1,i.D5U.NA(e.shape.slice(t))]},backend:n}))),outShape:r}}function Qr(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=i.D5U.EC(a,t[0].shape)[0],o=i.Wap.computeOutShape(t.map((e=>e.shape)),s);if(0===i.D5U.NA(o))return n.makeTensorInfo(o,t[0].dtype,[]);const c=t.filter((e=>i.D5U.NA(e.shape)>0));if(1===c.length)return rn({inputs:{x:c[0]},backend:n});const l=c.map((e=>e.shape));return i.Wap.assertParamsConsistent(l,s),Zr(c,s,n)}const ea={kernelName:i.Eh3,backendName:"webgl",kernelFunc:Qr};class ta{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const i=e.padInfo.top,s=e.padInfo.left,o=e.strideHeight,c=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,x=m?3:1;let v="",b="";n&&(v=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,b="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${v}\n\n      const ivec2 strides = ivec2(${o}, ${c});\n      const ivec2 pads = ivec2(${i}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${x}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${u};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${b}\n        setOutput(result);\n      }\n    `}}class na{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,i=e.strideHeight,s=e.strideWidth,o=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,u=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${i}, ${s});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${u}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${c};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ra{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const{filterWidth:r,inChannels:a,strideWidth:i,strideHeight:s,padInfo:o,outWidth:c,dilationWidth:l,dilationHeight:u,dataFormat:h}=n,{left:d,top:p}=o,f=a*r,m=pe(),g="channelsLast"===h,y=g?0:1,x=g?1:2;let v="";for(let n=0;n<=1;n++)for(let r=0;r<=1;r++)v+=`\n          blockIndex = rc.y + ${r};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${e[1]} && pos < ${e[0]}) {\n            offsetY = int(blockIndex / (${c})) * ${s} - ${p};\n            d0 = offsetY + ${u} * (pos / ${f});\n\n            if(d0 < ${t[y]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${c}.) * ${i}. - ${d}.);\n              d1 = offsetX + ${l} * (int(mod(float(pos), ${f}.) / ${a}.));\n\n              if(d1 < ${t[x]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${a}.));\n\n                if (${g}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+r}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+r}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${v}\n\n        ${m.output} = result;\n      }\n    `}}function aa({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:o=0,activation:c=null}){const l=e.shape,u=r.texData.get(e.dataId),h=n.inChannels,d=l[0]*l[1]*l[2],p=n.outChannels,f="channelsLast"===n.dataFormat;let m;const g=[],y=(1===d||1===p)&&h>1e3,x=l[2]%2!=0&&!!u.isPacked;if(!y&&(0,i.OBj)().getBool("WEBGL_LAZILY_UNPACK")&&(0,i.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&x){const h=f?l[0]*l[1]*(l[2]+1):l[0]*l[2]*(l[3]+1),d={dataId:e.dataId,shape:[1,h,n.inChannels],dtype:e.dtype},p=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,i.D5U.hu(Z(u.shape,d.shape),(()=>`packed reshape ${u.shape} to ${d.shape} isn't free`));const y=_n({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(y);const x=Ln({a:d,b:y,backend:r,transposeA:!1,transposeB:!1,bias:a,activation:c,preluActivationWeights:s,leakyreluAlpha:o}),v=r.texData.get(x.dataId);i.D5U.hu(v.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=p,v.shape=n.outShape,m=rn({inputs:{x},backend:r}),m.shape=n.outShape,g.push(x)}else{const i=_n({inputs:{x:e},backend:r,attrs:{shape:[1,f?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],n.inChannels]}}),u=_n({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=Ln({a:i,b:u,transposeA:!1,transposeB:!1,backend:r,bias:a,activation:c,preluActivationWeights:s,leakyreluAlpha:o});m=_n({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),g.push(i),g.push(u),g.push(h)}for(const e of g)r.disposeIntermediateTensorInfo(e);return m}function ia({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:o=0,activation:c=null}){const{filterWidth:l,filterHeight:u,inChannels:h,outWidth:d,outHeight:p,dataFormat:f}=n,m="channelsLast"===f,g=l*u*h,y=p*d,x=[g,y],v=[],b=_n({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),w=_n({inputs:{x:t},backend:r,attrs:{shape:[1,g,i.D5U.NA(t.shape)/g]}});v.push(b),v.push(w);const _=new ra(x,b.shape,n),T=r.runWebGLProgram(_,[b],"float32"),S=_n({inputs:{x:T},backend:r,attrs:{shape:[1,x[0],x[1]]}});v.push(T),v.push(S);const E=null!=a,M=null!=s,I="leakyrelu"===c,N=c?gn(c,!0):null,C=new yn(S.shape,w.shape,[1,y,n.outChannels],!0,!1,E,N,M,I),A=[S,w];if(a&&A.push(a),M&&A.push(s),I){const e=r.makeTensorInfo([],"float32",i.D5U.hr(o,"float32"));A.push(e),v.push(e)}const k=r.runWebGLProgram(C,A,"float32"),R=_n({inputs:{x:k},backend:r,attrs:{shape:m?[1,p,d,n.outChannels]:[1,n.outChannels,p,d]}});v.push(k);for(const e of v)r.disposeIntermediateTensorInfo(e);return R}const sa={kernelName:i.mhS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:o,pad:c,dataFormat:l,dilations:u,dimRoundingMode:h}=r,d=i.Wap.convertConv2DDataFormat(l),p=i.Wap.computeConv2DInfo(a.shape,s.shape,o,u,c,h,!1,d);let f;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if((0,i.OBj)().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])f=ia({x:a,filter:s,convInfo:p,backend:n});else{const e=new ta(p);f=n.runWebGLProgram(e,[a,s],"float32")}else f=aa({x:a,filter:s,convInfo:p,backend:n});const m=_n({inputs:{x:f},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(f),m}};class oa{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,i="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${i}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ca{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,i="channelsLast"===e.dataFormat,s=t-1-e.padInfo.top,o=n-1-e.padInfo.left,c=i?1:2,l=i?2:3,u=i?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${u}];\n\n        ivec2 dyCorner = ivec2(coords[${c}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${i}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class la{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,i=e.padInfo.top,s=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${i};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${s};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ua{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,i=e.strideHeight,s=e.strideWidth,o=t-1-e.padInfo.front,c=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${c}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const ha={kernelName:i.wUP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:o,pad:c,dataFormat:l,dimRoundingMode:u,filterShape:h}=r,d=i.Wap.convertConv2DDataFormat(l),p=i.Wap.computeConv2DInfo(a.shape,h,o,1,c,u,!1,d),f=new oa(p);return n.runWebGLProgram(f,[a,s],"float32")}},da={kernelName:i.wm,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:o,strides:c,pad:l,dataFormat:u,dimRoundingMode:h}=r,d=i.Wap.convertConv2DDataFormat(u),p=i.Wap.computeConv2DInfo(o,s.shape,c,1,l,h,!1,d),f=new ca(p);return n.runWebGLProgram(f,[a,s],"float32")}},pa={kernelName:i.x12,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:o,pad:c,dilations:l}=r,u=i.Wap.computeConv3DInfo(a.shape,s.shape,o,l,c),h=new na(u);return n.runWebGLProgram(h,[a,s],"float32")}},fa={kernelName:i.o2y,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:o,pad:c,filterShape:l}=r,u=i.Wap.computeConv3DInfo(a.shape,l,o,1,c),h=new la(u);return n.runWebGLProgram(h,[a,s],"float32")}},ma={kernelName:i.ik2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:o,strides:c,inputShape:l}=r,u=i.Wap.computeConv3DInfo(l,s.shape,c,1,o),h=new ua(u);return n.runWebGLProgram(h,[a,s],"float32")}},ga=fn({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),ya={kernelName:i.mc4,backendName:"webgl",kernelFunc:ga},xa=fn({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),va={kernelName:i.TR1,backendName:"webgl",kernelFunc:xa};class ba{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,s,o,c]=e,[l]=t,[u,h]=n;this.outputShape=[l,u,h,c];const d="bilinear"===r?1:0,[p,f]=[s-1+".0",o-1+".0"],[m,g,y]=u>1?[""+(s-1)/(u-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[x,v,b]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${x});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${i}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${v};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${b};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const wa={kernelName:i.VcC,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:i,boxInd:s}=t,{cropSize:o,method:c,extrapolationValue:l}=r,u=new ba(a.shape,i.shape,o,c,l);return n.runWebGLProgram(u,[a,i,s],"float32")}};class _a{constructor(e,t,n){this.variableNames=["x"],this.outputShape=e;const r=e.length,a=t?"0.0":`getX(${Ta(r,"coords")})`,i=e[e.length-1];let s="",o="";t?(s=n?"end != "+(i-1):"end != 0",o=n?"end + 1":"end - 1"):(s=n?`end + pow2 < ${i}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${nt(r)} coords = getOutputCoords();\n        int end = ${Sa(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${s}) {\n          int idx = ${o};\n          ${Sa(r,"coords")} = idx;\n          val += getX(${Ta(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.index&&(this.index=t.getUniformLocation(n,"index")),t.gl.uniform1f(this.index,e)}}}function Ta(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function Sa(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const Ea={kernelName:i.iHb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:o,reverse:c}=r,l=a.shape.length,u=i.Wap.getAxesPermutation([s],l);let h=a;null!=u&&(h=Rn({inputs:{x:a},backend:n,attrs:{perm:u}}));const d=i.Wap.getInnerMostAxes(1,l)[0];if(d!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${a.shape.length-1} but got axis=${s}`);const p=h.shape[d];let f=rn({inputs:{x:h},backend:n});for(let e=0;e<=Math.ceil(Math.log2(p))-1;e++){const t=new _a(h.shape,!1,c),r=t.getCustomSetupFunc(e),a=f;f=n.runWebGLProgram(t,[f],f.dtype,r),n.disposeIntermediateTensorInfo(a)}if(o){const e=new _a(h.shape,o,c),t=f;f=n.runWebGLProgram(e,[f],f.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=u){const e=Rn({inputs:{x:f},backend:n,attrs:{perm:i.Wap.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(h),e}return f}},Ma={kernelName:i.QRR,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:i}=t,{size:s,binaryOutput:o}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(i.dataId),r=ct(e,t,i.dtype,i.shape,s);return n.makeTensorInfo([s],i.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(i),r=lt(e,t,s,o);return n.makeTensorInfo(r.shape,i.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};class Ia{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const Na={kernelName:i.T0n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:o}=r;i.D5U.hu(s>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`));const c=a.shape[0],l="NHWC"===o?a.shape[1]:a.shape[2],u="NHWC"===o?a.shape[2]:a.shape[3],h="NHWC"===o?a.shape[3]:a.shape[1],d=l*s,p=u*s,f=h/(s*s),m=new Ia("NHWC"===o?[c,d,p,f]:[c,f,d,p],s,o);return n.runWebGLProgram(m,[a],a.dtype)}};class Ca{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const i=e.inHeight,s=e.inWidth,o=e.padInfo.top,c=e.padInfo.left,l=e.strideHeight,u=e.strideWidth,h=e.dilationHeight,d=e.dilationWidth,p=e.filterHeight,f=e.filterWidth,m=e.outChannels/e.inChannels;let g="",y="";n&&(g=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,y="result = activation(result);");const x=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${l}, ${u});\n      const ivec2 pads = ivec2(${o}, ${c});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${m};\n        int q = d2 - d1 * ${m};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${h};\n\n          if (xR < 0 || xR >= ${i}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${d};\n\n            if (xC < 0 || xC >= ${s}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${x}\n        ${y}\n        setOutput(result);\n      }\n    `}}class Aa{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;const s=e.inHeight,o=e.inWidth,c=e.padInfo.top,l=e.padInfo.left,u=e.strideHeight,h=e.strideWidth,d=e.dilationHeight,p=e.dilationWidth,f=e.filterHeight,m=e.filterWidth,g=m;let y="int xR; int xC; int xCOffset;";for(let e=0;e<f;e++)for(let t=0;t<m;t++)y+=`\n          vec4 xTexelR${e}C${2*t} = vec4(0.);\n          vec4 wR${e}C${t} = vec4(0.);\n          vec4 xR${e}C${t} = vec4(0.);`;for(let e=0;e<f;e++)for(let t=0;t<g;t++){const n=2*t;if(y+=`\n          xR = xRCorner + ${e*d};\n          xC = xCCorner + ${n*p};\n        `,1===h){if(n<m&&(y+=l%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${o}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${o}) {\n                    xTexelR${e}C${n}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${o}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${o}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${e}C${n} = vec4(previous.zw, xTexelR${e}C${n}.xy);\n                } else {\n                  xR${e}C${n} = vec4(0, 0, xTexelR${e}C${n}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${s} && xC >= 0 && xC < ${o}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xR${e}C${n} = xTexelR${e}C${n};\n              `,n+1<m)){const t=l%2==0?i.D5U.nY(p):p;p%2==0&&l%2==1||p%2!=0&&l%2!=1?(y+=`\n                  xCOffset = xC + ${l%2} + ${t};\n\n                  if(xR >= 0 && xR < ${s} &&\n                    xCOffset >= 0 && xCOffset < ${o}) {\n                    xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,p>1&&(y+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${s} &&\n                      xCOffset >= 0 && xCOffset < ${o}) {\n                      xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${e}C${n} = vec4(0.);\n                    }\n                  `),y+=`\n                  xR${e}C${n+1} = vec4(\n                    xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.xy);\n                `):y+=`\n                  xCOffset = xC + ${t};\n\n                  if(xR >= 0 && xR < ${s} &&\n                    xCOffset >= 0 && xCOffset < ${o}) {\n                    xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${e}C${n+1} = xTexelR${e}C${n+2};\n                `}}else n<m&&(y+=`\n              if(xR >= 0 && xR < ${s}) {\n            `,l%2==1?(y+=`\n                xCOffset = xC + 1 - ${h};\n                if(xCOffset >= 0 && xCOffset < ${o}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${o}) {\n                  xTexelR${e}C${n+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${e}C${n+2} = vec4(0.);\n                }\n\n                xR${e}C${n} = vec4(\n                  xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.zw);\n              `,n+1<m&&(y+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${h};\n                  if(xCOffset >= 0 && xCOffset < ${o}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${e}C${n+1} = vec4(xTexelR${e}C${n+2}.xy, final.xy);\n                `)):(y+=`\n                if(xC >= 0 && xC < ${o}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + ${h};\n                if(xCOffset >= 0 && xCOffset < ${o}) {\n                  xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${e}C${n+2} = vec4(0.);\n                }\n\n                xR${e}C${n} = vec4(\n                  xTexelR${e}C${n}.xy, xTexelR${e}C${n+2}.xy);\n              `,n+1<m&&(y+=`\n                  xR${e}C${n+1} = vec4(\n                    xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.zw);\n                `)),y+="}");n<m&&(y+=`\n            vec4 wTexelR${e}C${n} = getW(${e}, ${n}, d1, q);\n            wR${e}C${n} = vec4(wTexelR${e}C${n}.xz, wTexelR${e}C${n}.xz);\n          `,n+1<m&&(y+=`\n              vec4 wTexelR${e}C${n+1} = getW(${e}, ${n+1}, d1, q);\n              wR${e}C${n+1} =\n                vec4(wTexelR${e}C${n+1}.xz, wTexelR${e}C${n+1}.xz);`))}for(let e=0;e<f;e++)for(let t=0;t<m;t++)y+=`dotProd += xR${e}C${t} * wR${e}C${t};`;let x="",v="";n&&(x=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,v="result = activation(result);");const b=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${u}, ${h});\n      const ivec2 pads = ivec2(${c}, ${l});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${y}\n\n        vec4 result = dotProd;\n        ${b}\n        ${v}\n        setOutput(result);\n      }\n    `}}const ka={kernelName:i.cie,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:o,pad:c,dilations:l,dimRoundingMode:u}=r;let h=l;null==h&&(h=[1,1]),i.D5U.hu(i.Wap.eitherStridesOrDilationsAreOne(o,h),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${h}'`));const d=i.Wap.computeConv2DInfo(a.shape,s.shape,o,h,c,u,!0);let p;return p=(0,i.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels==1?new Aa(d):new Ca(d),n.runWebGLProgram(p,[a,s],"float32")}};class Ra{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${i} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Da{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,i=t-1-e.padInfo.top,s=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const La={kernelName:i.sL$,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:o,dilations:c,pad:l,dimRoundingMode:u,filterShape:h}=r,d=i.Wap.computeConv2DInfo(a.shape,h,o,c,l,u,!0),p=new Ra(d);return n.runWebGLProgram(p,[a,s],"float32")}},Oa={kernelName:i.y7R,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:o,dilations:c,pad:l,dimRoundingMode:u,inputShape:h}=r,d=i.Wap.computeConv2DInfo(h,s.shape,o,c,l,u,!0),p=new Da(d);return n.runWebGLProgram(p,[a,s],"float32")}};class Pa{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const Fa={kernelName:i.$w,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=i.D5U.NA(r.shape),o=_n({inputs:{x:r},backend:n,attrs:{shape:[s]}}),c=new Pa(s),l=n.runWebGLProgram(c,[o],o.dtype),u=_n({inputs:{x:l},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}};class Ba{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:i,filterHeight:s,filterWidth:o,dilationHeight:c,dilationWidth:l}=e,{top:u,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${i});\n      const ivec2 pads = ivec2(${u}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${s}; h++) {\n          int hIn = hBeg + h * ${c};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const $a={kernelName:i.p4S,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:o,pad:c,dilations:l}=r,u=i.Wap.computeDilation2DInfo(a.shape,s.shape,o,c,"NHWC",l);let h;const d=new Ba(u);h=n.runWebGLProgram(d,[a,s],"float32");const p=_n({inputs:{x:h},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(h),p}},Ua=fn({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),za={kernelName:i.SX0,backendName:"webgl",kernelFunc:Ua},Ga={kernelName:i.HEU,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=(0,i.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new nn("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new tn("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}},Ha=mn({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool"}),Wa={kernelName:i.hdR,backendName:"webgl",kernelFunc:Ha},Va=fn({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${i.Wap.ERF_P};\n  float a1 = ${i.Wap.ERF_A1};\n  float a2 = ${i.Wap.ERF_A2};\n  float a3 = ${i.Wap.ERF_A3};\n  float a4 = ${i.Wap.ERF_A4};\n  float a5 = ${i.Wap.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),ja={kernelName:i.Omj,backendName:"webgl",kernelFunc:Va},Xa="return exp(x);",qa=fn({opSnippet:Xa,packedOpSnippet:Xa,cpuKernelImpl:dt}),Ya={kernelName:i.NEP,backendName:"webgl",kernelFunc:qa};function Ka(e){const{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,o=s.shape.length,c=s.shape.slice();let l=a;return a<0&&(i.D5U.hu(-(o+1)<=a,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),l=o+a+1),c.splice(l,0,1),_n({inputs:{x:s},backend:r,attrs:{shape:c}})}const Za={kernelName:i.YFo,backendName:"webgl",kernelFunc:Ka},Ja="return exp(x) - 1.0;",Qa=fn({opSnippet:Ja,packedOpSnippet:Ja,cpuKernelImpl:pt}),ei={kernelName:i.Y0y,backendName:"webgl",kernelFunc:Qa};class ti{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${r}.0`:"1.0";let s;if("real"===e)s="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);s="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${s}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function ni(e,t,n){const r=n.texData.get(e.dataId),a=i.D5U.NA(e.shape),s=e.shape[e.shape.length-1],o=_n({inputs:{x:e},backend:n,attrs:{shape:[a/s,s]}}),c=o.shape,l=new ti("real",c,t),u=new ti("imag",c,t),h=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:c},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:c}],d=n.runWebGLProgram(l,h,"float32"),p=n.runWebGLProgram(u,h,"float32"),f=sn({inputs:{real:d,imag:p},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p);const m=_n({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(f),m}const ri={kernelName:i.vwp,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return ni(r,!1,n)}};class ai{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}function ii(e){const{backend:t,attrs:n}=e,{shape:r,value:a}=n;let{dtype:s}=n;if(s=s||i.D5U.D2(a),"string"===s){const e=i.D5U.rQ(s,i.D5U.NA(r));return e.fill(a),t.makeTensorInfo(r,s,e)}{const e=new ai(r,a),n=e.getCustomSetupFunc(a);return t.runWebGLProgram(e,[],s,n)}}const si={kernelName:i.deh,backendName:"webgl",kernelFunc:ii};class oi{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const ci={kernelName:i.Uyb,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new oi(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},li="return floor(x);",ui=fn({opSnippet:li,packedOpSnippet:li,cpuKernelImpl:ft}),hi={kernelName:i.OR,backendName:"webgl",kernelFunc:ui},di=mn({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),pi={kernelName:i.jeX,backendName:"webgl",kernelFunc:di};class fi{constructor(e){this.variableNames=["A"];const t=pe(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class mi{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=pe(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const gi={kernelName:i.eBW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:a}=t;const{numChannels:s}=r,o="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,c="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,l="undefined"!=typeof ImageBitmap&&a instanceof ImageBitmap,[u,d]=o?[a.videoWidth,a.videoHeight]:[a.width,a.height],p=[d,u],f=[d,u,s];(c||o||l)&&(null==yi&&(yi=document.createElement("canvas").getContext("2d")),yi.canvas.width=u,yi.canvas.height=d,yi.drawImage(a,0,0,u,d),a=yi.canvas);const m=n.makeTensorInfo(p,"int32");n.texData.get(m.dataId).usage=h.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(m.dataId),a);const g=(0,i.OBj)().getBool("WEBGL_PACK")?new mi(f):new fi(f),y=n.runWebGLProgram(g,[m],"int32");return n.disposeData(m.dataId),y}};let yi;const xi={kernelName:i._V0,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:o,preluActivationWeights:c}=t,{strides:l,pad:u,dataFormat:h,dilations:d,dimRoundingMode:p,activation:f,leakyreluAlpha:m}=r,g=i.Wap.convertConv2DDataFormat(h),y=i.Wap.computeConv2DInfo(a.shape,s.shape,l,d,u,p,!1,g);let x;const v=[];if(1!==y.filterHeight||1!==y.filterWidth||1!==y.dilationHeight||1!==y.dilationWidth||1!==y.strideHeight||1!==y.strideWidth||"SAME"!==y.padInfo.type&&"VALID"!==y.padInfo.type)if((0,i.OBj)().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])x=ia({x:a,filter:s,convInfo:y,backend:n,bias:o,activation:f,preluActivationWeights:c,leakyreluAlpha:m});else{const e=null!=o,t=null!=c,r="leakyrelu"===f,l=f?gn(f,!1):null,u=new ta(y,e,l,t,r),h=[a,s];if(o&&h.push(o),c&&h.push(c),r){const e=n.makeTensorInfo([],"float32",i.D5U.hr(m,"float32"));h.push(e),v.push(e)}x=n.runWebGLProgram(u,h,"float32")}else x=aa({x:a,filter:s,convInfo:y,backend:n,bias:o,activation:f,preluActivationWeights:c,leakyreluAlpha:m});const b=_n({inputs:{x},backend:n,attrs:{shape:y.outShape}});return v.push(x),v.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},vi={kernelName:i.luS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:o,preluActivationWeights:c}=t,{strides:l,pad:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,m=[];let g=h;null==g&&(g=[1,1]),i.D5U.hu(i.Wap.eitherStridesOrDilationsAreOne(l,g),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`));const y=i.Wap.computeConv2DInfo(a.shape,s.shape,l,g,u,d,!0),x=(0,i.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels==1,v=p?gn(p,x):null,b=[a,s],w=null!=o,_=null!=c,T="leakyrelu"===p;if(w&&b.push(o),_&&b.push(c),T){const e=n.makeTensorInfo([],"float32",i.D5U.hr(f,"float32"));b.push(e),m.push(e)}let S;S=x?new Aa(y,w,v,_,T):new Ca(y,w,v,_,T);const E=n.runWebGLProgram(S,b,"float32");return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),E}};class bi{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=nt(t.length),a=nt(n.length),i=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${i};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const wi={kernelName:i.q1x,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,o=s[s.length-1],[c,l,u,h]=i.Wap.prepareAndValidate(r,a),d=_n({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),p=_n({inputs:{x:r},backend:n,attrs:{shape:[i.D5U.NA(r.shape)/u,u]}}),f=new bi(o,h,[l,u]),m=n.runWebGLProgram(f,[p,d],p.dtype),g=_n({inputs:{x:m},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}};class _i{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=nt(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}const Ti={kernelName:i.qi_,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:o,batchDims:c}=r,l=i.D5U.EC(o,a.shape)[0],u=i.Wap.segment_util.collectGatherOpShapeInfo(a,s,l,c),h=i.D5U.NA(s.shape),d=[],p=_n({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),f=_n({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,h/u.batchSize]}});d.push(p),d.push(f);const m=[u.batchSize,u.outerSize,h/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){const e=n.bufferSync(f),t=n.bufferSync(p),r=mt(t,e,m);return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,r.dtype,r.values)}const g=new _i(p.shape,m),y=n.runWebGLProgram(g,[p,f],p.dtype);d.push(y);const x=_n({inputs:{x:y},backend:n,attrs:{shape:u.outputShape}});return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},Si=mn({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:gt,dtype:"bool"}),Ei={kernelName:i.iZT,backendName:"webgl",kernelFunc:Si},Mi=mn({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool"}),Ii={kernelName:i.Acj,backendName:"webgl",kernelFunc:Mi},Ni={kernelName:i.Qg5,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return ni(r,!0,n)}},Ci=fn({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),Ai={kernelName:i.avt,backendName:"webgl",kernelFunc:Ci},ki=fn({opSnippet:"return float(isinf(x));",dtype:"bool"}),Ri={kernelName:i.iWB,backendName:"webgl",kernelFunc:ki},Di=fn({opSnippet:"return float(isnan(x));",dtype:"bool"}),Li={kernelName:i.r7n,backendName:"webgl",kernelFunc:Di},Oi=mn({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:yt,dtype:"bool"}),Pi={kernelName:i.vtC,backendName:"webgl",kernelFunc:Oi},Fi=mn({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",dtype:"bool"}),Bi={kernelName:i.CAk,backendName:"webgl",kernelFunc:Fi},$i={kernelName:i.e7N,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:i}=n,s=xt(r,a,i);return t.makeTensorInfo([s.length],"float32",s)}},Ui=fn({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:vt}),zi={kernelName:i.ZbH,backendName:"webgl",kernelFunc:Ui},Gi=fn({opSnippet:"return log(1.0 + x);"}),Hi={kernelName:i.kU,backendName:"webgl",kernelFunc:Gi},Wi=mn({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),Vi={kernelName:i.PYm,backendName:"webgl",kernelFunc:Wi},ji=fn({opSnippet:"return float(!(x >= 1.0));"}),Xi={kernelName:i.VfG,backendName:"webgl",kernelFunc:ji},qi=mn({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),Yi={kernelName:i.MZg,backendName:"webgl",kernelFunc:qi};class Ki{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const i=t,s=e[3]-1;let o;this.outputShape=e;const c=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${c})`:1===a?`1.0/(${c})`:`exp(log(${c}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${i}; j <= ${i}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${s}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class Zi{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=t,s=e[3]-1;let o;this.outputShape=e;const c=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${c})`:1===a?`1.0/(${c})`:`exp(log(${c}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${i};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${i}; j <= ${i}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${s}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const Ji={kernelName:i.eZ0,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:o,alpha:c,beta:l}=r,u=(0,i.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new Zi(a.shape,s,o,c,l):new Ki(a.shape,s,o,c,l);return n.runWebGLProgram(u,[a],a.dtype)}};class Qi{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const es={kernelName:i.Hhh,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:i,dy:s}=t,{depthRadius:o,bias:c,alpha:l,beta:u}=r,h=new Qi(a.shape,o,c,l,u);return n.runWebGLProgram(h,[a,i,s],a.dtype)}};function ts(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:o}=r,c=a.shape.length,l=i.D5U.EC(s,a.shape);let u=l;const h=i.Wap.getAxesPermutation(u,c),d=null!=h,p=n.shouldExecuteOnCPU([a]);let f=a;if(d){if(p){const e=n.texData.get(f.dataId).values,t=new Array(c);for(let e=0;e<t.length;e++)t[e]=a.shape[h[e]];const r=Lt(e,a.shape,a.dtype,h,t);f=n.makeTensorInfo(t,a.dtype),n.texData.get(f.dataId).values=r}else f=Cn(a,h,n);u=i.Wap.getInnerMostAxes(u.length,c)}i.Wap.assertAxesAreInnerMostDims("max",u,c);const[m,g]=i.Wap.computeOutAndReduceShapes(f.shape,u);let y,x=m;if(o&&(x=i.Wap.expandShapeToKeepDim(m,l)),p){const e=n.texData.get(f.dataId).values,t=bt(e,i.D5U.NA(g),x,a.dtype);y=n.makeTensorInfo(x,a.dtype),n.texData.get(y.dataId).values=t}else y=function(e,t,n,r){const a=i.D5U.NA(t),s=_n({inputs:{x:e},attrs:{shape:[i.D5U.NA(e.shape)/a,a]},backend:r}),o=Mn(s,e.dtype,"max",r),c=_n({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(o),c}(f,g,x,n);return d&&n.disposeIntermediateTensorInfo(f),y}const ns={kernelName:i.YoZ,backendName:"webgl",kernelFunc:ts},rs=mn({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:wt}),as={kernelName:i.BMI,backendName:"webgl",kernelFunc:rs},is={kernelName:i.mTV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;he(a,"maxPool");const{filterSize:s,strides:o,pad:c,dimRoundingMode:l}=r;i.D5U.hu(i.Wap.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const u=i.Wap.computePool2DInfo(a.shape,s,o,1,c,l);if(1===u.filterWidth&&1===u.filterHeight&&i.D5U.cO(u.inShape,u.outShape))return rn({inputs:{x:a},backend:n});const h=new pr(u,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}},ss={kernelName:i.OAf,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:o,pad:c,dataFormat:l,dimRoundingMode:u}=r,h=i.Wap.computePool3DInfo(a.shape,s,o,[1,1,1],c,u,l),d=new fr(h,"max",!1);return n.runWebGLProgram(d,[a],a.dtype)}};class os{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,i=e.effectiveFilterWidth,s=a-1-e.padInfo.top,o=i-1-e.padInfo.left,c=a*i-1;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${c} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${i} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class cs{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,i=e.dilationHeight,s=e.dilationWidth,o=e.effectiveFilterDepth,c=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.front,h=c-1-e.padInfo.top,d=l-1-e.padInfo.left,p=o*c*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${u}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${c};\n              wR += ${i}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${s}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${c} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const ls={kernelName:i.OU7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,o=s,{filterSize:c,strides:l,pad:u,dimRoundingMode:h}=r,d=i.Wap.computePool3DInfo(o.shape,c,l,[1,1,1],u,h),p=new fr(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new cs(d),g=n.runWebGLProgram(m,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},us={kernelName:i.OV7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:o}=t,c=s;he([s,o],"maxPoolGrad");const{filterSize:l,strides:u,pad:h,dimRoundingMode:d}=r,p=i.Wap.computePool2DInfo(c.shape,l,u,1,h,d),f=new pr(p,"max",!0),m=n.runWebGLProgram(f,[c],c.dtype),g=new os(p),y=n.runWebGLProgram(g,[a,m],c.dtype);return n.disposeIntermediateTensorInfo(m),y}},hs={kernelName:i.vFR,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:s,pad:o,includeBatchInIndex:c}=t,l=n;i.D5U.hu(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const u=[1,1];i.D5U.hu(i.Wap.eitherStridesOrDilationsAreOne(s,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`));const h=i.Wap.computePool2DInfo(r.shape,a,s,u,o),[d,p]=function(e,t,n,r){let a=new pr(n,"max",!1);const i=r.runWebGLProgram(a,[e],"float32");return a=new pr(n,"max",!0,!0,t),[i,r.runWebGLProgram(a,[e],"float32")]}(r,c,h,l);return[d,p]}},ds={kernelName:i.q2K,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:a,axis:s}=t,o=n,c=r.shape.length,l=i.D5U.EC(s,r.shape);let u=l;const h=i.Wap.getAxesPermutation(u,c),d=null!=h,p=o.shouldExecuteOnCPU([r]),f=[];let m=r;if(d){if(p){const e=o.texData.get(m.dataId).values,t=new Array(c);for(let e=0;e<t.length;e++)t[e]=r.shape[h[e]];const n=Lt(e,r.shape,r.dtype,h,t);m=o.makeTensorInfo(t,r.dtype),o.texData.get(m.dataId).values=n}else m=Cn(r,h,o);f.push(m),u=i.Wap.getInnerMostAxes(u.length,c)}i.Wap.assertAxesAreInnerMostDims("sum",u,c);const[g,y]=i.Wap.computeOutAndReduceShapes(m.shape,u);let x=g;a&&(x=i.Wap.expandShapeToKeepDim(g,l));const v=function(e,t,n,r){const a=i.D5U.NA(t),s=_n({inputs:{x:e},attrs:{shape:[i.D5U.NA(e.shape)/a,a]},backend:r}),o=Mn(s,"float32","mean",r),c=_n({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(o),c}(m,y,x,o);for(const e of f)o.disposeIntermediateTensorInfo(e);return v}},ps={kernelName:i.c17,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:o}=r,c=a.shape.length,l=i.D5U.EC(s,a.shape);let u=l;const h=i.Wap.getAxesPermutation(u,c);let d=a;null!=h&&(d=Rn({inputs:{x:a},backend:n,attrs:{perm:h}}),u=i.Wap.getInnerMostAxes(u.length,a.shape.length)),i.Wap.assertAxesAreInnerMostDims("min",u,c);const[p,f]=i.Wap.computeOutAndReduceShapes(d.shape,u),m=_n({inputs:{x:d},backend:n,attrs:{shape:[-1,i.D5U.NA(f)]}}),g=Mn(m,m.dtype,"min",n);let y;return y=_n(o?{inputs:{x:g},backend:n,attrs:{shape:i.Wap.expandShapeToKeepDim(p,l)}}:{inputs:{x:g},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(d),y}},fs=mn({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:_t}),ms={kernelName:i.q8u,backendName:"webgl",kernelFunc:fs};class gs{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=nt(r),i=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),c="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${i});\n      ${a} end = ${a}(${s});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${c};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${c};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${i};\n        int end = ${s};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${c};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${c};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class ys{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=nt(r),i=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),o=Ft("rc",r),c=Ft("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,u=1===r?"source":`vec2(${c.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${c.join()}), ${u});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${c.join()}), ${u});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${c.join()}), ${u});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${c.join()}), ${u});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${c.join()}), ${u});\n          ${o[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${c.join()}), ${u});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${i});\n      const ${a} end = ${a}(${s});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const xs={kernelName:i.jQs,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:a,mode:s}=n,o=(0,i.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ys(r.shape,a,s):new gs(r.shape,a,s);return t.runWebGLProgram(o,[r],r.dtype)}},vs=mn({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),bs={kernelName:i.Vbg,backendName:"webgl",kernelFunc:vs};class ws{constructor(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.seedLoc&&(this.seedLoc=t.getUniformLocation(n,"seed")),t.gl.uniform1f(this.seedLoc,e)}}}const _s=mn({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),Ts={kernelName:i.oHH,backendName:"webgl",kernelFunc:_s},Ss="return a - b;",Es=mn({opSnippet:Ss,packedOpSnippet:Ss,supportsComplex:!0,cpuKernelImpl:kt}),Ms={kernelName:i.Tr8,backendName:"webgl",kernelFunc:Es};function Is(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,o=i.D5U.EC([s],a.shape),c=ts({inputs:{x:a},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),l=i.Wap.expandShapeToKeepDim(c.shape,o),u=_n({inputs:{x:c},backend:n,attrs:{shape:l}}),h=Es({inputs:{a,b:u},backend:n}),d=qa({inputs:{x:h},backend:n}),p=An({inputs:{x:d},backend:n,attrs:{axis:o,keepDims:!1}}),f=_n({inputs:{x:p},backend:n,attrs:{shape:l}}),m=_s({inputs:{a:d,b:f},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}const Ns={kernelName:i.Gcp,backendName:"webgl",kernelFunc:Is},Cs={kernelName:i.NZg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:i,seed:s,normalized:o}=r,c=o?a:Is({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),l=c.shape[0],u=c.shape[1],h=new ws(l,u,i),d=h.getCustomSetupFunc(s),p=n.runWebGLProgram(h,[c],"int32",d);return o||n.disposeIntermediateTensorInfo(c),p}},As="return -x;",ks={kernelName:i.kuV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,a]=St(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let a;return a=(0,i.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Xt(r.shape,As):new Wt(r.shape,As),n.runWebGLProgram(a,[r],r.dtype)}},Rs=i.GDt.GP,Ds={kernelName:i.uv1,backendName:"webgl",kernelFunc:function(e){i.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:o,iouThreshold:c,scoreThreshold:l}=r,u=n.readSync(a.dataId),h=n.readSync(s.dataId),{selectedIndices:d}=Rs(u,h,o,c,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},Ls=i.GDt.qP,Os={kernelName:i.cye,backendName:"webgl",kernelFunc:function(e){i.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:o,iouThreshold:c,scoreThreshold:l,padToMaxOutputSize:u}=r,h=n.readSync(a.dataId),d=n.readSync(s.dataId),{selectedIndices:p,validOutputs:f}=Ls(h,d,o,c,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},Ps=i.GDt.pA,Fs={kernelName:i.W0H,backendName:"webgl",kernelFunc:function(e){i.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:o,iouThreshold:c,scoreThreshold:l,softNmsSigma:u}=r,h=n.readSync(a.dataId),d=n.readSync(s.dataId),p=o,f=c,m=l,g=u,{selectedIndices:y,selectedScores:x}=Ps(h,d,p,f,m,g);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([x.length],"float32",new Float32Array(x))]}};class Bs{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const $s={kernelName:i.we_,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:o,offValue:c}=r,l=i.D5U.NA(a.shape),u=new Bs(l,s,o,c),h=_n({inputs:{x:a},backend:n,attrs:{shape:[l]}}),d=n.runWebGLProgram(u,[h],a.dtype);n.disposeIntermediateTensorInfo(h);const p=_n({inputs:{x:d},backend:n,attrs:{shape:[...a.shape,s]}});return n.disposeIntermediateTensorInfo(d),p}};function Us(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=Lr({inputs:{input:r},backend:n}),t=Us({inputs:{x:e},backend:n}),a=Yr({inputs:{input:r},backend:n}),i=Us({inputs:{x:a},backend:n}),s=sn({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),s}return ii({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const zs={kernelName:i.RuY,backendName:"webgl",kernelFunc:Us},Gs={kernelName:i.qWM,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=Lr({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),i=Yr({inputs:{input:a},backend:r}),s=Us({inputs:{x:i},backend:r}),o=sn({inputs:{real:n,imag:s},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(s),o}return ii({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}},Hs={kernelName:i.QiL,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return Ka({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,o=t[0].dtype;t.forEach((e=>{i.D5U.k5(s,e.shape,"All tensors passed to stack must have matching shapes"),i.D5U.hu(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const c=[],l=Qr({inputs:t.map((e=>{const t=Ka({inputs:{input:e},backend:n,attrs:{dim:a}});return c.push(t),t})),backend:n,attrs:{axis:a}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class Ws{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=nt(r),i=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${i});\n      ${a} end = ${a}(${s});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(${n}));\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${i};\n        int end = ${s};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(${n}));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class Vs{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=nt(r),i=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),o=Ft("rc",r),c=Ft("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,u=1===r?"source":`vec2(${c.slice(-2).join()})`,h=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${l}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===r?2:4;e<t;e++)p+=`\n        ${h[e]}\n        if (${d}) {\n          result[${e}] = float(${n});\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${c.join()}), ${u});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${i});\n      const ${a} end = ${a}(${s});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const js=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:o}=r,c=(0,i.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Vs(a.shape,s,o):new Ws(a.shape,s,o);return n.runWebGLProgram(c,[a],a.dtype)},Xs={kernelName:i.lyA,backendName:"webgl",kernelFunc:js},qs=mn({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Ys={kernelName:i.pe_,backendName:"webgl",kernelFunc:qs},Ks={kernelName:i.DlI,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:o}=r,c=a.shape.length,l=[],u=i.D5U.EC(s,a.shape);let h=u;const d=i.Wap.getAxesPermutation(h,c);let p,f=a;if(null!=d&&(f=Rn({inputs:{x:a},backend:n,attrs:{perm:d}}),h=i.Wap.getInnerMostAxes(h.length,c),l.push(f)),i.Wap.assertAxesAreInnerMostDims("prod",h,c),n.shouldExecuteOnCPU([f])){const e=n.texData.get(f.dataId).values,{outVals:t,outShape:r,outDtype:a}=Et(f.shape,f.dtype,e,h);p=n.makeTensorInfo(r,a,t)}else{const[e,t]=i.Wap.computeOutAndReduceShapes(f.shape,h),r=i.D5U.NA(t),s=_n({inputs:{x:f},backend:n,attrs:{shape:[-1,r]}}),o=Mn(s,(0,i.z4k)(a.dtype),"prod",n);p=_n({inputs:{x:o},backend:n,attrs:{shape:e}}),l.push(s),l.push(o)}if(o){l.push(p);const e=i.Wap.expandShapeToKeepDim(p.shape,u);p=_n({inputs:{x:p},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},Zs=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:i,dtype:s}=n,o=Mt(r,a,i,s);return t.makeTensorInfo([o.length],s,o)},Js={kernelName:i.e6w,backendName:"webgl",kernelFunc:Zs},Qs=fn({opSnippet:"return 1.0 / x;"}),eo={kernelName:i.$HU,backendName:"webgl",kernelFunc:Qs},to=fn({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),no={kernelName:i.qkr,backendName:"webgl",kernelFunc:to},ro=fn({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),ao={kernelName:i.SbG,backendName:"webgl",kernelFunc:ro};class io{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[i,s,o,c]=e;this.outputShape=[i,t,n,c];const l=[r&&t>1?s-1:s,r&&n>1?o-1:o],u=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/u[0]},\n          ${l[1]/u[1]});\n      const vec2 inputShapeRC = vec2(${s}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class so{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,s,o,c]=e;this.outputShape=[i,t,n,c];const l=[r&&t>1?s-1:s,r&&n>1?o-1:o],u=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/u[0]},\n          ${l[1]/u[1]},\n          ${l[1]/u[1]});\n      const vec3 inputShapeRC = vec3(${s}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${c-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const oo={kernelName:i._Yw,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:o,size:c}=r,[l,u]=c,h=(0,i.OBj)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new so(a.shape,l,u,s,o):new io(a.shape,l,u,s,o);return n.runWebGLProgram(h,[a],"float32")}};class co{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,i,s]=e,o=[n&&i>1?r-1:r,n&&s>1?a-1:a],c=[n&&i>1?i-1:i,n&&s>1?s-1:s],l=o[0]/c[0],u=o[1]/c[1],h=1/l,d=1/u,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${u});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${s}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const lo={kernelName:i.zbQ,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:i}=t,{alignCorners:s}=r,o=new co(i.shape,a.shape,s);return n.runWebGLProgram(o,[i],i.dtype)}};class uo{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[i,s,o,c]=e;this.outputShape=[i,t,n,c];const l=[r&&t>1?s-1:s,r&&n>1?o-1:o],u=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/u[0]},\n          ${l[1]/u[1]});\n      const vec2 inputShapeRC = vec2(${s}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}const ho={kernelName:i.dpD,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:s,size:o}=r,[c,l]=o,u=new uo(a.shape,c,l,i,s);return n.runWebGLProgram(u,[a],a.dtype)}};class po{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,i,s]=e,o=[n&&i>1?r-1:r,n&&s>1?a-1:a],c=[n&&i>1?i-1:i,n&&s>1?s-1:s],l=o[0]/c[0],u=o[1]/c[1],h=1/l,d=1/u,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${u});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${s}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${c[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${c[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const fo={kernelName:i.Hmb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:i}=t,{alignCorners:s}=r,o=new po(i.shape,a.shape,s);return n.runWebGLProgram(o,[i],i.dtype)}};class mo{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=nt(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class go{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=Ft("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,i=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,s=nt(n);function o(n){const r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${s} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${i}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const yo={kernelName:i.mKl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,o=a.shape.length,c=i.D5U.EC(s,a.shape);if(0===o)return rn({inputs:{x:a},backend:n});const l=(0,i.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new go(a.shape,c):new mo(a.shape,c);return n.runWebGLProgram(l,[a],a.dtype)}};class xo{constructor(e,t,n,r){this.variableNames=["Image"],this.outputShape=[];const a=e[1],s=e[2],o=Math.sin(t).toFixed(3),c=Math.cos(t).toFixed(3);this.outputShape=e;const[l,u]=i.Wap.getImageCenter(r,a,s),h=l.toFixed(3),d=u.toFixed(3);let p="";p="number"==typeof n?`float outputValue = ${n.toFixed(2)};`:`\n        vec3 fill = vec3(${n.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - ${h}) * ${c} - (float(y) - ${d}) * ${o};\n          float coordYFloat = (float(x) - ${h}) * ${o} + (float(y) - ${d}) * ${c};\n          int coordX = int(round(coordXFloat + ${h}));\n          int coordY = int(round(coordYFloat + ${d}));\n          ${p}\n          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${a}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const vo={kernelName:i.b9H,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:i,center:s}=t,o=n,c=new xo(r.shape,a,i,s);return o.runWebGLProgram(c,[r],r.dtype)}},bo=fn({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),wo={kernelName:i.e07,backendName:"webgl",kernelFunc:bo},_o=fn({opSnippet:"return inversesqrt(x);",cpuKernelImpl:It}),To={kernelName:i.bV0,backendName:"webgl",kernelFunc:_o};class So{constructor(e,t,n,r,a,i,s=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const o=nt(a.length),c=nt(i.length);let l="";1===n?l="i":2===n&&(l="i, j");const u=`getIndices(${l})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const d=`getUpdates(${h})`,p=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${c} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${u});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const Eo={kernelName:i.xQA,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:o}=r,{sliceRank:c,numUpdates:l,sliceSize:u,strides:h,outputSize:d}=i.Wap.calculateShapes(s,a,o),p=[d/u,u];if(0===d)return n.makeTensorInfo(o,a.dtype);const f=_n({inputs:{x:a},backend:n,attrs:{shape:[l,c]}}),m=_n({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0])),y=new So(l,c,f.shape.length,m.shape.length,h,p),x=n.runWebGLProgram(y,[m,f,g],m.dtype),v=_n({inputs:{x},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(g),v}};class Mo{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],s=[];for(let r=0;r<t.length;r++)s.push(`${n[r]}`),r<e&&i.push(`${n[r]}`);r=i.join(),a=s.join()}const i=nt(n);this.userCode=`\n      void main() {\n        ${i} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}const Io={kernelName:i.PhF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,o=new Mo(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(o,[r,a,s],(0,i.x8V)(a.dtype,s.dtype))}},No=fn({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${i.Wap.SELU_SCALEALPHA};\n  float scale = ${i.Wap.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),Co={kernelName:i.oFR,backendName:"webgl",kernelFunc:No},Ao=fn({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),ko={kernelName:i.a5O,backendName:"webgl",kernelFunc:Ao},Ro=fn({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),Do={kernelName:i.i5y,backendName:"webgl",kernelFunc:Ro},Lo=fn({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),Oo={kernelName:i.RQH,backendName:"webgl",kernelFunc:Lo},Po=fn({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),Fo={kernelName:i.wYB,backendName:"webgl",kernelFunc:Po},Bo=fn({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),$o={kernelName:i.MRv,backendName:"webgl",kernelFunc:Bo},Uo={kernelName:i.TQc,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:o}=r;i.D5U.hu(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const c=s.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...o);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);const u=[],h=js({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),d=i.Wap.getReshaped(h.shape,s,c,!1),p=i.Wap.getPermuted(d.length,s.length,!1),f=i.Wap.getReshapedPermuted(h.shape,s,c,!1),m=_n({inputs:{x:h},backend:n,attrs:{shape:d}}),g=Rn({inputs:{x:m},backend:n,attrs:{perm:p}}),y=_n({inputs:{x:g},backend:n,attrs:{shape:f}});return u.push(h),u.push(m),u.push(g),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},zo={kernelName:i.D2d,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:o}=t,{outputShape:c}=r,{sliceRank:l,numUpdates:u,strides:h,outputSize:d}=i.Wap.calculateShapes(s,a,c),p=new So(u,l,a.shape.length,s.shape.length,h,[d,1],!1),f=n.runWebGLProgram(p,[s,a,o],s.dtype),m=_n({inputs:{x:f},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(f),m}},Go={kernelName:i.L8s,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:o}=r,c=i.D5U.EC(o,a.shape)[0],l=i.Wap.prepareSplitSize(a,s,c),u=a.shape.length,h=new Array(u).fill(0),d=a.shape.slice();return l.map((e=>{const t=[...d];t[c]=e;const r=Nr({inputs:{x:a},backend:n,attrs:{begin:h,size:t}});return h[c]+=e,r}))}},Ho=fn({opSnippet:"return sqrt(x);"}),Wo={kernelName:i.FKq,backendName:"webgl",kernelFunc:Ho},Vo=fn({opSnippet:"return x * x;"}),jo={kernelName:i.bK0,backendName:"webgl",kernelFunc:Vo},Xo="return (a - b) * (a - b);",qo=mn({opSnippet:Xo,packedOpSnippet:Xo}),Yo={kernelName:i._tC,backendName:"webgl",kernelFunc:qo},Ko={kernelName:i.h8e,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,a=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,i=new Wt(r.shape,a);return n.runWebGLProgram(i,[r],r.dtype)}};class Zo{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=nt(n.length),i=nt(n.length);let s="";if(1===r)s="coords * strides + begin";else{let e=0;s=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}}const Jo={kernelName:i.jQk,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:o,strides:c,beginMask:l,endMask:u,ellipsisMask:h,newAxisMask:d,shrinkAxisMask:p}=r,{nonStrided:f,$begin:m,$strides:g,size:y,newShape:x,outShape:v}=i.kuN.sliceInfo(a.shape,s,o,c,l,u,h,d,p),b=_n({inputs:{x:a},backend:n,attrs:{shape:x}});let w;if(f){const e=Nr({inputs:{x:b},backend:n,attrs:{begin:m,size:y}});w=_n({inputs:{x:e},backend:n,attrs:{shape:v}}),n.disposeIntermediateTensorInfo(e)}else if(v.some((e=>0===e)))w=n.makeTensorInfo(v,a.dtype,[]);else if(n.shouldExecuteOnCPU([b])){const e=n.texData.get(b.dataId).values,t=(0,i.f3b)(b.shape,b.dtype,e),r=At(v,t,g,m);w=n.makeTensorInfo(v,b.dtype,r.values)}else{const e=new Zo(m,g,v);w=n.runWebGLProgram(e,[b],b.dtype)}const _=_n({inputs:{x:w},backend:n,attrs:{shape:v}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(w),_}},Qo=fn({opSnippet:"return tan(x);"}),ec={kernelName:i.sEM,backendName:"webgl",kernelFunc:Qo},tc=fn({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),nc={kernelName:i.MIZ,backendName:"webgl",kernelFunc:tc};class rc{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=nt(this.rank),a=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function ac(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if("string"===a.dtype){const e=n.readSync(a.dataId).map((e=>i.D5U.v5(e))),t=(0,i.f3b)(a.shape,a.dtype,e),r=Rt(t,s);return n.makeTensorInfo(r.shape,r.dtype,r.values)}const o=new rc(a.shape,s);return n.runWebGLProgram(o,[a],a.dtype)}const ic={kernelName:i.n9L,backendName:"webgl",kernelFunc:ac},sc={kernelName:i.cWu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:i,sorted:s}=r,o=n.readSync(a.dataId),[c,l]=Dt(o,a.shape,a.dtype,i,s);return[n.makeTensorInfo(c.shape,c.dtype,c.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}},oc={kernelName:i.kpP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:i}=t;he(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const s=r.readSync(i.dataId),{outputValues:o,outputShape:c,indices:l}=Ot(s,a,i.shape,i.dtype);return[r.makeTensorInfo(c,i.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},cc={kernelName:i.ToN,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:i}=r;i<0&&(i+=a.shape.length);const s=a,o=s.shape.length,c=a.shape[i],l=new Array(o-1);let u=0;for(let e=0;e<o;e++)e!==i&&(l[u++]=s.shape[e]);const h=[],d=new Array(o).fill(0),p=s.shape.slice();p[i]=1;const f=new Array(c);for(let e=0;e<f.length;e++){d[i]=e;const t=Nr({inputs:{x:s},backend:n,attrs:{begin:d,size:p}}),r=_n({inputs:{x:t},backend:n,attrs:{shape:l}});f[e]=r,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class lc{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,i=e.numSegments,s=i*Math.ceil(a/n);this.outputShape=[r,s];const o=4*Math.floor(n/4),c=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let u="";a%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${i})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${i})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===c}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===c}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===c}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}const uc=[Ji,es,On,Fn,$n,zn,Wn,Xn,qn,Yn,tr,nr,ar,sr,ur,cr,dr,gr,mr,vr,br,wr,Sr,Ar,kr,Pr,$r,Gr,Vr,on,ea,ha,da,sa,fa,ma,pa,ya,va,wa,Ea,Ma,Na,La,Oa,ka,Fa,$a,za,Ga,Wa,ja,Ya,Za,ei,ri,si,ci,hi,pi,gi,xi,vi,wi,Ti,Ei,Ii,an,Ni,Kr,Ai,Ri,Li,un,Pi,Bi,$i,Hi,zi,Vi,Xi,Yi,ns,ss,is,ls,us,hs,as,ds,ps,ms,xs,bs,Cs,wn,ks,Ds,Os,Fs,Dr,$s,Gs,Hs,Xs,Ys,pn,Ks,Js,Or,Ts,eo,ao,no,Tn,oo,lo,ho,fo,yo,vo,wo,To,Eo,Io,Co,ko,Do,Oo,Fo,Cr,Ns,$o,Uo,zo,Go,Wo,jo,Yo,Ko,Jo,Ms,kn,ec,nc,ic,sc,Dn,oc,cc,{kernelName:i.Qvg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:o}=r,c=a.shape.length,l=[];let u=0;const h=i.Wap.getAxesPermutation([u],c);let d=a;null!=h&&(d=Rn({inputs:{x:a},backend:n,attrs:{perm:h}}),l.push(d),u=i.Wap.getInnerMostAxes(1,c)[0]);const p=i.Wap.segment_util.computeOutShape(d.shape,u,o),f=i.D5U.NA([d.shape[u]]),m=_n({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}});l.push(m);const g=(0,i.z4k)(a.dtype),y=(e,t,r,a,s)=>{const o=e.shape[0],c=e.shape[1],u=i.Wap.segment_util.segOpComputeOptimalWindowSize(c,s),h=new lc({windowSize:u,inSize:c,batchSize:o,numSegments:s},t),d=n.compileAndRun(h,[e,r],a);if(l.push(d),d.shape[1]===s)return d;const p=Zs({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),f=ac({inputs:{x:p},backend:n,attrs:{reps:[c/u]}});return l.push(p),l.push(f),y(d,t,f,a,s)},x=_n({inputs:{x:y(m,"unsortedSegmentSum",s,g,o)},backend:n,attrs:{shape:p}});let v=x;if(null!=h){l.push(x);const e=i.Wap.getUndoAxesPermutation(h);v=Rn({inputs:{x:v},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),v}},zs];for(const e of uc)(0,i.wCN)(e)},8713:(e,t,n)=>{"use strict";n.d(t,{JL:()=>r,Zu:()=>a});class r{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class a{refCount(e){return i("refCount")}incRef(e){return i("incRef")}timerAvailable(){return!0}time(e){return i("time")}read(e){return i("read")}readSync(e){return i("readSync")}numDataIds(){return i("numDataIds")}disposeData(e,t){return i("disposeData")}write(e,t,n){return i("write")}move(e,t,n,r,a){return i("move")}memory(){return i("memory")}floatPrecision(){return i("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return i("dispose")}}function i(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},3337:(e,t,n)=>{"use strict";function r(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,i=0,s=!1;for(;r<a;){i=r+(a-r>>>1);const o=n(t,e[i]);o>0?r=i+1:(a=i,s=!o)}return s?r:-r-1}(e,t,n||a)}(e,t,n),i=r<0?-(r+1):r;e.splice(i,0,t)}function a(e,t){return e>t?1:e<t?-1:0}function i(e,t,n,r,a){return c(e,t,n,r,a,0)}function s(e,t,n,r,a,i){return c(e,t,n,r,a,0,!1,i,!0)}function o(e,t,n,r,a,i){return c(e,t,n,r,a,i,!0)}function c(e,t,n,a,i,s,o=!1,c=!1,d=!1){const p=[];for(let e=0;e<t.length;e++)t[e]>i&&p.push({score:t[e],boxIndex:e,suppressBeginIndex:0});p.sort(h);const f=s>0?-.5/s:0,m=[],g=[];for(;m.length<n&&p.length>0;){const t=p.pop(),{score:n,boxIndex:s,suppressBeginIndex:o}=t;if(n<i)break;let c=!1;for(let n=m.length-1;n>=o;--n){const r=l(e,s,m[n]);if(r>=a){c=!0;break}if(t.score=t.score*u(a,f,r),t.score<=i)break}t.suppressBeginIndex=m.length,c||(t.score===n?(m.push(s),g.push(t.score)):t.score>i&&r(p,t,h))}const y=m.length,x=n-y;c&&x>0&&(m.push(...new Array(x).fill(0)),g.push(...new Array(x).fill(0)));const v={selectedIndices:m};return o&&(v.selectedScores=g),d&&(v.validOutputs=y),v}function l(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),i=Math.min(r[0],r[2]),s=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),c=Math.max(r[1],r[3]),l=Math.min(a[0],a[2]),u=Math.min(a[1],a[3]),h=Math.max(a[0],a[2]),d=Math.max(a[1],a[3]),p=(o-i)*(c-s),f=(h-l)*(d-u);if(p<=0||f<=0)return 0;const m=Math.max(i,l),g=Math.max(s,u),y=Math.min(o,h),x=Math.min(c,d),v=Math.max(y-m,0)*Math.max(x-g,0);return v/(p+f-v)}function u(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function h(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}n.d(t,{GP:()=>i,qP:()=>s,pA:()=>o})},8333:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var r=n(2657);function a(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const a=(0,r.f)(e,"int32"),i=(0,r.f)([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const r=a.indexToLoc(n[t]),s=t*e.length;i.values.set(r,s)}return i.toTensor()}},7097:(e,t,n)=>{"use strict";n.d(t,{BV:()=>v,wv:()=>x});var r=n(8713),a=n(2885),i=n(5938),s=n(9121),o=n(6151),c=n(9155),l=n(569);class u{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new d)}profileKernel(e,t,n){let r;const i=()=>{r=n()};let s;const o=c.zO();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(i);else{i();for(const e of r)e.dataSync();s=Promise.resolve({kernelMs:c.zO()-o})}if((0,a.OB)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{h(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:s.then((e=>e.kernelMs)),extraInfo:s.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:i}=e;n.forEach((e=>{Promise.all([e.data(),r,i]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}function h(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class d{logKernelProfile(e,t,n,r,a,i){const s="number"==typeof r?l.oj(`${r}ms`,9):r.error,o=l.oj(e,25),c=t.rank,u=t.size,h=l.oj(t.shape.toString(),14);let d="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;d+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${o}\t%c${s}\t%c${c}D ${h}\t%c${u}\t%c${d}\t%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var p=n(4077),f=n(747);function m(e){return null!=e.kernelName}class g{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class y{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new g}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new u(this.backendInstance),!0}setupRegisteredKernels(){(0,o.tr)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){(0,o.tr)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof r.Zu||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return console.warn(`Initialization of backend ${e} failed`),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),i=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return y.nextTensorId++}nextVariableId(){return y.nextVariableId++}clone(e){const t=v.runKernel(s.iJ,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return v.runKernel(s.RF,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==(0,o.pI)(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],s=r-t-a-i;if(s>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${s} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,i=this.state.numTensors;let s,c;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=m(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(m(e)){const{kernelName:t,inputs:a,attrs:i}=e;null==this.backendName&&this.backend;const u=(0,o.pI)(t,this.backendName);l.hu(null!=u,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),s=()=>{const e=this.backend.numDataIds();c=u.kernelFunc({inputs:a,attrs:i,backend:this.backend});const s=Array.isArray(c)?c:[c];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,s);const o=s.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(r){const e=this.getTensorsForGradient(t,a,o);n=this.saveTensorsForBackwardMode(e)}return o}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};s=()=>{const e=this.backend.numDataIds();c=this.tidy((()=>t(this.backend,a)));const n=Array.isArray(c)?c:[c];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:h,attrs:d}=e,p=m(e)?null:e.backwardsFunc;let f;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(u,h,(()=>s())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=s()})),r&&this.addTapeNode(u,h,t,p,n,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(h).map((e=>null!=h[e]?h[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(c)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=(0,o.uk)(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let i;r.saveAllInputs?(l.hu(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),i=Object.keys(t).map((e=>t[e]))):i=e.map((e=>t[e]));const s=n.filter(((e,t)=>a[t]));return i.concat(s)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&l.HD(e[0])&&(a=e.map((e=>c.YW(e))));const i=r.write(a,t,n),s=new p.es(t,n,i,this.nextTensorId());if(this.trackTensor(s,r),"string"===n){const e=this.state.tensorInfo.get(i),t=(0,l.Ub)(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return s}makeTensorFromDataId(e,t,n,r){n=n||"float32";const a=new p.es(t,n,e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new p._w(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*l.bT(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof p._w||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*l.bT(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,i){const s={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},c=(0,o.uk)(e);null!=c&&(r=c.gradFunc),null!=r&&(s.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=l.wT(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,i))),this.state.activeTape.push(s)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=(0,f.Vu)(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(l.hu(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));l.hu(a instanceof p.es,(()=>"The result y returned by f() must be a tensor."));const i=function(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const i=e[n],s=i.inputs;for(const e in s){const n=s[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){i.outputs.forEach((e=>r[e.id]=!0)),o=!0,a[i.id]=!0;break}if(o)break}}const i={};i[n.id]=!0;const s={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(i[n.outputs[e].id]){for(const e in r)i[r[e].id]=!0,s[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&s[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,a);if(!r&&0===i.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[a.id]=null==n?function(e){const t=(0,l.p8)((0,l.NA)(e),"float32");return v.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const i=t[a],s=[];if(i.outputs.forEach((t=>{const n=e[t.id];null!=n?s.push(n):s.push(null)})),null==i.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const o=i.gradient(s);for(const t in i.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const s=i.inputs[t];if(!l.cO(a.shape,s.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${s.shape}'`);if(null==e[s.id])e[s.id]=a;else{const t=e[s.id];e[s.id]=r(t,a),t.dispose()}}}}(e,i,(e=>this.tidy(e)),b);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){return l.hu(l.mf(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;l.hu(t.every((e=>e instanceof p.es)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),l.hu(n.value instanceof p.es,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),l.hu(l.mf(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const a=n.gradFunc(e,r),i=Array.isArray(a)?a:[a];l.hu(i.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),l.hu(i.every((e=>e instanceof p.es)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const s={};return i.forEach(((e,t)=>{s[t]=()=>e})),s},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=(0,c.zO)(),n=await this.backend.time(e);return n.wallMs=(0,c.zO)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new g;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function x(){const e=(0,i.D)();if(null==e._tfengine){const t=new a.qA(e);e._tfengine=new y(t)}return(0,a.iG)(e._tfengine.ENV),(0,p.Vi)((()=>e._tfengine)),e._tfengine}y.nextTensorId=0,y.nextVariableId=0;const v=x();function b(e,t){const n={a:e,b:t};return v.runKernel(s.mm,n)}},2885:(e,t,n)=>{"use strict";n.d(t,{qA:()=>a,OB:()=>i,iG:()=>o});var r=n(569);class a{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if((0,r.tI)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=function(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function i(){return s}let s=null;function o(e){s=e}},5938:(e,t,n)=>{"use strict";let r;function a(){if(null==r){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}r=e}return r}function i(e,t){const n=function(){const e=a();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}n.d(t,{D:()=>a,R:()=>i})},4368:(e,t,n)=>{"use strict";n.d(t,{SR:()=>o,lu:()=>c,B9:()=>l,Cn:()=>u,N_:()=>h,jq:()=>d});var r=n(7097),a=n(2885),i=n(4077),s=n(747);function o(){return r.BV}function c(e,t){return r.BV.tidy(e,t)}function l(e){(0,s.Vu)(e).forEach((e=>e.dispose()))}function u(e){return r.BV.keep(e)}function h(){return r.BV.backendName}function d(e,t,n=1){return r.BV.registerBackend(e,t,n)}(0,i.FZ)((function(e){(0,a.OB)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}))},633:(e,t,n)=>{"use strict";n.d(t,{cb:()=>a});var r=n(7097);function a(e){return r.BV.customGrad(e)}n(4077)},5360:(e,t,n)=>{"use strict";n.d(t,{SYM:()=>he.SY,VGw:()=>he.VG,SpW:()=>he.Sp,mm_:()=>he.mm,Xze:()=>he.Xz,oT6:()=>he.oT,IKK:()=>he.IK,sJF:()=>he.sJ,aJk:()=>he.aJ,M2y:()=>he.M2,qw7:()=>he.qw,jMg:()=>he.jM,QCc:()=>he.QC,Oyi:()=>he.Oy,JhU:()=>he.Jh,_k9:()=>he._k,IMb:()=>he.IM,ROF:()=>he.RO,XLW:()=>he.XL,zws:()=>he.zw,zvY:()=>he.zv,RFZ:()=>he.RF,gJX:()=>he.gJ,xnO:()=>he.xn,Zz9:()=>he.Zz,yj2:()=>he.yj,Eh3:()=>he.Eh,mhS:()=>he.mh,wUP:()=>he.wU,wm:()=>he.wm,x12:()=>he.x1,o2y:()=>he.o2,ik2:()=>he.ik,mc4:()=>he.mc,TR1:()=>he.TR,VcC:()=>he.Vc,iHb:()=>he.iH,JLz:()=>Mt.JL,QRR:()=>he.QR,T0n:()=>he.T0,cie:()=>he.ci,sL$:()=>he.sL,y7R:()=>he.y7,$w:()=>he.$w,p4S:()=>he.p4,Vn9:()=>he.Vn,ekb:()=>he.ek,SX0:()=>he.SX,HEU:()=>he.HE,hdR:()=>he.hd,Omj:()=>he.Om,NEP:()=>he.NE,YFo:()=>he.YF,Y0y:()=>he.Y0,vwp:()=>he.vw,deh:()=>he.de,Uyb:()=>he.Uy,OR:()=>he.OR,jeX:()=>he.je,eBW:()=>he.eB,sHE:()=>he.sH,_V0:()=>he._V,luS:()=>he.lu,q1x:()=>he.q1,qi_:()=>he.qi,iZT:()=>he.iZ,Acj:()=>he.Ac,Qg5:()=>he.Qg,iJz:()=>he.iJ,J_u:()=>he.J_,avt:()=>he.av,iWB:()=>he.iW,r7n:()=>he.r7,Zuw:()=>Mt.Zu,eZ0:()=>he.eZ,Hhh:()=>he.Hh,J$2:()=>he.J$,vtC:()=>he.vt,CAk:()=>he.CA,e7N:()=>he.e7,ZbH:()=>he.Zb,kU:()=>he.kU,PYm:()=>he.PY,VfG:()=>he.Vf,MZg:()=>he.MZ,YoZ:()=>he.Yo,mTV:()=>he.mT,OAf:()=>he.OA,OU7:()=>he.OU,OV7:()=>he.OV,vFR:()=>he.vF,BMI:()=>he.BM,q2K:()=>he.q2,c17:()=>he.c1,q8u:()=>he.q8,jQs:()=>he.jQ,Vbg:()=>he.Vb,NZg:()=>he.NZ,wYn:()=>he.wY,kuV:()=>he.ku,uv1:()=>he.uv,cye:()=>he.cy,W0H:()=>he.W0,yQU:()=>he.yQ,we_:()=>he.we,qWM:()=>he.qW,QiL:()=>he.Qi,lyA:()=>he.ly,pe_:()=>he.pe,o0g:()=>he.o0,DlI:()=>he.Dl,e6w:()=>he.e6,xJR:()=>he.xJ,oHH:()=>he.oH,$HU:()=>he.$H,qkr:()=>he.qk,SbG:()=>he.Sb,HZH:()=>he.HZ,_Yw:()=>he._Y,zbQ:()=>he.zb,dpD:()=>he.dp,Hmb:()=>he.Hm,mKl:()=>he.mK,b9H:()=>he.b9,e07:()=>he.e0,bV0:()=>he.bV,xQA:()=>he.xQ,PhF:()=>he.Ph,oFR:()=>he.oF,a5O:()=>he.a5,i5y:()=>he.i5,RQH:()=>he.RQ,wYB:()=>he.w3,p2w:()=>he.p2,Gcp:()=>he.Gc,MRv:()=>he.MR,TQc:()=>he.TQ,D2d:()=>he.D2,L8s:()=>he.L8,FKq:()=>he.FK,bK0:()=>he.bK,_tC:()=>he._t,h8e:()=>he.h8,jQk:()=>he.m2,Tr8:()=>he.Tr,GBy:()=>he.GB,sEM:()=>he.sE,MIZ:()=>he.MI,esB:()=>ee.es,YDk:()=>ee.YD,n9L:()=>he.n9,cWu:()=>he.cW,G3Y:()=>he.G3,kpP:()=>he.kp,ToN:()=>he.To,Qvg:()=>he.Qv,RuY:()=>he.Ru,usg:()=>he.us,IHx:()=>Pe.IHx,Wap:()=>c,Xhn:()=>i,f3b:()=>Pe.f3b,pju:()=>Pe.pju,d9v:()=>Pe.d9v,zoF:()=>Pe.zoF,Izb:()=>Pe.Izb,C2$:()=>r,hiC:()=>Pe.hiC,SRH:()=>Fe.SR,OBj:()=>p.OB,dt4:()=>Pe.dt4,N_N:()=>Fe.N_,BHj:()=>Pe.BHj,io:()=>a,CnY:()=>Fe.Cn,GDt:()=>l,dC7:()=>Pe.dC7,jqO:()=>Fe.jq,wCN:()=>de.wC,XLQ:()=>Pe.XLQ,iD$:()=>Pe.iD$,XD2:()=>Pe.XD2,tPi:()=>Pe.tPi,kuN:()=>s,L9e:()=>Pe.L9e,knu:()=>Pe.knu,luU:()=>Pe.luU,z4k:()=>Oe.z4,XeE:()=>Pe.XeE,RRF:()=>Pe.RRF,odF:()=>Pe.odF,lub:()=>Fe.lu,HHK:()=>Pe.HHK,x8V:()=>Oe.x8,D5U:()=>Le,lls:()=>Pe.lls});var r={};n.r(r),n.d(r,{j:()=>d,t:()=>h});var a={};n.r(a),n.d(a,{MP:()=>ue,dI:()=>v,rM:()=>I,yB:()=>M});var i={};n.r(i),n.d(i,{n:()=>ye});var s={};n.r(s),n.d(s,{assertParamsValid:()=>xe,computeFlatOffset:()=>ke,computeOutShape:()=>be,getNormalizedAxes:()=>Se,isSliceContinous:()=>Ae,maskToAxes:()=>ve,parseSliceParams:()=>Re,sliceInfo:()=>De,startForAxis:()=>Ne,startIndicesWithElidedDims:()=>Ee,stopForAxis:()=>Ce,stopIndicesWithElidedDims:()=>Me,stridesForAxis:()=>Ie,stridesWithElidedDims:()=>we});var o={};n.r(o),n.d(o,{collectGatherOpShapeInfo:()=>wt,computeOutShape:()=>bt,segOpComputeOptimalWindowSize:()=>vt});var c={};n.r(c),n.d(c,{ERF_A1:()=>rt,ERF_A2:()=>at,ERF_A3:()=>it,ERF_A4:()=>st,ERF_A5:()=>ot,ERF_P:()=>nt,PARALLELIZE_THRESHOLD:()=>We,SELU_SCALE:()=>tt,SELU_SCALEALPHA:()=>et,applyActivation:()=>He.QH,assertAndGetBroadcastShape:()=>$e.$N,assertAxesAreInnerMostDims:()=>Be.lB,assertParamsConsistent:()=>Ue,assignToTypedArray:()=>mt,axesAreInnerMostDims:()=>Be.YB,calculateShapes:()=>Qe.SU,combineLocations:()=>Be.Vh,complexWithEvenIndex:()=>dt,complexWithOddIndex:()=>pt,computeConv2DInfo:()=>Ge.Ix,computeConv3DInfo:()=>Ge.jw,computeDefaultPad:()=>Ge.aO,computeDilation2DInfo:()=>Ge.Rf,computeOptimalWindowSize:()=>Ve,computeOutAndReduceShapes:()=>Be.kz,computeOutShape:()=>ze,computePool2DInfo:()=>Ge.Xw,computePool3DInfo:()=>Ge.pl,convertConv2DDataFormat:()=>Ge.sl,eitherStridesOrDilationsAreOne:()=>Ge.jT,expandShapeToKeepDim:()=>Be.rv,exponent:()=>yt,exponents:()=>gt,fromStringArrayToUint8:()=>Tt,fromUint8ToStringArray:()=>_t,getAxesPermutation:()=>Be.Q3,getBroadcastDims:()=>$e.XF,getComplexWithIndex:()=>ft,getFusedBiasGradient:()=>He.pf,getFusedDyActivation:()=>He.Fr,getImageCenter:()=>je,getInnerMostAxes:()=>Be.sY,getPermuted:()=>qe,getReductionAxes:()=>$e.RR,getReshaped:()=>Xe,getReshapedPermuted:()=>Ye,getSliceBeginCoords:()=>Ke,getSliceSize:()=>Ze,getUndoAxesPermutation:()=>Be.LJ,log:()=>lt,mergeRealAndImagArrays:()=>ut,prepareAndValidate:()=>Je,prepareSplitSize:()=>xt,segment_util:()=>o,shouldFuse:()=>He.uy,slice_util:()=>s,splitRealAndImagArrays:()=>ht,tupleValuesAreOne:()=>Ge.I0,upcastType:()=>Oe.x8,validateInput:()=>Qe.b0,validateUpdateShape:()=>Qe.l5,warn:()=>ct});var l={};n.r(l),n.d(l,{GP:()=>St.GP,qP:()=>St.qP,pA:()=>St.pA,ZA:()=>Et.Z});var u=n(7097);function h(){if("undefined"!=typeof navigator&&null!=navigator){const e=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function d(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}var p=n(2885);const f=(0,p.OB)();f.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),f.registerFlag("IS_BROWSER",(()=>d())),f.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),f.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),f.registerFlag("PROD",(()=>!1)),f.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>f.getBool("DEBUG"))),f.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),f.registerFlag("IS_TEST",(()=>!1)),f.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0));var m=n(1661),g=n(701),y=n(569);const x={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};function v(e,t){const n={};let r,a=0;for(const i of t){const t=i.name,s=i.dtype,o=i.shape,c=(0,y.NA)(o);let l;if("quantization"in i){const n=i.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${i.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${i.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==s)throw new Error(`Weight ${i.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${s}.`)}const o=x[n.dtype],u=e.slice(a,a+c*o),h="uint8"===n.dtype?new Uint8Array(u):new Uint16Array(u);if("float32"===s)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=S()),l=r(h)}else{if("int32"!==s)throw new Error(`Unsupported dtype in weight '${t}': ${s}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=Math.round(t*n.scale+n.min)}}a+=c*o}else if("string"===s){const t=(0,y.NA)(i.shape);l=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(a,a+4))[0];a+=4;const n=new Uint8Array(e.slice(a,a+t));l.push(n),a+=t}}else{const r=x[s],i=e.slice(a,a+c*r);if("float32"===s)l=new Float32Array(i);else if("int32"===s)l=new Int32Array(i);else if("bool"===s)l=new Uint8Array(i);else{if("complex64"!==s)throw new Error(`Unsupported dtype in weight '${t}': ${s}`);{l=new Float32Array(i);const e=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],r[t]=l[2*t+1];const a=(0,g.X)(e,o,"float32"),s=(0,g.X)(r,o,"float32");n[t]=(0,m.P)(a,s),a.dispose(),s.dispose()}}a+=c*r}"complex64"!==s&&(n[t]=(0,g.X)(l,o,s))}return n}const b="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function w(e){return b?Buffer.byteLength(e):new Blob([e]).size}function _(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function T(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:w(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:w(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function S(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),i=new Uint32Array(a);for(let a=0;a<r.length;a++){const s=r[a],o=e[n[s>>10]+(1023&s)]+t[s>>10];i[a]=o}return new Float32Array(a)}}class E{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==E.instance&&(E.instance=new E),E.instance}static registerSaveRouter(e){E.getInstance().saveRouters.push(e)}static registerLoadRouter(e){E.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return E.getHandlers(e,"save")}static getLoadHandlers(e,t){return E.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?E.getInstance().loadRouters:E.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&r.push(a)})),r}}const M=e=>E.getSaveHandlers(e),I=(e,t)=>E.getLoadHandlers(e,t),N="tensorflowjs",C="models_store",A="model_info_store";function k(){if(!(0,p.OB)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function R(e){const t=e.result;t.createObjectStore(C,{keyPath:"modelPath"}),t.createObjectStore(A,{keyPath:"modelPath"})}class D{constructor(e){if(this.indexedDB=k(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(N,1);r.onupgradeneeded=()=>R(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(C,"readonly"),r=t.objectStore(C).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=T(t),i=a.transaction(A,"readwrite");let s=i.objectStore(A);const o=s.put({modelPath:this.modelPath,modelArtifactsInfo:r});let c;o.onsuccess=()=>{c=a.transaction(C,"readwrite");const o=c.objectStore(C).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{s=i.objectStore(A);const t=s.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(o.error)),t.onerror=e=>(a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),i.oncomplete=()=>{null==c?a.close():c.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}}D.URL_SCHEME="indexeddb://";const L=e=>{return(0,p.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(D.URL_SCHEME)?(t=e.slice(D.URL_SCHEME.length),new D(t)):null;var t};E.registerSaveRouter(L),E.registerLoadRouter(L);class O{constructor(){this.indexedDB=k()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(N,1);n.onupgradeneeded=()=>R(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(A,"readonly"),i=a.objectStore(A).getAll();i.onsuccess=()=>{const t={};for(const e of i.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},i.onerror=e=>(r.close(),t(i.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(D.URL_SCHEME)?t.slice(D.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(N,1);r.onupgradeneeded=()=>R(r),r.onsuccess=()=>{const a=r.result,i=a.transaction(A,"readwrite"),s=i.objectStore(A),o=s.get(e);let c;o.onsuccess=()=>{if(null==o.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=s.delete(e),i=()=>{c=a.transaction(C,"readwrite");const r=c.objectStore(C).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=i,r.onerror=e=>(i(),a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),i.oncomplete=()=>{null==c?a.close():c.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)}))}}const P="/",F="tensorflowjs_models",B="info",$="model_topology",U="weight_specs",z="weight_data",G="model_metadata";function H(e){return{info:[F,e,B].join(P),topology:[F,e,$].join(P),weightSpecs:[F,e,U].join(P),weightData:[F,e,z].join(P),modelMetadata:[F,e,G].join(P)}}function W(e){const t=e.split(P);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(P)}class V{constructor(e){if(!(0,p.OB)().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=H(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=T(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(b)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return null!=e.signature&&(a.signature=e.signature),null!=e.userDefinedMetadata&&(a.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(a.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer)}const i=this.LS.getItem(this.keys.weightData);if(null==i)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(b){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(i),t}}V.URL_SCHEME="localstorage://";const j=e=>{return(0,p.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(V.URL_SCHEME)?(t=e.slice(V.URL_SCHEME.length),new V(t)):null;var t};E.registerSaveRouter(j),E.registerLoadRouter(j);class X{constructor(){(0,y.hu)((0,p.OB)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),(0,y.hu)("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=F+P,n=P+B;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[W(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){var t;const n=H(e=(t=e).startsWith(V.URL_SCHEME)?t.slice(V.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}class q{constructor(){this.managers={}}static getInstance(){return null==q.instance&&(q.instance=new q),q.instance}static registerManager(e,t){(0,y.hu)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),(0,y.hu)(e.length>0,(()=>"scheme must not be an empty string."));const n=q.getInstance();(0,y.hu)(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}class Y{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if((0,p.OB)().get("IS_BROWSER")){(0,p.OB)().setPlatform("browser",new Y);try{q.registerManager(V.URL_SCHEME,new X)}catch(e){}try{q.registerManager(D.URL_SCHEME,new O)}catch(e){}}let K;(0,p.OB)().get("IS_NODE")&&(0,p.OB)().setPlatform("node",new class{constructor(){this.util=n(1758),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=(0,p.OB)().global.fetch?(0,p.OB)().global.fetch(e,t):(null==K&&(K=n(8352)),K(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});var Z=n(2657),J=n(2271),Q=n(8723),ee=n(4077);(0,u.wv)();const te={buffer:Z.f,cast:J.p,clone:Q.d,print:function(e,t=!1){console.log(e.toString(t))}};function ne(e){return new Promise((e=>setTimeout(e))).then(e)}(0,ee.Vp)(te);class re{constructor(e){if(!(0,p.OB)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(re.URL_SCHEME)&&(e=e.slice(re.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer);const a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),i=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(i.download=this.modelTopologyFileName,i.href=a,await ne((()=>i.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await ne((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:T(e)}}}}function ae(e,t,n,r){!function(e){(0,y.hu)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){(0,y.hu)(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),(0,y.hu)(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),(0,y.hu)(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map((i=>(i.then((i=>{const s=n+ ++a/e.length*(r-n);return t(s),i})),i))))}async function ie(e,t){null==t&&(t={});const n=null==t.fetchFunc?(0,p.OB)().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await ae(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await ae(a,t.onProgress,.5,1)}re.URL_SCHEME="downloads://",E.registerSaveRouter((e=>(0,p.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(re.URL_SCHEME)?function(e="model"){return new re(e)}(e.slice(re.URL_SCHEME.length)):null));class se{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?((0,y.hu)("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=(0,p.OB)().platform.fetch,(0,y.hu)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&(0,y.hu)(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:T(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest,a=t.generatedBy,i=t.convertedBy,s=t.format,o=t.signature,c=t.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let l,u;if(null!=r){const e=await this.loadWeights(r);[l,u]=e}const h={modelTopology:n,weightSpecs:l,weightData:u,generatedBy:a,convertedBy:i,format:s};null!=o&&(h.signature=o),null!=c&&(h.userDefinedMetadata=c);const d=t.modelInitializer;return d&&(h.modelInitializer=d),h}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),a=this.weightPathPrefix||n,i=[];for(const t of e)i.push(...t.weights);const s=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):s.push(a+e+r);return this.weightUrlConverter&&s.push(...await Promise.all(o)),[i,_(await ie(s,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function oe(e){return null!=e.match(se.URL_SCHEME_REGEX)}se.URL_SCHEME_REGEX=/^https?:\/\//;const ce=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>oe(e))):oe(e),n)return le(e,t)}return null};function le(e,t){return new se(e,t)}function ue(e,t){return le(e,t)}E.registerSaveRouter(ce),E.registerLoadRouter(ce);var he=n(9121),de=n(6151),pe=n(2668),fe=n(3740),me=n(7852);let ge;const ye=(0,pe.op)({fromPixels_:function(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,i=!1,s=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)i=!0;else if(null!=e.getContext)s=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(a){const t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=(0,de.pI)(he.eB,u.BV.backendName)){const n={pixels:e},r={numChannels:t};return u.BV.runKernel(he.eB,n,r)}const[c,l]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let h,d;if(s?h=e.getContext("2d").getImageData(0,0,c,l).data:r||n?h=e.data:(i||a||o)&&(null==ge&&(ge=document.createElement("canvas").getContext("2d")),ge.canvas.width=c,ge.canvas.height=l,ge.drawImage(e,0,0,c,l),h=ge.getImageData(0,0,c,l).data),4===t)d=new Int32Array(h);else{const e=c*l;d=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)d[n*t+e]=h[4*n+e]}return function(e,t,n){if((0,y.Cq)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=(0,fe.C)(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,me.H)(e,t,r,n)}(d,[l,c,t],"int32")}});function xe(e,t,n){const r=e.shape.length;y.hu(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),y.hu(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)y.hu(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function ve(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function be(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function we(e,t,n,r){const a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function _e(e,t,n){return n<=e?n:n-(t-1)}function Te(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function Se(e,t,n,r,a,i,s,o,c){const l=e.length;let u=new Array(l),h=new Array(l),d=new Array(l);if(t.length&&n>0){const c=t[0],l=n+1;u=Ee(s,c,l,r,e),h=Me(o,c,l,a,e),d=we(i,c,l,e)}else for(let t=0;t<l;t++)u[t]=Ne(s,r,i,e,t,c),h[t]=Ce(o,a,i,e,t,c),d[t]=Ie(i,t,c);return{begin:u,end:h,strides:d}}function Ee(e,t,n,r,a){const i=[...a],s=Te(n,t);for(let a=0;a<i.length;a++)if(s.indexOf(a)>-1)i[a]=0;else{const s=_e(t,n,a);let o=r[s];e&1<<s&&(o=0),i[a]=o}return i}function Me(e,t,n,r,a){const i=[...a],s=Te(n,t);for(let a=0;a<i.length;a++)if(s.indexOf(a)>-1)i[a]=Number.MAX_SAFE_INTEGER;else{const s=_e(t,n,a);let o=r[s];e&1<<s&&(o=Number.MAX_SAFE_INTEGER),i[a]=o}for(let e=0;e<i.length;e++){const t=a[e];i[e]<0&&(i[e]+=t),i[e]=y.uZ(0,i[e],a[e])}return i}function Ie(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function Ne(e,t,n,r,a,i){let s=t[a];const o=n[a]||1;(e&1<<a||i&1<<a||null==s)&&(s=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const c=r[a];return s<0&&(s+=c),s=y.uZ(0,s,c-1),s}function Ce(e,t,n,r,a,i){let s=t[a];const o=n[a]||1;(e&1<<a||i&1<<a||null==s)&&(s=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const c=r[a];return s<0&&(s+=c),s=o>0?y.uZ(0,s,c):y.uZ(-1,s,c-1),s}function Ae(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function ke(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Re(e,t,n){let r;const a=e.shape.length;let i;return r="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach((e=>{y.hu(-1!==e,(()=>"slice() does not support negative begin indexing."))})),i=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,i=i.map(((t,n)=>t>=0?t:(y.hu(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,i]}function De(e,t,n,r,a,i,s,o,c){let l=t.slice(),u=n.slice(),h=r;null==r&&(h=new Array(l.length));const d=ve(s);if(d.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==s&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==s&&0!==c)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const p=e.length-l.length,f=ve(o),m=e.slice();f.forEach((e=>{l[e]=0,u[e]=1,m.splice(e,0,1)}));const{begin:g,end:y,strides:x}=Se(m,d,p,l,u,h,a,i,s);l=g,u=y,h=x;const v=ve(c);v.forEach((e=>{u[e]=l[e]+1,h[e]=1}));const b=be(l,u,h),w=b.filter(((e,t)=>-1===v.indexOf(t)));return{nonStrided:h.every((e=>1===e)),$begin:l,$end:u,$strides:h,size:b,newShape:m,outShape:w}}var Le=n(9155),Oe=n(1221),Pe=n(3254),Fe=n(4368),Be=n(3591),$e=n(2200);function Ue(e,t){const n=e[0].length;e.forEach(((e,t)=>{y.hu(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),y.hu(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,a)=>{for(let i=0;i<n;i++)y.hu(i===t||e[i]===r[i],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function ze(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var Ge=n(2582),He=n(9612);const We=30;function Ve(e){return e<=We?e:(0,y.jP)(e,Math.floor(Math.sqrt(e)))}function je(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Xe(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function qe(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function Ye(e,t,n,r=!0){const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function Ke(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Ze(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}function Je(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===(0,y.NA)(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,i=a[a.length-1];let s=1;for(let e=0;e<a.length-1;++e)s*=a[e];const o=e.shape,c=a.slice();c.pop();let l=1;for(let e=i;e<n;++e)l*=o[e],c.push(o[e]);const u=[...(0,y.e3)(e.shape).map((e=>e/l)),1].slice(0,i);return[c,s,l,u]}var Qe=n(3028);const et=1.7580993408473768,tt=1.0507009873554805,nt=.3275911,rt=.254829592,at=-.284496736,it=1.421413741,st=-1.453152027,ot=1.061405429;function ct(...e){(0,p.OB)().getBool("IS_TEST")||console.warn(...e)}function lt(...e){(0,p.OB)().getBool("IS_TEST")||console.log(...e)}function ut(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function ht(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function dt(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function pt(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function ft(e,t){return{real:e[2*t],imag:e[2*t+1]}}function mt(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function gt(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const i=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(i),r[a]=Math.sin(i)}return{real:n,imag:r}}function yt(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}function xt(e,t,n=0){let r=[];if("number"==typeof t)(0,y.hu)(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const a=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);(0,y.hu)(a<=1,(()=>"There should be only one negative value in split array."));const i=t.indexOf(-1);if(-1!==i){const r=t.reduce(((e,t)=>t>0?e+t:e));t[i]=e.shape[n]-r}(0,y.hu)(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function vt(e,t){let n,r=!1;for(e<=We?(n=e,r=!0):n=(0,y.jP)(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=(0,y.jP)(e,n+1);return n}function bt(e,t,n){const r=[],a=e.length;for(let i=0;i<a;i++)i!==t?r.push(e[i]):r.push(n);return r}function wt(e,t,n,r){const a=t.shape.length,i=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>i)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${i}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const s=e.shape[n],o=[];let c=1,l=1,u=1;for(let t=0;t<r;++t)o.push(e.shape[t]),c*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),l*=e.shape[t];for(let e=r;e<a;e++)o.push(t.shape[e]);for(let t=n+1;t<i;t++)o.push(e.shape[t]),u*=e.shape[t];return{batchSize:c,sliceSize:u,outerSize:l,dimSize:s,outputShape:o}}function _t(e){try{return e.map((e=>(0,Le.v5)(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Tt(e){return e.map((e=>(0,Le.YW)(e)))}var St=n(3337),Et=n(8333),Mt=n(8713)},9121:(e,t,n)=>{"use strict";n.d(t,{SY:()=>r,VG:()=>a,Sp:()=>i,mm:()=>s,Xz:()=>o,oT:()=>c,IK:()=>l,sJ:()=>u,aJ:()=>h,M2:()=>d,qw:()=>p,jM:()=>f,Oy:()=>m,QC:()=>g,Jh:()=>y,RO:()=>x,_k:()=>v,IM:()=>b,XL:()=>w,zw:()=>_,zv:()=>T,RF:()=>S,gJ:()=>E,xn:()=>M,Zz:()=>I,yj:()=>N,Eh:()=>C,mh:()=>A,wU:()=>k,wm:()=>R,x1:()=>D,o2:()=>L,ik:()=>O,mc:()=>P,TR:()=>F,iH:()=>B,Vc:()=>$,QR:()=>U,T0:()=>z,ci:()=>G,sL:()=>H,y7:()=>W,$w:()=>V,p4:()=>j,ek:()=>X,Vn:()=>q,oH:()=>Y,SX:()=>K,HE:()=>Z,Om:()=>J,hd:()=>Q,NE:()=>ee,YF:()=>te,Y0:()=>ne,vw:()=>re,de:()=>ae,Uy:()=>ie,OR:()=>se,je:()=>oe,sH:()=>ce,qi:()=>le,q1:()=>ue,iZ:()=>he,Ac:()=>de,iJ:()=>pe,Qg:()=>fe,J_:()=>me,av:()=>ge,iW:()=>ye,r7:()=>xe,J$:()=>ve,vt:()=>be,CA:()=>we,e7:()=>_e,Zb:()=>Te,kU:()=>Se,PY:()=>Ee,Vf:()=>Me,MZ:()=>Ie,eZ:()=>Ne,Hh:()=>Ce,Yo:()=>Ae,BM:()=>ke,mT:()=>Re,OV:()=>De,OA:()=>Le,OU:()=>Oe,vF:()=>Pe,q2:()=>Fe,c1:()=>Be,q8:()=>$e,jQ:()=>Ue,Vb:()=>ze,NZ:()=>Ge,wY:()=>He,ku:()=>We,yQ:()=>Ve,uv:()=>je,cy:()=>Xe,W0:()=>qe,qW:()=>Ye,we:()=>Ke,Qi:()=>Ze,ly:()=>Je,pe:()=>Qe,o0:()=>et,Dl:()=>tt,e6:()=>nt,xJ:()=>rt,$H:()=>at,qk:()=>it,HZ:()=>st,dp:()=>ot,Hm:()=>ct,_Y:()=>lt,zb:()=>ut,Sb:()=>ht,mK:()=>dt,e0:()=>pt,bV:()=>ft,xQ:()=>mt,Ph:()=>gt,oF:()=>yt,p2:()=>xt,RQ:()=>vt,w3:()=>bt,i5:()=>wt,a5:()=>_t,MR:()=>Tt,FK:()=>St,GB:()=>Et,TQ:()=>Mt,L8:()=>It,Gc:()=>Nt,_t:()=>Ct,bK:()=>At,Tr:()=>kt,D2:()=>Rt,m2:()=>Dt,sE:()=>Lt,MI:()=>Ot,n9:()=>Pt,cW:()=>Ft,G3:()=>Bt,kp:()=>$t,To:()=>Ut,Qv:()=>zt,Ru:()=>Gt,h8:()=>Ht,eB:()=>Wt,b9:()=>Vt,us:()=>jt,_V:()=>Xt,lu:()=>qt});const r="Abs",a="Acos",i="Acosh",s="Add",o="AddN",c="All",l="Any",u="ArgMax",h="ArgMin",d="Asin",p="Asinh",f="Atan",m="Atanh",g="Atan2",y="AvgPool",x="AvgPoolGrad",v="AvgPool3D",b="AvgPool3DGrad",w="BatchMatMul",_="BatchToSpaceND",T="Bincount",S="Cast",E="Ceil",M="ClipByValue",I="Complex",N="ComplexAbs",C="Concat",A="Conv2D",k="Conv2DBackpropFilter",R="Conv2DBackpropInput",D="Conv3D",L="Conv3DBackpropFilterV2",O="Conv3DBackpropInputV2",P="Cos",F="Cosh",B="Cumsum",$="CropAndResize",U="DenseBincount",z="DepthToSpace",G="DepthwiseConv2dNative",H="DepthwiseConv2dNativeBackpropFilter",W="DepthwiseConv2dNativeBackpropInput",V="Diag",j="Dilation2D",X="Dilation2DBackpropInput",q="Dilation2DBackpropFilter",Y="RealDiv",K="Elu",Z="EluGrad",J="Erf",Q="Equal",ee="Exp",te="ExpandDims",ne="Expm1",re="FFT",ae="Fill",ie="FlipLeftRight",se="Floor",oe="FloorDiv",ce="FusedBatchNorm",le="GatherV2",ue="GatherNd",he="Greater",de="GreaterEqual",pe="Identity",fe="IFFT",me="Imag",ge="IsFinite",ye="IsInf",xe="IsNan",ve="LeakyRelu",be="Less",we="LessEqual",_e="LinSpace",Te="Log",Se="Log1p",Ee="LogicalAnd",Me="LogicalNot",Ie="LogicalOr",Ne="LRN",Ce="LRNGrad",Ae="Max",ke="Maximum",Re="MaxPool",De="MaxPoolGrad",Le="MaxPool3D",Oe="MaxPool3DGrad",Pe="MaxPoolWithArgmax",Fe="Mean",Be="Min",$e="Minimum",Ue="MirrorPad",ze="Mod",Ge="Multinomial",He="Multiply",We="Neg",Ve="NotEqual",je="NonMaxSuppressionV3",Xe="NonMaxSuppressionV4",qe="NonMaxSuppressionV5",Ye="OnesLike",Ke="OneHot",Ze="Pack",Je="PadV2",Qe="Pow",et="Prelu",tt="Prod",nt="Range",rt="Real",at="Reciprocal",it="Relu",st="Reshape",ot="ResizeNearestNeighbor",ct="ResizeNearestNeighborGrad",lt="ResizeBilinear",ut="ResizeBilinearGrad",ht="Relu6",dt="Reverse",pt="Round",ft="Rsqrt",mt="ScatterNd",gt="Select",yt="Selu",xt="Slice",vt="Sin",bt="Sinh",wt="Sign",_t="Sigmoid",Tt="Softplus",St="Sqrt",Et="Sum",Mt="SpaceToBatchND",It="SplitV",Nt="Softmax",Ct="SquaredDifference",At="Square",kt="Sub",Rt="SparseToDense",Dt="StridedSlice",Lt="Tan",Ot="Tanh",Pt="Tile",Ft="TopK",Bt="Transpose",$t="Unique",Ut="Unpack",zt="UnsortedSegmentSum",Gt="ZerosLike",Ht="Step",Wt="FromPixels",Vt="RotateWithOffset",jt="_FusedMatMul",Xt="FusedConv2D",qt="FusedDepthwiseConv2D"},6151:(e,t,n)=>{"use strict";n.d(t,{pI:()=>s,uk:()=>o,tr:()=>c,wC:()=>l});var r=n(5938);const a=(0,r.R)("kernelRegistry",(()=>new Map)),i=(0,r.R)("gradRegistry",(()=>new Map));function s(e,t){const n=u(e,t);return a.get(n)}function o(e){return i.get(e)}function c(e){const t=a.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[i,s]=a,[o]=i.split("_");o===e&&n.push(s)}return n}function l(e){const{kernelName:t,backendName:n}=e,r=u(t,n);a.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),a.set(r,e)}function u(e,t){return`${t}_${e}`}},6235:(e,t,n)=>{"use strict";n.d(t,{W:()=>s});var r=n(7097),a=n(9121),i=n(3740);const s=(0,n(2668).op)({abs_:function(e){const t=(0,i._1)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return r.BV.runKernel(a.yj,e)}{const e={x:t};return r.BV.runKernel(a.SY,e)}}})},6407:(e,t,n)=>{"use strict";n.d(t,{I:()=>o});var r=n(7097),a=n(9121),i=n(747),s=n(3740);const o=(0,n(2668).op)({add_:function(e,t){let n=(0,s._1)(e,"a","add"),o=(0,s._1)(t,"b","add");[n,o]=(0,i.T_)(n,o);const c={a:n,b:o};return r.BV.runKernel(a.mm,c)}})},3591:(e,t,n)=>{"use strict";n.d(t,{YB:()=>a,Vh:()=>i,kz:()=>s,rv:()=>o,lB:()=>c,Q3:()=>l,LJ:()=>u,sY:()=>h});var r=n(569);function a(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function i(e,t,n){const r=e.length+t.length,a=[];let i=0,s=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[i++]):a.push(t[s++]);return a}function s(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function o(e,t){return i(e,t.map((e=>1)),t)}function c(e,t,n){r.hu(a(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function l(e,t){if(a(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function u(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function h(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}},8247:(e,t,n)=>{"use strict";n.d(t,{U:()=>l});var r=n(7097),a=n(9121),i=n(3740),s=n(8723),o=n(2668),c=n(4968);const l=(0,o.op)({broadcastTo_:function(e,t){let n=(0,i._1)(e,"broadcastTo","x");const o=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=(0,c.X)(n,e)}const l=n.shape,u=Array.from(t);for(let e=t.length-1;e>=0;e--)if(l[e]===t[e])u[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${t}].`);if(0===u.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return(0,s.d)(n);const h={x:n},d={reps:u};return r.BV.runKernel(a.n9,h,d)}})},2200:(e,t,n)=>{"use strict";function r(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const i=n-1-a,s=e[i]||1;(t[t.length-1-a]||1)>1&&1===s&&r.unshift(i)}return r}function a(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],i=t.length-r-1,s=t[i];(null==a||1===a&&s>1)&&n.unshift(i)}return n}function i(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let i=t[t.length-a-1];if(null==i&&(i=1),1===r)n.unshift(i);else if(1===i)n.unshift(r);else{if(r!==i)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}n.d(t,{XF:()=>r,RR:()=>a,$N:()=>i})},2657:(e,t,n)=>{"use strict";n.d(t,{f:()=>i});var r=n(4077),a=n(569);function i(e,t="float32",n){return t=t||"float32",a.Mu(e),new r.YD(e,t,n)}},2271:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var r=n(7097),a=n(9121),i=n(3740),s=n(569);const o=(0,n(2668).op)({cast_:function(e,t){const n=(0,i._1)(e,"x","cast");if(!s.LP(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const o={x:n},c={dtype:t};return r.BV.runKernel(a.RF,o,c)}})},8723:(e,t,n)=>{"use strict";n.d(t,{d:()=>s});var r=n(7097),a=n(9121),i=n(3740);const s=(0,n(2668).op)({clone_:function(e){const t={x:(0,i._1)(e,"x","clone","string_or_numeric")};return r.BV.runKernel(a.iJ,t)}})},1661:(e,t,n)=>{"use strict";n.d(t,{P:()=>o});var r=n(7097),a=n(9121),i=n(3740),s=n(569);const o=(0,n(2668).op)({complex_:function(e,t){const n=(0,i._1)(e,"real","complex"),o=(0,i._1)(t,"imag","complex");s.k5(n.shape,o.shape,`real and imag shapes, ${n.shape} and ${o.shape}, must match in call to tf.complex().`);const c={real:n,imag:o};return r.BV.runKernel(a.Zz,c)}})},6884:(e,t,n)=>{"use strict";n.d(t,{z:()=>c});var r=n(7097),a=n(9121),i=n(3740),s=n(569),o=n(8723);const c=(0,n(2668).op)({concat_:function(e,t=0){(0,s.hu)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=(0,i.sI)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return(0,o.d)(n[0]);const c=n,l={axis:t};return r.BV.runKernel(a.Eh,c,l)}})},2582:(e,t,n)=>{"use strict";function r(e,t,n,r,a="NHWC",i){return s(e,[...t,e[3]],n,i,r,null,null,m(a))}function a(e,t,n,r,a,i,o="channelsLast"){const[c,u]=l(t);let h;if("channelsLast"===o)h=[c,u,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);h=[c,u,e[1],e[1]]}return s(e,h,n,r,a,i,!1,o)}function i(e,t,n,r,a,i,s="NDHWC"){const[c,l,h]=u(t);let d,p;if("NDHWC"===s)p="channelsLast",d=[c,l,h,e[4],e[4]];else{if("NCDHW"!==s)throw new Error(`Unknown dataFormat ${s}`);p="channelsFirst",d=[c,l,h,e[1],e[1]]}return o(e,d,n,r,a,!1,p,i)}function s(e,t,n,r,a,i,s=!1,o="channelsLast"){let[u,p,f,m]=[-1,-1,-1,-1];if("channelsLast"===o)[u,p,f,m]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,m,p,f]=e}const[g,y,,x]=t,[v,b]=l(n),[w,_]=l(r),T=h(g,w),S=h(y,_),{padInfo:E,outHeight:M,outWidth:I}=function(e,t,n,r,a,i,s,o,l){let u,h,p;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=c(e,t,n));const i=e[1];return[d((e[0]-t+2*r)/n+1,a),d((i-t+2*r)/n+1,a)]}([t,n],i,r,e,o);h=a[0],p=a[1]}else if("same"===e){h=Math.ceil(t/r),p=Math.ceil(n/a);const e=Math.max(0,(h-1)*r+i-t),o=Math.max(0,(p-1)*a+s-n),c=Math.floor(e/2),l=e-c,d=Math.floor(o/2);u={top:c,bottom:l,left:d,right:o-d,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},h=Math.ceil((t-i+1)/r),p=Math.ceil((n-s+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const c="channelsLast"===l?e[1][0]:e[2][0],f="channelsLast"===l?e[1][1]:e[2][1],m="channelsLast"===l?e[2][0]:e[3][0],g="channelsLast"===l?e[2][1]:e[3][1];u={top:c,bottom:f,left:m,right:g,type:0===c&&0===f&&0===m&&0===g?"VALID":"EXPLICIT"},h=d((t-i+c+f)/r+1,o),p=d((n-s+m+g)/a+1,o)}}return{padInfo:u,outHeight:h,outWidth:p}}(a,p,f,v,b,T,S,i,o),N=s?x*m:x;let C;return"channelsFirst"===o?C=[u,N,M,I]:"channelsLast"===o&&(C=[u,M,I,N]),{batchSize:u,dataFormat:o,inHeight:p,inWidth:f,inChannels:m,outHeight:M,outWidth:I,outChannels:N,padInfo:E,strideHeight:v,strideWidth:b,filterHeight:g,filterWidth:y,effectiveFilterHeight:T,effectiveFilterWidth:S,dilationHeight:w,dilationWidth:_,inShape:e,outShape:C,filterShape:t}}function o(e,t,n,r,a,i=!1,s="channelsLast",o){let[l,p,f,m,g]=[-1,-1,-1,-1,-1];if("channelsLast"===s)[l,p,f,m,g]=e;else{if("channelsFirst"!==s)throw new Error(`Unknown dataFormat ${s}`);[l,g,p,f,m]=e}const[y,x,v,,b]=t,[w,_,T]=u(n),[S,E,M]=u(r),I=h(y,S),N=h(x,E),C=h(v,M),{padInfo:A,outDepth:k,outHeight:R,outWidth:D}=function(e,t,n,r,a,i,s,o,l,u,h){let p,f,m,g;if("number"==typeof e){p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const i=function(e,t,n,r,a,i){null==a&&(a=c(e,t,r));const s=e[1],o=e[2];return[d((e[0]-t+2*a)/r+1,i),d((s-t+2*a)/r+1,i),d((o-t+2*a)/r+1,i),1]}([t,n,r,1],o,0,a,e,h);f=i[0],m=i[1],g=i[2]}else if("same"===e){f=Math.ceil(t/a),m=Math.ceil(n/i),g=Math.ceil(r/s);const e=(f-1)*a+o-t,c=(m-1)*i+l-n,h=(g-1)*s+u-r,d=Math.floor(e/2),y=e-d,x=Math.floor(c/2),v=c-x,b=Math.floor(h/2);p={top:x,bottom:v,left:b,right:h-b,front:d,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);p={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},f=Math.ceil((t-o+1)/a),m=Math.ceil((n-l+1)/i),g=Math.ceil((r-u+1)/s)}return{padInfo:p,outDepth:f,outHeight:m,outWidth:g}}(a,p,f,m,w,_,T,I,N,C,o),L=i?b*g:b;let O;return"channelsFirst"===s?O=[l,L,k,R,D]:"channelsLast"===s&&(O=[l,k,R,D,L]),{batchSize:l,dataFormat:s,inDepth:p,inHeight:f,inWidth:m,inChannels:g,outDepth:k,outHeight:R,outWidth:D,outChannels:L,padInfo:A,strideDepth:w,strideHeight:_,strideWidth:T,filterDepth:y,filterHeight:x,filterWidth:v,effectiveFilterDepth:I,effectiveFilterHeight:N,effectiveFilterWidth:C,dilationDepth:S,dilationHeight:E,dilationWidth:M,inShape:e,outShape:O,filterShape:t}}function c(e,t,n,r=1){const a=h(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function l(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function u(e){return"number"==typeof e?[e,e,e]:e}function h(e,t){return t<=1?e:e+(e-1)*(t-1)}function d(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function p(e){const[t,n,r]=l(e);return 1===t&&1===n&&1===r}function f(e,t){return p(e)||p(t)}function m(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}n.d(t,{Rf:()=>r,Xw:()=>a,pl:()=>i,Ix:()=>s,jw:()=>o,aO:()=>c,I0:()=>p,jT:()=>f,sl:()=>m})},1274:(e,t,n)=>{"use strict";n.d(t,{h:()=>c});var r=n(7097),a=n(9121),i=n(747),s=n(3740),o=n(9165);const c=(0,n(2668).op)({div_:function(e,t){let n=(0,s._1)(e,"a","div"),c=(0,s._1)(t,"b","div");if([n,c]=(0,i.T_)(n,c),"int32"===n.dtype&&"int32"===c.dtype)return(0,o.q)(n,c);const l={a:n,b:c};return r.BV.runKernel(a.oH,l,{})}})},3233:(e,t,n)=>{"use strict";n.d(t,{p:()=>s});var r=n(7097),a=n(9121),i=n(3740);const s=(0,n(2668).op)({elu_:function(e){const t={x:(0,i._1)(e,"x","elu")};return r.BV.runKernel(a.SX,t)}})},4842:(e,t,n)=>{"use strict";n.d(t,{Q:()=>s});var r=n(7097),a=n(9121),i=n(3740);const s=(0,n(2668).op)({exp_:function(e){const t={x:(0,i._1)(e,"x","exp")};return r.BV.runKernel(a.NE,t)}})},1300:(e,t,n)=>{"use strict";n.d(t,{d:()=>o});var r=n(7097),a=n(9121),i=n(3740),s=n(569);const o=(0,n(2668).op)({expandDims_:function(e,t=0){const n=(0,i._1)(e,"x","expandDims","string_or_numeric");s.hu(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const o={input:n},c={dim:t};return r.BV.runKernel(a.YF,o,c)}})},4006:(e,t,n)=>{"use strict";n.d(t,{h:()=>i});var r=n(7097),a=n(9121);function i(e,t,n){const i={shape:e,value:t,dtype:n};return r.BV.runKernel(a.de,{},i)}},9165:(e,t,n)=>{"use strict";n.d(t,{q:()=>o});var r=n(7097),a=n(9121),i=n(747),s=n(3740);const o=(0,n(2668).op)({floorDiv_:function(e,t){let n=(0,s._1)(e,"a","floorDiv"),o=(0,s._1)(t,"b","floorDiv");[n,o]=(0,i.T_)(n,o);const c={a:n,b:o};return r.BV.runKernel(a.je,c)}})},9612:(e,t,n)=>{"use strict";n.d(t,{QH:()=>x,pf:()=>y,Fr:()=>g,uy:()=>v});var r=n(2200),a=n(3233),i=n(9133),s=n(4841),o=n(8151),c=n(7409),l=n(3582),u=n(4968),h=n(7097),d=n(9121),p=n(3740);const f=(0,n(2668).op)({step_:function(e,t=0){const n={x:(0,p._1)(e,"x","step")},r={alpha:t};return h.BV.runKernel(d.h8,n,r)}});var m=n(5475);function g(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return(0,s.d)(e,f(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function y(e,t){let n=t;const a=r.RR(e.shape,t.shape);return a.length>0&&(n=(0,m.S)(n,a)),(0,u.X)(n,e.shape)}function x(e,t,n,r){if("linear"===t)return e;if("relu"===t)return(0,c.U)(e);if("elu"===t)return(0,a.p)(e);if("relu6"===t)return(0,l.b)(e);if("prelu"===t)return(0,o.A)(e,n);if("leakyrelu"===t)return(0,i.h)(e,r);throw new Error(`Unknown fused activation ${t}.`)}const v=(e,t)=>!(e>0)||"linear"===t},636:(e,t,n)=>{"use strict";n.d(t,{p:()=>c});var r=n(7097),a=n(9121),i=n(747),s=n(3740),o=n(2200);const c=(0,n(2668).op)({greater_:function(e,t){let n=(0,s._1)(e,"a","greater"),c=(0,s._1)(t,"b","greater");[n,c]=(0,i.T_)(n,c),(0,o.$N)(n.shape,c.shape);const l={a:n,b:c};return r.BV.runKernel(a.iZ,l)}})},7630:(e,t,n)=>{"use strict";n.d(t,{b:()=>c});var r=n(7097),a=n(9121),i=n(747),s=n(3740),o=n(2200);const c=(0,n(2668).op)({greaterEqual_:function(e,t){let n=(0,s._1)(e,"a","greaterEqual"),c=(0,s._1)(t,"b","greaterEqual");[n,c]=(0,i.T_)(n,c),(0,o.$N)(n.shape,c.shape);const l={a:n,b:c};return r.BV.runKernel(a.Ac,l)}})},4386:(e,t,n)=>{"use strict";n.d(t,{a:()=>s});var r=n(7097),a=n(9121),i=n(3740);const s=(0,n(2668).op)({imag_:function(e){const t={input:(0,i._1)(e,"input","imag")};return r.BV.runKernel(a.J_,t)}})},9133:(e,t,n)=>{"use strict";n.d(t,{h:()=>s});var r=n(7097),a=n(9121),i=n(3740);const s=(0,n(2668).op)({leakyRelu_:function(e,t=.2){const n={x:(0,i._1)(e,"x","leakyRelu")},s={alpha:t};return r.BV.runKernel(a.J$,n,s)}})},624:(e,t,n)=>{"use strict";n.d(t,{z:()=>c});var r=n(7097),a=n(9121),i=n(747),s=n(3740),o=n(2200);const c=(0,n(2668).op)({lessEqual_:function(e,t){let n=(0,s._1)(e,"a","lessEqual"),c=(0,s._1)(t,"b","lessEqual");[n,c]=(0,i.T_)(n,c),(0,o.$N)(n.shape,c.shape);const l={a:n,b:c};return r.BV.runKernel(a.CA,l)}})},2597:(e,t,n)=>{"use strict";n.d(t,{c:()=>s});var r=n(7097),a=n(9121),i=n(3740);const s=(0,n(2668).op)({log_:function(e){const t={x:(0,i._1)(e,"x","log")};return r.BV.runKernel(a.Zb,t)}})},7474:(e,t,n)=>{"use strict";n.d(t,{K:()=>s});var r=n(7097),a=n(9121),i=n(3740);const s=(0,n(2668).op)({log1p_:function(e){const t={x:(0,i._1)(e,"x","log1p")};return r.BV.runKernel(a.kU,t)}})},2856:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var r=n(7097),a=n(9121),i=n(3740),s=n(2200);const o=(0,n(2668).op)({logicalAnd_:function(e,t){const n=(0,i._1)(e,"a","logicalAnd","bool"),o=(0,i._1)(t,"b","logicalAnd","bool");(0,s.$N)(n.shape,o.shape);const c={a:n,b:o};return r.BV.runKernel(a.PY,c)}})},8687:(e,t,n)=>{"use strict";n.d(t,{O:()=>o});var r=n(7097),a=n(9121),i=n(747),s=n(3740);const o=(0,n(2668).op)({matMul_:function(e,t,n=!1,o=!1){let c=(0,s._1)(e,"a","matMul"),l=(0,s._1)(t,"b","matMul");[c,l]=(0,i.T_)(c,l);const u={a:c,b:l},h={transposeA:n,transposeB:o};return r.BV.runKernel(a.XL,u,h)}})},3307:(e,t,n)=>{"use strict";n.d(t,{F:()=>s});var r=n(7097),a=n(9121),i=n(3740);const s=(0,n(2668).op)({max_:function(e,t=null,n=!1){const s={x:(0,i._1)(e,"x","max")},o={reductionIndices:t,keepDims:n};return r.BV.runKernel(a.Yo,s,o)}})},5130:(e,t,n)=>{"use strict";n.d(t,{J:()=>s});var r=n(7097),a=n(9121),i=n(3740);const s=(0,n(2668).op)({mean_:function(e,t=null,n=!1){const s={x:(0,i._1)(e,"x","mean")},o={axis:t,keepDims:n};return r.BV.runKernel(a.q2,s,o)}})},5735:(e,t,n)=>{"use strict";n.d(t,{V:()=>s});var r=n(7097),a=n(9121),i=n(3740);const s=(0,n(2668).op)({min_:function(e,t=null,n=!1){const s={x:(0,i._1)(e,"x","min")},o={axis:t,keepDims:n};return r.BV.runKernel(a.c1,s,o)}})},4513:(e,t,n)=>{"use strict";n.d(t,{L:()=>l});var r=n(7097),a=n(9121),i=n(747),s=n(3740),o=n(2200),c=n(2271);const l=(0,n(2668).op)({minimum_:function(e,t){let n=(0,s._1)(e,"a","minimum"),l=(0,s._1)(t,"b","minimum");[n,l]=(0,i.T_)(n,l),"bool"===n.dtype&&(n=(0,c.p)(n,"int32"),l=(0,c.p)(l,"int32")),(0,o.$N)(n.shape,l.shape);const u={a:n,b:l};return r.BV.runKernel(a.q8,u)}})},4841:(e,t,n)=>{"use strict";n.d(t,{d:()=>o});var r=n(7097),a=n(9121),i=n(747),s=n(3740);const o=(0,n(2668).op)({mul_:function(e,t){let n=(0,s._1)(e,"a","mul"),o=(0,s._1)(t,"b","mul");[n,o]=(0,i.T_)(n,o);const c={a:n,b:o};return r.BV.runKernel(a.wY,c)}})},7370:(e,t,n)=>{"use strict";n.d(t,{W:()=>s});var r=n(7097),a=n(9121),i=n(3740);const s=(0,n(2668).op)({neg_:function(e){const t={x:(0,i._1)(e,"x","neg")};return r.BV.runKernel(a.ku,t)}})},6500:(e,t,n)=>{"use strict";n.d(t,{Q:()=>c});var r=n(7097),a=n(9121),i=n(747),s=n(3740),o=n(2200);const c=(0,n(2668).op)({notEqual_:function(e,t){let n=(0,s._1)(e,"a","notEqual"),c=(0,s._1)(t,"b","notEqual");[n,c]=(0,i.T_)(n,c),(0,o.$N)(n.shape,c.shape);const l={a:n,b:c};return r.BV.runKernel(a.yQ,l)}})},4917:(e,t,n)=>{"use strict";n.d(t,{i:()=>o});var r=n(7097),a=n(569),i=n(1661),s=n(9640);function o(e,t="float32"){if("complex64"===t){const t=o(e,"float32"),n=(0,s.l)(e,"float32");return(0,i.P)(t,n)}const n=(0,a.p8)((0,a.NA)(e),t);return r.BV.makeTensor(n,e,t)}},2668:(e,t,n)=>{"use strict";n.d(t,{op:()=>i});var r=n(7097),a=n(569);function i(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const i=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=(...e)=>{r.BV.startScope(n);try{const t=i(...e);return(0,a.tI)(t)&&console.error("Cannot return a Promise inside of tidy."),r.BV.endScope(t),t}catch(e){throw r.BV.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}},3254:(e,t,n)=>{"use strict";n.d(t,{IHx:()=>r.I,f3b:()=>a.f,pju:()=>i.p,d9v:()=>s.d,zoF:()=>o.z,Izb:()=>l,hiC:()=>u.h,dt4:()=>h.d,BHj:()=>ke,dC7:()=>d.d,XLQ:()=>p.X,iD$:()=>f.i,XD2:()=>m.X,tPi:()=>g.t,L9e:()=>y.L,knu:()=>x.k,luU:()=>v.l,XeE:()=>b.X,RRF:()=>w.R,odF:()=>E,HHK:()=>M.H,lls:()=>I.l});var r=n(6407),a=n(2657),i=n(2271),s=n(8723),o=n(6884),c=n(2668);const l=(0,c.op)({concat2d_:function(e,t){return(0,o.z)(e,t)}});var u=n(1274),h=n(1300),d=n(4841),p=n(4968),f=n(9494),m=n(625),g=n(2676),y=n(9590),x=n(2991),v=n(827),b=n(701),w=n(6092),_=n(3740),T=n(569),S=n(7852);function E(e,t,n){if((0,T.Cq)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=(0,_.C)(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,S.H)(e,t,r,n)}var M=n(4136),I=n(9640),N=n(3710),C=n(7020),A=n(8447),k=n(4415);function R(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let i=0;i<e;++i){const s=2*Math.PI*i/(e+r-1);a[i]=t-n*Math.cos(s)}return(0,w.R)(a,"float32")}(0,c.op)({hammingWindow_:function(e){return R(e,.54,.46)}});const D=(0,c.op)({hannWindow_:function(e){return R(e,.5,.5)}});var L=n(4006);const O=(0,c.op)({frame_:function(e,t,n,r=!1,a=0){let i=0;const s=[];for(;i+t<=e.size;)s.push((0,g.t)(e,i,t)),i+=n;if(r)for(;i<e.size;){const r=i+t-e.size,c=(0,o.z)([(0,g.t)(e,i,t-r),(0,L.h)([r],a)]);s.push(c),i+=n}return 0===s.length?E([],[0,t]):(0,p.X)((0,o.z)(s),[s.length,t])}});(0,c.op)({stft_:function(e,t,n,r,a=D){var i;null==r&&(i=t,r=Math.floor(Math.pow(2,Math.ceil(Math.log(i)/Math.log(2)))));const s=O(e,t,n),c=(0,d.d)(s,a(t)),l=[];for(let e=0;e<s.shape[0];e++)l.push((0,N.Q)((0,g.t)(c,[e,0],[1,t]),r));return(0,o.z)(l)}});var P=n(7097),F=n(9121);const B=(0,c.op)({cropAndResize_:function(e,t,n,r,a="bilinear",i=0){const s=(0,_._1)(e,"image","cropAndResize"),o=(0,_._1)(t,"boxes","cropAndResize","float32"),c=(0,_._1)(n,"boxInd","cropAndResize","int32"),l=o.shape[0];T.hu(4===s.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${s.rank}.`)),T.hu(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`)),T.hu(1===c.rank&&c.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`)),T.hu(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),T.hu(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),T.hu("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));const u={image:s,boxes:o,boxInd:c},h={method:a,extrapolationValue:i,cropSize:r};return P.BV.runKernel(F.Vc,u,h)}}),$=(0,c.op)({flipLeftRight_:function(e){const t=(0,_._1)(e,"image","flipLeftRight","float32");T.hu(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return P.BV.runKernel(F.Uy,n,{})}}),U=(0,c.op)({rotateWithOffset_:function(e,t,n=0,r=.5){const a=(0,_._1)(e,"image","rotateWithOffset","float32");T.hu(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));const i={image:a},s={radians:t,fillValue:n,center:r};return P.BV.runKernel(F.b9,i,s)}});function z(e,t,n,r,a,i){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==i&&(i=0);const s=e.shape[0];return n=Math.min(n,s),T.hu(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),T.hu(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),T.hu(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),T.hu(1===t.rank,(()=>"scores must be a 1D tensor")),T.hu(t.shape[0]===s,(()=>`scores has incompatible shape with boxes. Expected ${s}, but was ${t.shape[0]}`)),T.hu(0<=i&&i<=1,(()=>`softNmsSigma must be in [0, 1], but was '${i}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:i}}const G=(0,c.op)({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const i=(0,_._1)(e,"boxes","nonMaxSuppression"),s=(0,_._1)(t,"scores","nonMaxSuppression"),o=z(i,s,n,r,a),c={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:a=o.scoreThreshold};return P.BV.runKernel(F.uv,{boxes:i,scores:s},c)}});var H=n(3337);const W=(0,c.op)({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,i=0){const s=(0,_._1)(e,"boxes","nonMaxSuppression"),o=(0,_._1)(t,"scores","nonMaxSuppression"),c=z(s,o,n,r,a,i),l={boxes:s,scores:o},u={maxOutputSize:n=c.maxOutputSize,iouThreshold:r=c.iouThreshold,scoreThreshold:a=c.scoreThreshold,softNmsSigma:i=c.softNmsSigma},h=P.BV.runKernel(F.W0,l,u);return{selectedIndices:h[0],selectedScores:h[1]}}}),V=(0,c.op)({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,i=!1){const s=(0,_._1)(e,"boxes","nonMaxSuppression"),o=(0,_._1)(t,"scores","nonMaxSuppression"),c=z(s,o,n,r,a,null),l={boxes:s,scores:o},u={maxOutputSize:c.maxOutputSize,iouThreshold:c.iouThreshold,scoreThreshold:c.scoreThreshold,padToMaxOutputSize:i},h=P.BV.runKernel(F.cy,l,u);return{selectedIndices:h[0],validOutputs:h[1]}}}),j=(0,c.op)({resizeBilinear_:function(e,t,n=!1,r=!1){const a=(0,_._1)(e,"images","resizeBilinear");T.hu(3===a.rank||4===a.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`)),T.hu(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),T.hu(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let i=a,s=!1;3===a.rank&&(s=!0,i=(0,p.X)(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,o={images:i},c={alignCorners:n,halfPixelCenters:r,size:t},l=P.BV.runKernel(F._Y,o,c);return s?(0,p.X)(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),X=(0,c.op)({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const a=(0,_._1)(e,"images","resizeNearestNeighbor");T.hu(3===a.rank||4===a.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`)),T.hu(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),T.hu("float32"===a.dtype||"int32"===a.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),T.hu(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let i=a,s=!1;3===a.rank&&(s=!0,i=(0,p.X)(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,o={images:i},c={alignCorners:n,halfPixelCenters:r,size:t},l=P.BV.runKernel(F.dp,o,c);return s?(0,p.X)(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});var q=n(7630),Y=n(624),K=n(2856),Z=n(7245),J=n(5912);(0,c.op)({bandPart_:function(e,t,n){(0,T.hu)(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),(0,T.hu)(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=(0,_._1)(e,"a","bandPart");(0,T.hu)(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const a=r.shape,[i,s]=r.shape.slice(-2);if(!(t<=i))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${i}).`);if(!(n<=s))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${s}).`);t<0&&(t=i),n<0&&(n=s);const o=(0,p.X)((0,Z.w)(0,i,1,"int32"),[-1,1]),c=(0,Z.w)(0,s,1,"int32"),l=(0,v.l)(o,c),u=(0,K.H)((0,Y.z)(l,(0,f.i)(+t,"int32")),(0,q.b)(l,(0,f.i)(-n,"int32"))),h=(0,I.l)([i,s],r.dtype);return(0,p.X)((0,x.k)((0,M.H)((0,p.X)(r,[-1,i,s])).map((e=>(0,J.a)(u,e,h)))),a)}});var Q=n(6235),ee=n(3591),te=n(3307),ne=n(5735),re=n(3453),ae=n(3261),ie=n(248),se=n(5475);function oe(e,t,n=null){if(0===e.rank)return(0,Q.W)(e);if(1!==e.rank&&null===n)return oe((0,p.X)(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return(0,se.S)((0,Q.W)(e),n);if(t===1/0)return(0,te.F)((0,Q.W)(e),n);if(t===-1/0)return(0,ne.V)((0,Q.W)(e),n);if("euclidean"===t||2===t)return(0,ae._)((0,se.S)((0,re.s)((0,Q.W)(e),(0,f.i)(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return(0,te.F)((0,se.S)((0,Q.W)(e),n[0]),n[1]-1);if(t===1/0)return(0,te.F)((0,se.S)((0,Q.W)(e),n[1]),n[0]);if(t===-1/0)return(0,ne.V)((0,se.S)((0,Q.W)(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return(0,ae._)((0,se.S)((0,ie.h)(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const ce=(0,c.op)({norm_:function(e,t="euclidean",n=null,r=!1){const a=oe(e=(0,_._1)(e,"x","norm"),t,n);let i=a.shape;if(r){const t=(0,T.EC)(n,e.shape);i=ee.rv(a.shape,t)}return(0,p.X)(a,i)}});var le=n(8644);(0,c.op)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,(0,T.hu)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)(0,T.hu)(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=(0,le.V)(e,e.shape[0],0).map((e=>(0,y.L)(e,[0])));(0,T.hu)(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(P.BV.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=(0,d.d)((0,se.S)((0,d.d)(n[r],e)),n[r]);e=(0,v.l)(e,t)}return(0,u.h)(e,ce(e,"euclidean"))})));return t?(0,x.k)(n,0):n}});var ue=n(4368),he=n(7501);const de=(0,c.op)({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const i=(0,a.f)([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)i.set(1,e,e);const o=(0,p.X)(i.toTensor(),[e,t]);if(null==n)return o;if(1===n.length)return(0,he.G)((0,h.d)(o,0),[n[0],1,1]);if(2===n.length)return(0,he.G)((0,h.d)((0,h.d)(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return(0,he.G)((0,h.d)((0,h.d)((0,h.d)(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});var pe,fe=n(636),me=n(8687),ge=n(7370),ye=n(9065);function xe(e,t=!1){return P.BV.tidy((()=>{(0,T.hu)(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let a=de(n),i=(0,s.d)(e);const c=E([[1]],[1,1]);let l=(0,s.d)(c);const h=n>=r?r:n;for(let e=0;e<h;++e){const t=i,h=l,p=a;[l,i,a]=P.BV.tidy((()=>{const t=(0,g.t)(i,[e,e],[n-e,1]),h=ce(t),p=(0,g.t)(i,[e,e],[1,1]),f=(0,J.a)((0,fe.p)(p,0),E([[-1]]),E([[1]])),m=(0,v.l)(p,(0,d.d)(f,h)),y=(0,u.h)(t,m);l=1===y.shape[0]?(0,s.d)(c):(0,o.z)([c,(0,g.t)(y,[1,0],[y.shape[0]-1,y.shape[1]])],0);const x=(0,ge.W)((0,u.h)((0,me.O)(f,m),h)),b=(0,g.t)(i,[e,0],[n-e,r]),w=(0,d.d)(x,l),_=(0,ye.p)(l);if(0===e)i=(0,v.l)(b,(0,me.O)(w,(0,me.O)(_,b)));else{const t=(0,v.l)(b,(0,me.O)(w,(0,me.O)(_,b)));i=(0,o.z)([(0,g.t)(i,[0,0],[e,r]),t],0)}const T=(0,ye.p)(w),S=(0,g.t)(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=(0,v.l)(S,(0,me.O)((0,me.O)(S,l),T));else{const t=(0,v.l)(S,(0,me.O)((0,me.O)(S,l),T));a=(0,o.z)([(0,g.t)(a,[0,0],[n,e]),t],1)}return[l,i,a]})),(0,ue.B9)([t,h,p])}return!t&&n>r&&(a=(0,g.t)(a,[0,0],[n,r]),i=(0,g.t)(i,[0,0],[r,r])),[a,i]}))}(0,c.op)({qr_:function(e,t=!1){if((0,T.hu)(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return xe(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=(0,M.H)((0,p.X)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],i=[];return r.forEach((e=>{const[n,r]=xe(e,t);a.push(n),i.push(r)})),[(0,p.X)((0,x.k)(a,0),e.shape),(0,p.X)((0,x.k)(i,0),e.shape)]}}}),function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(pe||(pe={}));var ve=n(5130),be=n(6500),we=n(4917);const _e=(0,c.op)({computeWeightedLoss_:function(e,t,n=pe.SUM_BY_NONZERO_WEIGHTS){const r=(0,_._1)(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=(0,_._1)(t,"weights","computeWeightedLoss"));const s=null==a?r:(0,d.d)(r,a);if(n===pe.NONE)return s;if(n===pe.SUM)return(0,se.S)(s);if(n===pe.MEAN){if(null==a)return(0,ve.J)(s);{const e=r.size/a.size,t=(0,u.h)((0,se.S)(s),(0,se.S)(a));return e>1?(0,u.h)(t,(0,f.i)(e)):t}}if(n===pe.SUM_BY_NONZERO_WEIGHTS){if(null==a)return(0,u.h)((0,se.S)(s),(0,f.i)(r.size));{const e=(0,d.d)(a,(0,we.i)(r.shape)),t=(0,i.p)((0,se.S)((0,be.Q)(e,(0,f.i)(0))),"float32");return(0,u.h)((0,se.S)(s),t)}}throw Error(`Unknown reduction: ${n}`)}});(0,c.op)({absoluteDifference_:function(e,t,n,r=pe.SUM_BY_NONZERO_WEIGHTS){const a=(0,_._1)(e,"labels","absoluteDifference"),i=(0,_._1)(t,"predictions","absoluteDifference");let s=null;null!=n&&(s=(0,_._1)(n,"weights","absoluteDifference")),(0,T.k5)(a.shape,i.shape,"Error in absoluteDifference: ");const o=(0,Q.W)((0,v.l)(a,i));return _e(o,s,r)}}),(0,c.op)({cosineDistance_:function(e,t,n,r,a=pe.SUM_BY_NONZERO_WEIGHTS){const i=(0,_._1)(e,"labels","cosineDistance"),s=(0,_._1)(t,"predictions","cosineDistance");let o=null;null!=r&&(o=(0,_._1)(r,"weights","cosineDistance")),(0,T.k5)(i.shape,s.shape,"Error in cosineDistance: ");const c=(0,f.i)(1),l=(0,v.l)(c,(0,se.S)((0,d.d)(i,s),n,!0));return _e(l,o,a)}});var Te=n(7409);(0,c.op)({hingeLoss_:function(e,t,n,r=pe.SUM_BY_NONZERO_WEIGHTS){let a=(0,_._1)(e,"labels","hingeLoss");const i=(0,_._1)(t,"predictions","hingeLoss");let s=null;null!=n&&(s=(0,_._1)(n,"weights","hingeLoss")),(0,T.k5)(a.shape,i.shape,"Error in hingeLoss: ");const o=(0,f.i)(1);a=(0,v.l)((0,d.d)((0,f.i)(2),a),o);const c=(0,Te.U)((0,v.l)(o,(0,d.d)(a,i)));return _e(c,s,r)}});var Se=n(4513);(0,c.op)({huberLoss_:function(e,t,n,a=1,i=pe.SUM_BY_NONZERO_WEIGHTS){const s=(0,_._1)(e,"labels","huberLoss"),o=(0,_._1)(t,"predictions","huberLoss");let c=null;null!=n&&(c=(0,_._1)(n,"weights","huberLoss")),(0,T.k5)(s.shape,o.shape,"Error in huberLoss: ");const l=(0,f.i)(a),u=(0,Q.W)((0,v.l)(o,s)),h=(0,Se.L)(u,l),p=(0,v.l)(u,h),m=(0,r.I)((0,d.d)((0,f.i)(.5),(0,ie.h)(h)),(0,d.d)(l,p));return _e(m,c,i)}});var Ee=n(2597);(0,c.op)({logLoss_:function(e,t,n,a=1e-7,i=pe.SUM_BY_NONZERO_WEIGHTS){const s=(0,_._1)(e,"labels","logLoss"),o=(0,_._1)(t,"predictions","logLoss");let c=null;null!=n&&(c=(0,_._1)(n,"weights","logLoss")),(0,T.k5)(s.shape,o.shape,"Error in logLoss: ");const l=(0,f.i)(1),u=(0,f.i)(a),h=(0,ge.W)((0,d.d)(s,(0,Ee.c)((0,r.I)(o,u)))),p=(0,d.d)((0,v.l)(l,s),(0,Ee.c)((0,r.I)((0,v.l)(l,o),u))),m=(0,v.l)(h,p);return _e(m,c,i)}});var Me=n(5265);(0,c.op)({meanSquaredError_:function(e,t,n,r=pe.SUM_BY_NONZERO_WEIGHTS){const a=(0,_._1)(e,"labels","meanSquaredError"),i=(0,_._1)(t,"predictions","meanSquaredError");let s=null;null!=n&&(s=(0,_._1)(n,"weights","meanSquaredError")),(0,T.k5)(a.shape,i.shape,"Error in meanSquaredError: ");const o=(0,Me.$)(a,i);return _e(o,s,r)}});var Ie=n(4842),Ne=n(7474);(0,c.op)({sigmoidCrossEntropy_:function(e,t,n,a=0,i=pe.SUM_BY_NONZERO_WEIGHTS){let s=(0,_._1)(e,"multiClassLabels","sigmoidCrossEntropy");const o=(0,_._1)(t,"logits","sigmoidCrossEntropy");let c=null;if(null!=n&&(c=(0,_._1)(n,"weights","sigmoidCrossEntropy")),(0,T.k5)(s.shape,o.shape,"Error in sigmoidCrossEntropy: "),a>0){const e=(0,f.i)(a),t=(0,f.i)(1),n=(0,f.i)(.5);s=(0,r.I)((0,d.d)(s,(0,v.l)(t,e)),(0,d.d)(n,e))}const l=function(e,t){const n=(0,_._1)(e,"labels","sigmoidCrossEntropyWithLogits"),a=(0,_._1)(t,"logits","sigmoidCrossEntropyWithLogits");(0,T.k5)(n.shape,a.shape,"Error in sigmoidCrossEntropyWithLogits: ");const i=(0,Te.U)(a),s=(0,d.d)(a,n),o=(0,Ne.K)((0,Ie.Q)((0,ge.W)((0,Q.W)(a))));return(0,r.I)((0,v.l)(i,s),o)}(s,o);return _e(l,c,i)}});var Ce=n(633);const Ae=(0,c.op)({logSumExp_:function(e,t=null,n=!1){const a=(0,_._1)(e,"x","logSumExp"),i=(0,T.EC)(t,a.shape),s=(0,te.F)(a,i,!0),o=(0,v.l)(a,s),c=(0,Ie.Q)(o),l=(0,se.S)(c,i),u=(0,Ee.c)(l),h=(0,r.I)((0,p.X)(s,u.shape),u);if(n){const e=(0,ee.rv)(h.shape,i);return(0,p.X)(h,e)}return h}});(0,c.op)({softmaxCrossEntropy_:function(e,t,n,a=0,s=pe.SUM_BY_NONZERO_WEIGHTS){let o=(0,_._1)(e,"onehotLabels","softmaxCrossEntropy");const c=(0,_._1)(t,"logits","softmaxCrossEntropy");let l=null;if(null!=n&&(l=(0,_._1)(n,"weights","softmaxCrossEntropy")),(0,T.k5)(o.shape,c.shape,"Error in softmaxCrossEntropy: "),a>0){const e=(0,f.i)(a),t=(0,f.i)(1),n=(0,f.i)(o.shape[1]);o=(0,r.I)((0,d.d)(o,(0,v.l)(t,e)),(0,u.h)(e,n))}const h=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return(0,Ce.cb)(((e,t,r)=>{const a=Ae(t,[n],!0),s=(0,v.l)((0,i.p)(t,"float32"),a);r([e,s]);const o=(0,ge.W)((0,d.d)(s,e));return{value:(0,se.S)(o,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=(0,ee.rv)(e.shape,[n]);return[(0,d.d)((0,p.X)(e,s),(0,v.l)((0,i.p)(r,"float32"),(0,Ie.Q)(a))),(0,d.d)((0,p.X)(e,s),(0,v.l)((0,Ie.Q)(a),(0,i.p)(r,"float32")))]}}}))(e,t)}(o,c);return _e(h,l,s)}}),C.k,A.S,N.Q,k.w;const ke={flipLeftRight:$,resizeNearestNeighbor:X,resizeBilinear:j,rotateWithOffset:U,cropAndResize:B,nonMaxSuppression:G,nonMaxSuppressionAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const i=(0,_._1)(e,"boxes","nonMaxSuppressionAsync"),s=(0,_._1)(t,"scores","nonMaxSuppressionAsync"),o=z(i,s,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const c=await Promise.all([i.data(),s.data()]),l=c[0],u=c[1],{selectedIndices:h}=(0,H.GP)(l,u,n,r,a);return i!==e&&i.dispose(),s!==t&&s.dispose(),(0,w.R)(h,"int32")},nonMaxSuppressionWithScore:W,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,i=0){const s=(0,_._1)(e,"boxes","nonMaxSuppressionAsync"),o=(0,_._1)(t,"scores","nonMaxSuppressionAsync"),c=z(s,o,n,r,a,i);n=c.maxOutputSize,r=c.iouThreshold,a=c.scoreThreshold,i=c.softNmsSigma;const l=await Promise.all([s.data(),o.data()]),u=l[0],h=l[1],{selectedIndices:d,selectedScores:p}=(0,H.pA)(u,h,n,r,a,i);return s!==e&&s.dispose(),o!==t&&o.dispose(),{selectedIndices:(0,w.R)(d,"int32"),selectedScores:(0,w.R)(p)}},nonMaxSuppressionPadded:V,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,i=!1){const s=(0,_._1)(e,"boxes","nonMaxSuppressionAsync"),o=(0,_._1)(t,"scores","nonMaxSuppressionAsync"),c=z(s,o,n,r,a,null),l=c.maxOutputSize,u=c.iouThreshold,h=c.scoreThreshold,[d,p]=await Promise.all([s.data(),o.data()]),{selectedIndices:m,validOutputs:g}=(0,H.qP)(d,p,l,u,h,i);return s!==e&&s.dispose(),o!==t&&o.dispose(),{selectedIndices:(0,w.R)(m,"int32"),validOutputs:(0,f.i)(g,"int32")}}}},3453:(e,t,n)=>{"use strict";n.d(t,{s:()=>o});var r=n(7097),a=n(9121),i=n(747),s=n(3740);const o=(0,n(2668).op)({pow_:function(e,t){let n=(0,s._1)(e,"base","pow"),o=(0,s._1)(t,"exp","pow");[n,o]=(0,i.T_)(n,o);const c={a:n,b:o};return r.BV.runKernel(a.pe,c)}})},8151:(e,t,n)=>{"use strict";n.d(t,{A:()=>s});var r=n(7097),a=n(9121),i=n(3740);const s=(0,n(2668).op)({prelu_:function(e,t){const n={x:(0,i._1)(e,"x","prelu"),alpha:(0,i._1)(t,"alpha","prelu")};return r.BV.runKernel(a.o0,n)}})},7245:(e,t,n)=>{"use strict";n.d(t,{w:()=>i});var r=n(7097),a=n(9121);function i(e,t,n=1,i="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:i};return r.BV.runKernel(a.e6,{},s)}},766:(e,t,n)=>{"use strict";n.d(t,{k:()=>s});var r=n(7097),a=n(9121),i=n(3740);const s=(0,n(2668).op)({real_:function(e){const t={input:(0,i._1)(e,"input","real")};return r.BV.runKernel(a.xJ,t)}})},7409:(e,t,n)=>{"use strict";n.d(t,{U:()=>s});var r=n(7097),a=n(9121),i=n(3740);const s=(0,n(2668).op)({relu_:function(e){const t={x:(0,i._1)(e,"x","relu")};return r.BV.runKernel(a.qk,t)}})},3582:(e,t,n)=>{"use strict";n.d(t,{b:()=>s});var r=n(7097),a=n(9121),i=n(3740);const s=(0,n(2668).op)({relu6_:function(e){const t={x:(0,i._1)(e,"x","relu6")};return r.BV.runKernel(a.Sb,t)}})},4968:(e,t,n)=>{"use strict";n.d(t,{X:()=>s});var r=n(7097),a=n(9121),i=n(3740);const s=(0,n(2668).op)({reshape_:function(e,t){const n={x:(0,i._1)(e,"x","reshape","string_or_numeric")},s={shape:t};return r.BV.runKernel(a.HZ,n,s)}})},7486:(e,t,n)=>{"use strict";n.d(t,{G:()=>s});var r=n(7097),a=n(9121),i=n(3740);const s=(0,n(2668).op)({reverse_:function(e,t){const n={x:(0,i._1)(e,"x","reverse")},s={dims:t};return r.BV.runKernel(a.mK,n,s)}})},9494:(e,t,n)=>{"use strict";n.d(t,{i:()=>i});var r=n(569),a=n(7852);function i(e,t){if(((0,r.fU)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&(0,r.fU)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,a.H)(e,[],[],t)}},3028:(e,t,n)=>{"use strict";n.d(t,{l5:()=>a,b0:()=>i,SU:()=>s});var r=n(569);function a(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(i+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(i+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(i+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(i+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(i+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function i(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}a(n,t,e)}function s(e,t,n){const a=t.shape.length,i=a>1?t.shape[a-1]:1,s=n.length;let o=1;for(let e=i;e<s;++e)o*=n[e];const c=i<1?1:i;return{sliceRank:i,numUpdates:(0,r.NA)(t.shape)/c,sliceSize:o,strides:[...(0,r.e3)(n.slice(0,i)),1],outputSize:(0,r.NA)(n)}}},625:(e,t,n)=>{"use strict";n.d(t,{X:()=>s});var r=n(7097),a=n(9121),i=n(3740);const s=(0,n(2668).op)({sigmoid_:function(e){const t={x:(0,i._1)(e,"x","sigmoid")};return r.BV.runKernel(a.a5,t)}})},2676:(e,t,n)=>{"use strict";n.d(t,{t:()=>s});var r=n(7097),a=n(9121),i=n(3740);const s=(0,n(2668).op)({slice_:function(e,t,n){const s=(0,i._1)(e,"x","slice","string_or_numeric");if(0===s.rank)throw new Error("Slicing scalar is not possible");const o={x:s},c={begin:t,size:n};return r.BV.runKernel(a.p2,o,c)}})},7020:(e,t,n)=>{"use strict";n.d(t,{k:()=>s});var r=n(7097),a=n(9121),i=n(569);const s=(0,n(2668).op)({fft_:function(e){(0,i.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return r.BV.runKernel(a.vw,t)}})},8447:(e,t,n)=>{"use strict";n.d(t,{S:()=>s});var r=n(7097),a=n(9121),i=n(569);const s=(0,n(2668).op)({ifft_:function(e){(0,i.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return r.BV.runKernel(a.Qg,t)}})},4415:(e,t,n)=>{"use strict";n.d(t,{w:()=>f});var r=n(1661),a=n(6884),i=n(4386),s=n(4841),o=n(2668),c=n(766),l=n(4968),u=n(7486),h=n(9494),d=n(2676),p=n(8447);const f=(0,o.op)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let o;if(t<=2){const r=(0,l.X)(e,[n,t]);o=(0,p.S)(r)}else{const f=[n,2*(t-1)],m=(0,l.X)((0,c.k)(e),[n,t]),g=(0,l.X)((0,i.a)(e),[n,t]),y=(0,u.G)((0,d.t)(m,[0,1],[n,t-2]),1),x=(0,s.d)((0,u.G)((0,d.t)(g,[0,1],[n,t-2]),1),(0,h.i)(-1)),v=(0,a.z)([m,y],1),b=(0,a.z)([g,x],1),w=(0,l.X)((0,r.P)(v,b),[f[0],f[1]]);o=(0,p.S)(w)}if(o=(0,c.k)(o),3===e.rank&&0!==e.shape[0]){const t=o,n=e.shape[0];o=(0,l.X)(o,[n,o.shape[0]/n,o.shape[1]]),t.dispose()}return o}})},3710:(e,t,n)=>{"use strict";n.d(t,{Q:()=>m});var r=n(569),a=n(1661),i=n(6884),s=n(4386),o=n(2668),c=n(766),l=n(4968),u=n(2676),h=n(8644),d=n(9640),p=n(6577),f=n(7020);const m=(0,o.op)({rfft_:function(e,t){(0,r.hu)("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const o=e.size/n;let m;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,m=(0,u.t)(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,m=(0,i.z)([e,(0,d.l)(r)],e.shape.length-1),n=t}else m=e;const g=(0,p.P)(m),y=(0,l.X)((0,a.P)(m,g),[o,n]),x=(0,f.k)(y),v=Math.floor(n/2)+1,b=(0,c.k)(x),w=(0,s.a)(x),_=(0,h.V)(b,[v,n-v],b.shape.length-1),T=(0,h.V)(w,[v,n-v],w.shape.length-1),S=m.shape.slice();return S[m.shape.length-1]=v,(0,l.X)((0,a.P)(_[0],T[0]),S)}})},8644:(e,t,n)=>{"use strict";n.d(t,{V:()=>s});var r=n(7097),a=n(9121),i=n(3740);const s=(0,n(2668).op)({split_:function(e,t,n=0){const s={x:(0,i._1)(e,"x","split")},o={numOrSizeSplits:t,axis:n};return r.BV.runKernel(a.L8,s,o)}})},3261:(e,t,n)=>{"use strict";n.d(t,{_:()=>s});var r=n(7097),a=n(9121),i=n(3740);const s=(0,n(2668).op)({sqrt_:function(e){const t={x:(0,i._1)(e,"x","sqrt")};return r.BV.runKernel(a.FK,t)}})},248:(e,t,n)=>{"use strict";n.d(t,{h:()=>i});var r=n(7097),a=n(3740);const i=(0,n(2668).op)({square_:function(e){const t=(0,a._1)(e,"x","square");return r.BV.runKernel("Square",{x:t},{})}})},5265:(e,t,n)=>{"use strict";n.d(t,{$:()=>c});var r=n(7097),a=n(9121),i=n(747),s=n(3740),o=n(2200);const c=(0,n(2668).op)({squaredDifference_:function(e,t){let n=(0,s._1)(e,"a","squaredDifference"),c=(0,s._1)(t,"b","squaredDifference");[n,c]=(0,i.T_)(n,c),(0,o.$N)(n.shape,c.shape);const l={a:n,b:c};return r.BV.runKernel(a._t,l,{})}})},9590:(e,t,n)=>{"use strict";n.d(t,{L:()=>o});var r=n(3740),a=n(569),i=n(2668),s=n(4968);const o=(0,i.op)({squeeze_:function(e,t){const n=(0,r._1)(e,"x","squeeze");return(0,s.X)(n,(0,a.bp)(n.shape,t).newShape)}})},2991:(e,t,n)=>{"use strict";n.d(t,{k:()=>o});var r=n(7097),a=n(9121),i=n(3740),s=n(569);const o=(0,n(2668).op)({stack_:function(e,t=0){const n=(0,i.sI)(e,"tensors","stack","string_or_numeric");s.hu(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&s.hu(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const o=n,c={axis:t};return r.BV.runKernel(a.Qi,o,c)}})},827:(e,t,n)=>{"use strict";n.d(t,{l:()=>o});var r=n(7097),a=n(9121),i=n(747),s=n(3740);const o=(0,n(2668).op)({sub_:function(e,t){let n=(0,s._1)(e,"a","sub"),o=(0,s._1)(t,"b","sub");[n,o]=(0,i.T_)(n,o);const c={a:n,b:o};return r.BV.runKernel(a.Tr,c)}})},5475:(e,t,n)=>{"use strict";n.d(t,{S:()=>o});var r=n(7097),a=n(9121),i=n(3740),s=n(2271);const o=(0,n(2668).op)({sum_:function(e,t=null,n=!1){let o=(0,i._1)(e,"x","sum");"bool"===o.dtype&&(o=(0,s.p)(o,"int32"));const c={x:o},l={axis:t,keepDims:n};return r.BV.runKernel(a.GB,c,l)}})},701:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var r=n(3740),a=n(7852);function i(e,t,n){const i=(0,r.C)(e,n);return(0,a.H)(e,t,i,n)}},6092:(e,t,n)=>{"use strict";n.d(t,{R:()=>s});var r=n(3740),a=n(569),i=n(7852);function s(e,t){(0,a.Cq)(e);const n=(0,r.C)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,i.H)(e,null,n,t)}},7852:(e,t,n)=>{"use strict";n.d(t,{H:()=>s});var r=n(7097),a=n(569),i=n(9155);function s(e,t,n,s){if(null==s&&(s=(0,a.D2)(e)),"complex64"===s)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!(0,a.fU)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){(0,a.Mu)(t);const e=(0,a.NA)(t),r=(0,a.NA)(n);(0,a.hu)(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],i=e!==n.length-1||r!==(0,a.NA)(t.slice(e));(0,a.hu)(n[e]===t[e]||!i,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return(0,a.fU)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==s?(0,i.Os)(e,s):(0,a.xH)(e,[],!0),r.BV.makeTensor(e,t,s)}},7501:(e,t,n)=>{"use strict";n.d(t,{G:()=>o});var r=n(7097),a=n(9121),i=n(3740),s=n(569);const o=(0,n(2668).op)({tile_:function(e,t){const n=(0,i._1)(e,"x","tile","string_or_numeric");s.hu(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const o={x:n},c={reps:t};return r.BV.runKernel(a.n9,o,c)}})},9065:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var r=n(7097),a=n(9121),i=n(3740),s=n(569);const o=(0,n(2668).op)({transpose_:function(e,t){const n=(0,i._1)(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),s.hu(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{s.hu(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const o={x:n},c={perm:t};return r.BV.runKernel(a.G3,o,c)}})},4136:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var r=n(7097),a=n(9121),i=n(3740),s=n(569);const o=(0,n(2668).op)({unstack_:function(e,t=0){const n=(0,i._1)(e,"x","unstack","string_or_numeric");s.hu(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const o={value:n},c={axis:t};return r.BV.runKernel(a.To,o,c)}})},5912:(e,t,n)=>{"use strict";n.d(t,{a:()=>l});var r=n(7097),a=n(9121),i=n(3740),s=n(569),o=n(8247),c=n(2200);const l=(0,n(2668).op)({where_:function(e,t,n){const l=(0,i._1)(t,"a","where"),u=(0,i._1)(n,"b","where"),h=(0,i._1)(e,"condition","where","bool"),d=(0,c.$N)(l.shape,u.shape),p=(0,o.U)(l,d),f=(0,o.U)(u,d);1===h.rank&&(0,s.hu)(h.shape[0]===l.shape[0],(()=>"The first dimension of `a` must match the size of `condition`.")),1!==h.rank&&(0,s.k5)(h.shape,f.shape,"Error in where: ");const m={condition:h,t:p,e:f};return r.BV.runKernel(a.Ph,m)}})},9640:(e,t,n)=>{"use strict";n.d(t,{l:()=>s});var r=n(7097),a=n(569),i=n(1661);function s(e,t="float32"){if("complex64"===t){const t=s(e,"float32"),n=s(e,"float32");return(0,i.P)(t,n)}const n=(0,a.wT)((0,a.NA)(e),t);return r.BV.makeTensor(n,e,t)}},6577:(e,t,n)=>{"use strict";n.d(t,{P:()=>s});var r=n(7097),a=n(9121),i=n(3740);const s=(0,n(2668).op)({zerosLike_:function(e){const t={x:(0,i._1)(e,"x","zerosLike")};return r.BV.runKernel(a.Ru,t)}})},4077:(e,t,n)=>{"use strict";n.d(t,{es:()=>x,YD:()=>h,_w:()=>v,FZ:()=>y,Vp:()=>g,Vi:()=>m});var r=n(5938),a=n(569);function i(e,t,n,r){const i=(0,a.e3)(t),o=function(e,t,n,r){const i=(0,a.NA)(t),o=r[r.length-1],c=new Array(o).fill(0),u=t.length,h="complex64"===n?l(e):e;if(u>1)for(let e=0;e<i/o;e++){const t=e*o;for(let e=0;e<o;e++)c[e]=Math.max(c[e],s(h[t+e],0,n).length)}return c}(e,t,n,i),u=t.length,h=c(e,t,n,i,o),d=["Tensor"];return r&&(d.push(`  dtype: ${n}`),d.push(`  rank: ${u}`),d.push(`  shape: [${t}]`),d.push("  values:")),d.push(h.map((e=>"    "+e)).join("\n")),d.join("\n")}function s(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:(0,a.HD)(e)?`'${e}'`:"bool"===n?o(e):parseFloat(e.toFixed(7)).toString(),(0,a.oj)(r,t)}function o(e){return 0===e?"false":"true"}function c(e,t,n,r,a,i=!0){const u="complex64"===n?2:1,h=t[0],d=t.length;if(0===d)return"complex64"===n?[s(l(e)[0],0,n)]:"bool"===n?[o(e[0])]:[e[0].toString()];if(1===d){if(h>20){const t=3*u;let r=Array.from(e.slice(0,t)),i=Array.from(e.slice((h-3)*u,h*u));return"complex64"===n&&(r=l(r),i=l(i)),["["+r.map(((e,t)=>s(e,a[t],n))).join(", ")+", ..., "+i.map(((e,t)=>s(e,a[h-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?l(e):Array.from(e)).map(((e,t)=>s(e,a[t],n))).join(", ")+"]"]}const p=t.slice(1),f=r.slice(1),m=r[0]*u,g=[];if(h>20){for(let t=0;t<3;t++){const r=t*m,i=r+m;g.push(...c(e.slice(r,i),p,n,f,a,!1))}g.push("...");for(let t=h-3;t<h;t++){const r=t*m,i=r+m;g.push(...c(e.slice(r,i),p,n,f,a,t===h-1))}}else for(let t=0;t<h;t++){const r=t*m,i=r+m;g.push(...c(e.slice(r,i),p,n,f,a,t===h-1))}const y=2===d?",":"";g[0]="["+g[0]+y;for(let e=1;e<g.length-1;e++)g[e]=" "+g[e]+y;let x=",\n";for(let e=2;e<d;e++)x+="\n";return g[g.length-1]=" "+g[g.length-1]+"]"+(i?"":x),g}function l(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var u=n(9155);class h{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=a.NA(e),null!=n){const e=n.length;a.hu(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||a.rQ(t,this.size),this.strides=(0,a.e3)(e)}set(e,...t){0===t.length&&(t=[0]),a.hu(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return d().makeTensor(this.values,this.shape,this.dtype)}}let d=null,p=null,f=null;function m(e){d=e}function g(e){p=e}function y(e){f=e}class x{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=a.NA(e),this.strides=(0,a.e3)(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return p.buffer(this.shape,this.dtype,e)}bufferSync(){return p.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return(0,a.GX)(this.shape,e)}arraySync(){return(0,a.GX)(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const e=d().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>u.v5(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=d().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>u.v5(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await d().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(d().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return p.print(this,e)}clone(){return this.throwIfDisposed(),p.clone(this)}toString(e=!1){return i(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),p.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),d().makeVariable(this,e,t,n)}}Object.defineProperty(x,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),(0,r.R)("Tensor",(()=>x));class v extends x{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!a.cO(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);d().disposeTensor(this),this.dataId=e.dataId,d().incRef(this,null)}dispose(){d().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(v,Symbol.hasInstance,{value:e=>e instanceof x&&null!=e.assign&&e.assign instanceof Function})},747:(e,t,n)=>{"use strict";n.d(t,{T_:()=>i,Vu:()=>s});var r=n(4077),a=n(1221);function i(e,t){if(e.dtype===t.dtype)return[e,t];const n=(0,a.x8)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function s(e){const t=[];return o(e,t,new Set),t}function o(e,t,n){if(null==e)return;if(e instanceof r.es)return void t.push(e);if(a=e,!Array.isArray(a)&&"object"!=typeof a)return;var a;const i=e;for(const e in i){const r=i[e];n.has(r)||(n.add(r),o(r,t,n))}}},3740:(e,t,n)=>{"use strict";n.d(t,{C:()=>c,_1:()=>h,sI:()=>d});var r=n(7097),a=n(2885),i=n(4077),s=n(569),o=n(9155);function c(e,t){let n=e;if((0,s.fU)(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||(0,s.fU)(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&(0,a.OB)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&l(e,r,[]),r}function l(e,t,n){if(n=n||[],!Array.isArray(e)&&!(0,s.fU)(e))return void(0,s.hu)(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));(0,s.hu)(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),(0,s.hu)(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)l(e[t],r,n.concat(t))}function u(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function h(e,t,n,a="numeric"){if(e instanceof i.es)return u(a,e.dtype,t,n),e;let l=(0,s.D2)(e);if("string"!==l&&["bool","int32","float32"].indexOf(a)>=0&&(l=a),u(a,l,t,n),null==e||!(0,s.fU)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const h=c(e,l);(0,s.fU)(e)||Array.isArray(e)||(e=[e]);const d="string"!==l?(0,o.Os)(e,l):(0,s.xH)(e,[],!0);return r.BV.makeTensor(d,h,l)}function d(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>h(e,`${t}[${a}]`,n,r)))}},1221:(e,t,n)=>{"use strict";var r,a,i,s,o;n.d(t,{x8:()=>l,z4:()=>u}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(a||(a={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(i||(i={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(s||(s={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(o||(o={}));const c={float32:s,int32:a,bool:i,complex64:o};function l(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return c[e][t]}function u(e){return l(e,"int32")}},9155:(e,t,n)=>{"use strict";n.d(t,{cO:()=>a.cO,hu:()=>a.hu,k5:()=>a.k5,bT:()=>a.bT,e3:()=>a.e3,xH:()=>a.xH,rQ:()=>a.rQ,WP:()=>a.WP,QB:()=>a.QB,NE:()=>a.NE,D2:()=>a.D2,JZ:()=>a.JZ,GN:()=>a.GN,tI:()=>a.tI,HD:()=>a.HD,qy:()=>a.qy,l6:()=>a.l6,wT:()=>a.wT,nY:()=>a.nY,EC:()=>a.EC,WD:()=>a.WD,oj:()=>a.oj,NA:()=>a.NA,YP:()=>a.YP,bp:()=>a.bp,Sm:()=>a.Sm,GX:()=>a.GX,hr:()=>i,Os:()=>s,zO:()=>o,YW:()=>c,v5:()=>l});var r=n(2885),a=n(569);function i(e,t){return"string"===t?c(e):s([e],t)}function s(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=a.xH(e)),(0,r.OB)().getBool("DEBUG")&&a.D5(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function o(){return(0,r.OB)().platform.now()}function c(e,t="utf-8"){return t=t||"utf-8",(0,r.OB)().platform.encode(e,t)}function l(e,t="utf-8"){return t=t||"utf-8",(0,r.OB)().platform.decode(e,t)}},569:(e,t,n)=>{"use strict";function r(e,t,n){return Math.max(e,Math.min(t,n))}function a(e){return e%2==0?e:e+1}function i(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function s(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function o(e,t,n=""){s(h(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function c(e){s(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function l(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||S(e)&&!n)for(let r=0;r<e.length;++r)l(e[r],t,n);else t.push(e);return t}function u(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function h(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function d(e){return e%1==0}function p(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function f(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function m(e,t=(e=>0),n){return new Promise(((r,a)=>{let i=0;const s=()=>{if(e())return void r();i++;const o=t(i);null!=n&&i>=n?a():setTimeout(s,o)};s()}))}function g(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function y(e,t){const n=t.length;return s((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),s(e.every((e=>d(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function x(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,i=null==t||a?null:y(t,e).sort();let s=0;for(let t=0;t<e.length;++t){if(null!=i){if(i[s]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==i[s]||i[s]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),i[s]<=t&&s++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function v(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function b(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function w(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function _(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function T(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function S(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function E(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function M(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function I(e){return"string"==typeof e||e instanceof String}function N(e){return Array.isArray(e)?N(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":"number"==typeof e?"float32":I(e)?"string":"boolean"==typeof e?"bool":"float32"}function C(e){return!!(e&&e.constructor&&e.call&&e.apply)}function A(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function k(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function R(e,t,n){const r=new Array;if(1===t.length){const a=t[0];for(let t=0;t<a;t++)r[t]=n[e+t]}else{const a=t[0],i=t.slice(1),s=i.reduce(((e,t)=>e*t));for(let t=0;t<a;t++)r[t]=R(e+t*s,i,n)}return r}function D(e,t){if(0===e.length)return t[0];const n=e.reduce(((e,t)=>e*t));if(0===n)return[];if(n!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}.`);return R(0,e,t)}function L(e,t){const n=O(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function O(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function P(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return D(e,new Float32Array(n));if("int32"===t)return D(e,new Int32Array(n));if("bool"===t)return D(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function F(e){e.forEach((t=>{s(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function B(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function $(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function U(e){return e&&e.then&&"function"==typeof e.then}n.d(t,{uZ:()=>r,nY:()=>a,Sm:()=>i,hu:()=>s,k5:()=>o,Cq:()=>c,xH:()=>l,NA:()=>u,cO:()=>h,GN:()=>d,YP:()=>p,oj:()=>f,WD:()=>m,JZ:()=>g,EC:()=>y,bp:()=>x,WP:()=>v,rQ:()=>b,D5:()=>w,LP:()=>_,QB:()=>T,fU:()=>S,bT:()=>E,Ub:()=>M,HD:()=>I,D2:()=>N,mf:()=>C,jP:()=>A,e3:()=>k,GX:()=>D,p8:()=>L,wT:()=>O,l6:()=>P,Mu:()=>F,qy:()=>B,NE:()=>$,tI:()=>U})},2313:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"d90c96e0142d76c991f351dbce8c2418.jpg"},9470:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"94dbfddbcd96e07c640f294e68850ef5.png"},1213:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"d7dd286018bc6ac339d8291431653158.png"},6302:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"c7e23d8ffd38e2876223487be46c8066.PNG"},8613:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"ccf6c09334221d4bf2ef3d8b3468a020.png"},8708:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"64b397b7f12ba2280e445651f985b192.PNG"},4251:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"86603eb111ae471325c404e4001e4745.png"},2679:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"18d99db28542afa5ff01a618e4709b50.png"},783:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"0064cac5a00a184efdb88d38f9c44a64.PNG"},4763:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"9950e5087a3a530b492c1d613a480bbd.PNG"},1922:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"c1b6f51f83a11c3d802bfdd1a59ee6ab.png"},5685:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"04d9faf0ab455720fe88b16a86ce9953.png"},7346:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"c87bfa8cdf60a1d7d4e52251108d563e.png"},4099:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"e6f6491b9c4a3db0f7241ad262f7329f.png"},9533:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"d294abcfbca4f2afa87c3a8ebd90ee80.png"},4317:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"b57ef598a151a9efccb268d52919d0ba.PNG"},7704:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"291bbd3b9443515cc747e025666a376f.png"},2158:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"ca71880491f0223bfb57f3be4bf47168.png"},5071:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"15274e7e9cf4c986860c740d441d208d.PNG"},5247:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"e65a880032db391b336b67b8d6e4a1cd.png"},5559:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"74e06c2ce1092b6ef0c8966887c257db.PNG"},1242:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"f45a5d1e2354e22dd97e7b000a2bc4f2.PNG"},7800:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"9b67615719042f8efcf78b04e4d1c770.PNG"},9450:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"4d2ed83dfb7b3ee408b478b075889edc.png"},351:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"c1fbeee8805c135f81f920109fef6000.PNG"},1619:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"9520a60a47729d83f910f4eb3431fe5f.PNG"},3091:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"400124a25658517e1f04f4483d4c9846.PNG"},2408:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"4a8cf2ff3887205d3cff9c06ca28160c.png"},8642:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"8a9cab0e0cc8f2e2d2d657ffb0cdb012.png"},4682:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"492ad2c088bed99ad8dc1750bc8482b1.png"},2256:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"b178adc2caa640f6837eb89e192a88ea.png"},8523:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"987b0e63d646e9549b08ad65c9d38356.JPG"},6304:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"4588ea7ebed8ae42189f6f23d215fe6a.png"},9769:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"5a190626ef278cc0ae626a41a85a2af6.JPG"},292:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"17103db4daf29f7619885050c8bc9dcd.JPG"},2882:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"be5208b483f7d1a1933dc406cb0f0749.JPG"},3094:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"1c6d473144f6b15081ec68978781f962.PNG"},1770:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"05b9b316278b6a2fab4e846fa689fef1.PNG"},311:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"17f017fd79f0fae156e116b4283f7417.png"},2648:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"44c9ea38a2070b2e55299df3723ceae6.PNG"},3930:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"cd9e5a931a4407e464255bb36d46cbff.png"},7212:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"815f6950a6a0eb30b373c787c26b158b.png"},6945:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"048ec9fa8a6ea5c26efbfa8560f36f7f.png"},9064:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"2ad6a5d317d7f18968b072bf0f065d1d.png"},4501:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"41ffd4939befd252f7b21f7992a605f1.png"},4229:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"476314f291318f10a19e74defd370291.png"},1657:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"6733edc4fe7e917d19250e38e82e2d90.jpg"},9115:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"6bc93b0ef83228656fc2c2f223a85b40.PNG"},1562:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"6873117e53d5e8daed68e92b3136dfa6.jpg"},7201:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"e70b0d491b87e9bff9fc3bac733e4ab1.JPG"},5602:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"56740e8cd3e39db925d2a90dfd30df7e.png"},3431:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"b12fc2f23458dfd82a60e589b8aca280.png"},9104:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"1099d86e4b76d3805f4ce2595df9d930.png"},942:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"da58bc5dee71a1fa0273b08dd688c319.PNG"},3719:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"81be5ac0c68bee99aff011cf003d025f.PNG"},3270:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"ebc3f0f6eeb18acdf315ef1245b56468.PNG"},6377:(e,t,n)=>{var r=n(4832),a=n(8652),i=n(801),s=n(2030),o=n(3618),c=n(9049),l=n(1971);l.alea=r,l.xor128=a,l.xorwow=i,l.xorshift7=s,l.xor4096=o,l.tychei=c,e.exports=l},4832:function(e,t,n){var r;!function(e,a,i){function s(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function c(e,t){var n=new s(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=c:n.amdD&&n.amdO?void 0===(r=function(){return c}.call(t,n,t,a))||(a.exports=r):this.alea=c}(0,e=n.nmd(e),n.amdD)},9049:function(e,t,n){var r;!function(e,a,i){function s(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function c(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=c:n.amdD&&n.amdO?void 0===(r=function(){return c}.call(t,n,t,a))||(a.exports=r):this.tychei=c}(0,e=n.nmd(e),n.amdD)},8652:function(e,t,n){var r;!function(e,a,i){function s(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function c(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=c:n.amdD&&n.amdO?void 0===(r=function(){return c}.call(t,n,t,a))||(a.exports=r):this.xor128=c}(0,e=n.nmd(e),n.amdD)},3618:function(e,t,n){var r;!function(e,a,i){function s(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,i=t.i;return t.w=r=r+1640531527|0,n=a[i+34&127],e=a[i=i+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[i]=n^e,t.i=i,n+(r^r>>>16)|0},function(e,t){var n,r,a,i,s,o=[],c=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,c=Math.max(c,t.length)),a=0,i=-32;i<c;++i)t&&(r^=t.charCodeAt((i+32)%t.length)),0===i&&(s=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,i>=0&&(s=s+1640531527|0,a=0==(n=o[127&i]^=r+s)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,i=512;i>0;--i)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=s,e.X=o,e.i=a}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function c(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=c:n.amdD&&n.amdO?void 0===(r=function(){return c}.call(t,n,t,a))||(a.exports=r):this.xor4096=c}(0,e=n.nmd(e),n.amdD)},2030:function(e,t,n){var r;!function(e,a,i){function s(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function c(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=c:n.amdD&&n.amdO?void 0===(r=function(){return c}.call(t,n,t,a))||(a.exports=r):this.xorshift7=c}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var r;!function(e,a,i){function s(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function c(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=c:n.amdD&&n.amdO?void 0===(r=function(){return c}.call(t,n,t,a))||(a.exports=r):this.xorwow=c}(0,e=n.nmd(e),n.amdD)},1971:(e,t,n)=>{var r;!function(a,i){var s,o=this,c=256,l=i.pow(c,6),u=i.pow(2,52),h=2*u,d=255;function p(e,t,n){var r=[],d=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,x(a)]:null==e?function(){try{var e;return s&&(e=s.randomBytes)?e=e(c):(e=new Uint8Array(c),(o.crypto||o.msCrypto).getRandomValues(e)),x(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,x(a)]}}():e,3),r),p=new f(r),v=function(){for(var e=p.g(6),t=l,n=0;e<u;)e=(e+n)*c,t*=c,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return v.int32=function(){return 0|p.g(4)},v.quick=function(){return p.g(4)/4294967296},v.double=v,y(x(p.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,p),e.state=function(){return m(p,{})}),n?(i.random=e,t):e})(v,d,"global"in t?t.global:this==i,t.state)}function f(e){var t,n=e.length,r=this,a=0,i=r.i=r.j=0,s=r.S=[];for(n||(e=[n++]);a<c;)s[a]=a++;for(a=0;a<c;a++)s[a]=s[i=d&i+e[a%n]+(t=s[a])],s[i]=t;(r.g=function(e){for(var t,n=0,a=r.i,i=r.j,s=r.S;e--;)t=s[a=d&a+1],n=n*c+s[d&(s[a]=s[i=d&i+t])+(s[i]=t)];return r.i=a,r.j=i,n})(c)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function y(e,t){for(var n,r=e+"",a=0;a<r.length;)t[d&a]=d&(n^=19*t[d&a])+r.charCodeAt(a++);return x(t)}function x(e){return String.fromCharCode.apply(0,e)}if(i.seedrandom=p,y(i.random(),a),e.exports){e.exports=p;try{s=n(3906)}catch(e){}}else void 0===(r=function(){return p}.call(t,n,t,e))||(e.exports=r)}([],Math)},8618:e=>{e.exports=function(e){function t(t,n){var r,a,i,s,o;this.object=t,this.domElement=void 0!==n?n:document,this.enabled=!0,this.target=new e.Vector3,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.25,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.enableKeys=!0,this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},this.mouseButtons={ORBIT:e.MOUSE.LEFT,ZOOM:e.MOUSE.MIDDLE,PAN:e.MOUSE.RIGHT},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=function(){return m.phi},this.getAzimuthalAngle=function(){return m.theta},this.reset=function(){c.target.copy(c.target0),c.object.position.copy(c.position0),c.object.zoom=c.zoom0,c.object.updateProjectionMatrix(),c.dispatchEvent(l),c.update(),p=d.NONE},this.update=(r=new e.Vector3,a=(new e.Quaternion).setFromUnitVectors(t.up,new e.Vector3(0,1,0)),i=a.clone().inverse(),s=new e.Vector3,o=new e.Quaternion,function(){var e=c.object.position;return r.copy(e).sub(c.target),r.applyQuaternion(a),m.setFromVector3(r),c.autoRotate&&p===d.NONE&&A(2*Math.PI/60/60*c.autoRotateSpeed),m.theta+=g.theta,m.phi+=g.phi,m.theta=Math.max(c.minAzimuthAngle,Math.min(c.maxAzimuthAngle,m.theta)),m.phi=Math.max(c.minPolarAngle,Math.min(c.maxPolarAngle,m.phi)),m.makeSafe(),m.radius*=y,m.radius=Math.max(c.minDistance,Math.min(c.maxDistance,m.radius)),c.target.add(x),r.setFromSpherical(m),r.applyQuaternion(i),e.copy(c.target).add(r),c.object.lookAt(c.target),!0===c.enableDamping?(g.theta*=1-c.dampingFactor,g.phi*=1-c.dampingFactor):g.set(0,0,0),y=1,x.set(0,0,0),!!(v||s.distanceToSquared(c.object.position)>f||8*(1-o.dot(c.object.quaternion))>f)&&(c.dispatchEvent(l),s.copy(c.object.position),o.copy(c.object.quaternion),v=!1,!0)}),this.dispose=function(){c.domElement.removeEventListener("contextmenu",j,!1),c.domElement.removeEventListener("mousedown",B,!1),c.domElement.removeEventListener("wheel",z,!1),c.domElement.removeEventListener("touchstart",H,!1),c.domElement.removeEventListener("touchend",V,!1),c.domElement.removeEventListener("touchmove",W,!1),document.removeEventListener("mousemove",$,!1),document.removeEventListener("mouseup",U,!1),window.removeEventListener("keydown",G,!1)};var c=this,l={type:"change"},u={type:"start"},h={type:"end"},d={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_DOLLY:4,TOUCH_PAN:5},p=d.NONE,f=1e-6,m=new e.Spherical,g=new e.Spherical,y=1,x=new e.Vector3,v=!1,b=new e.Vector2,w=new e.Vector2,_=new e.Vector2,T=new e.Vector2,S=new e.Vector2,E=new e.Vector2,M=new e.Vector2,I=new e.Vector2,N=new e.Vector2;function C(){return Math.pow(.95,c.zoomSpeed)}function A(e){g.theta-=e}function k(e){g.phi-=e}var R,D=(R=new e.Vector3,function(e,t){R.setFromMatrixColumn(t,0),R.multiplyScalar(-e),x.add(R)}),L=function(){var t=new e.Vector3;return function(e,n){t.setFromMatrixColumn(n,1),t.multiplyScalar(e),x.add(t)}}(),O=function(){var t=new e.Vector3;return function(n,r){var a=c.domElement===document?c.domElement.body:c.domElement;if(c.object instanceof e.PerspectiveCamera){var i=c.object.position;t.copy(i).sub(c.target);var s=t.length();s*=Math.tan(c.object.fov/2*Math.PI/180),D(2*n*s/a.clientHeight,c.object.matrix),L(2*r*s/a.clientHeight,c.object.matrix)}else c.object instanceof e.OrthographicCamera?(D(n*(c.object.right-c.object.left)/c.object.zoom/a.clientWidth,c.object.matrix),L(r*(c.object.top-c.object.bottom)/c.object.zoom/a.clientHeight,c.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),c.enablePan=!1)}}();function P(t){c.object instanceof e.PerspectiveCamera?y/=t:c.object instanceof e.OrthographicCamera?(c.object.zoom=Math.max(c.minZoom,Math.min(c.maxZoom,c.object.zoom*t)),c.object.updateProjectionMatrix(),v=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),c.enableZoom=!1)}function F(t){c.object instanceof e.PerspectiveCamera?y*=t:c.object instanceof e.OrthographicCamera?(c.object.zoom=Math.max(c.minZoom,Math.min(c.maxZoom,c.object.zoom/t)),c.object.updateProjectionMatrix(),v=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),c.enableZoom=!1)}function B(e){if(!1!==c.enabled){if(e.preventDefault(),e.button===c.mouseButtons.ORBIT){if(!1===c.enableRotate)return;!function(e){b.set(e.clientX,e.clientY)}(e),p=d.ROTATE}else if(e.button===c.mouseButtons.ZOOM){if(!1===c.enableZoom)return;!function(e){M.set(e.clientX,e.clientY)}(e),p=d.DOLLY}else if(e.button===c.mouseButtons.PAN){if(!1===c.enablePan)return;!function(e){T.set(e.clientX,e.clientY)}(e),p=d.PAN}p!==d.NONE&&(document.addEventListener("mousemove",$,!1),document.addEventListener("mouseup",U,!1),c.dispatchEvent(u))}}function $(e){if(!1!==c.enabled)if(e.preventDefault(),p===d.ROTATE){if(!1===c.enableRotate)return;!function(e){w.set(e.clientX,e.clientY),_.subVectors(w,b);var t=c.domElement===document?c.domElement.body:c.domElement;A(2*Math.PI*_.x/t.clientWidth*c.rotateSpeed),k(2*Math.PI*_.y/t.clientHeight*c.rotateSpeed),b.copy(w),c.update()}(e)}else if(p===d.DOLLY){if(!1===c.enableZoom)return;!function(e){I.set(e.clientX,e.clientY),N.subVectors(I,M),N.y>0?P(C()):N.y<0&&F(C()),M.copy(I),c.update()}(e)}else if(p===d.PAN){if(!1===c.enablePan)return;!function(e){S.set(e.clientX,e.clientY),E.subVectors(S,T),O(E.x,E.y),T.copy(S),c.update()}(e)}}function U(e){!1!==c.enabled&&(document.removeEventListener("mousemove",$,!1),document.removeEventListener("mouseup",U,!1),c.dispatchEvent(h),p=d.NONE)}function z(e){!1===c.enabled||!1===c.enableZoom||p!==d.NONE&&p!==d.ROTATE||(e.preventDefault(),e.stopPropagation(),function(e){e.deltaY<0?F(C()):e.deltaY>0&&P(C()),c.update()}(e),c.dispatchEvent(u),c.dispatchEvent(h))}function G(e){!1!==c.enabled&&!1!==c.enableKeys&&!1!==c.enablePan&&function(e){switch(e.keyCode){case c.keys.UP:O(0,c.keyPanSpeed),c.update();break;case c.keys.BOTTOM:O(0,-c.keyPanSpeed),c.update();break;case c.keys.LEFT:O(c.keyPanSpeed,0),c.update();break;case c.keys.RIGHT:O(-c.keyPanSpeed,0),c.update()}}(e)}function H(e){if(!1!==c.enabled){switch(e.touches.length){case 1:if(!1===c.enableRotate)return;!function(e){b.set(e.touches[0].pageX,e.touches[0].pageY)}(e),p=d.TOUCH_ROTATE;break;case 2:if(!1===c.enableZoom)return;!function(e){var t=e.touches[0].pageX-e.touches[1].pageX,n=e.touches[0].pageY-e.touches[1].pageY,r=Math.sqrt(t*t+n*n);M.set(0,r)}(e),p=d.TOUCH_DOLLY;break;case 3:if(!1===c.enablePan)return;!function(e){T.set(e.touches[0].pageX,e.touches[0].pageY)}(e),p=d.TOUCH_PAN;break;default:p=d.NONE}p!==d.NONE&&c.dispatchEvent(u)}}function W(e){if(!1!==c.enabled)switch(e.preventDefault(),e.stopPropagation(),e.touches.length){case 1:if(!1===c.enableRotate)return;if(p!==d.TOUCH_ROTATE)return;!function(e){w.set(e.touches[0].pageX,e.touches[0].pageY),_.subVectors(w,b);var t=c.domElement===document?c.domElement.body:c.domElement;A(2*Math.PI*_.x/t.clientWidth*c.rotateSpeed),k(2*Math.PI*_.y/t.clientHeight*c.rotateSpeed),b.copy(w),c.update()}(e);break;case 2:if(!1===c.enableZoom)return;if(p!==d.TOUCH_DOLLY)return;!function(e){var t=e.touches[0].pageX-e.touches[1].pageX,n=e.touches[0].pageY-e.touches[1].pageY,r=Math.sqrt(t*t+n*n);I.set(0,r),N.subVectors(I,M),N.y>0?F(C()):N.y<0&&P(C()),M.copy(I),c.update()}(e);break;case 3:if(!1===c.enablePan)return;if(p!==d.TOUCH_PAN)return;!function(e){S.set(e.touches[0].pageX,e.touches[0].pageY),E.subVectors(S,T),O(E.x,E.y),T.copy(S),c.update()}(e);break;default:p=d.NONE}}function V(e){!1!==c.enabled&&(c.dispatchEvent(h),p=d.NONE)}function j(e){e.preventDefault()}c.domElement.addEventListener("contextmenu",j,!1),c.domElement.addEventListener("mousedown",B,!1),c.domElement.addEventListener("wheel",z,!1),c.domElement.addEventListener("touchstart",H,!1),c.domElement.addEventListener("touchend",V,!1),c.domElement.addEventListener("touchmove",W,!1),window.addEventListener("keydown",G,!1),this.update()}return t.prototype=Object.create(e.EventDispatcher.prototype),t.prototype.constructor=t,Object.defineProperties(t.prototype,{center:{get:function(){return console.warn("THREE.OrbitControls: .center has been renamed to .target"),this.target}},noZoom:{get:function(){return console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."),!this.enableZoom},set:function(e){console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."),this.enableZoom=!e}},noRotate:{get:function(){return console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."),!this.enableRotate},set:function(e){console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."),this.enableRotate=!e}},noPan:{get:function(){return console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead."),!this.enablePan},set:function(e){console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead."),this.enablePan=!e}},noKeys:{get:function(){return console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."),!this.enableKeys},set:function(e){console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."),this.enableKeys=!e}},staticMoving:{get:function(){return console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."),!this.enableDamping},set:function(e){console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."),this.enableDamping=!e}},dynamicDampingFactor:{get:function(){return console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."),this.dampingFactor},set:function(e){console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."),this.dampingFactor=e}}}),t}},2212:(e,t,n)=>{"use strict";n.r(t),n.d(t,{ACESFilmicToneMapping:()=>ne,AddEquation:()=>E,AddOperation:()=>Z,AdditiveAnimationBlendMode:()=>jt,AdditiveBlending:()=>w,AlphaFormat:()=>Pe,AlwaysDepth:()=>G,AlwaysStencilFunc:()=>Sn,AmbientLight:()=>Dh,AmbientLightProbe:()=>td,AnimationClip:()=>Uu,AnimationLoader:()=>qu,AnimationMixer:()=>Dd,AnimationObjectGroup:()=>kd,AnimationUtils:()=>Iu,ArcCurve:()=>nh,ArrayCamera:()=>ko,ArrowHelper:()=>Tp,Audio:()=>dd,AudioAnalyser:()=>xd,AudioContext:()=>Jh,AudioListener:()=>hd,AudioLoader:()=>Qh,AxesHelper:()=>Sp,AxisHelper:()=>Tf,BackSide:()=>m,BasicDepthPacking:()=>an,BasicShadowMap:()=>u,BinaryTextureLoader:()=>Nf,Bone:()=>mc,BooleanKeyframeTrack:()=>Du,BoundingBoxHelper:()=>Sf,Box2:()=>Hd,Box3:()=>er,Box3Helper:()=>xp,BoxBufferGeometry:()=>fi,BoxGeometry:()=>Zc,BoxHelper:()=>yp,BufferAttribute:()=>Ea,BufferGeometry:()=>Xa,BufferGeometryLoader:()=>zh,ByteType:()=>Ee,Cache:()=>Gu,Camera:()=>vi,CameraHelper:()=>fp,CanvasRenderer:()=>kf,CanvasTexture:()=>Wc,CatmullRomCurve3:()=>ch,CineonToneMapping:()=>te,CircleBufferGeometry:()=>Jc,CircleGeometry:()=>Qc,ClampToEdgeWrapping:()=>de,Clock:()=>id,ClosedSplineCurve3:()=>bf,Color:()=>xa,ColorKeyframeTrack:()=>Lu,CompressedTexture:()=>Hc,CompressedTextureLoader:()=>Yu,ConeBufferGeometry:()=>rl,ConeGeometry:()=>nl,CubeCamera:()=>_i,CubeGeometry:()=>Zc,CubeReflectionMapping:()=>ie,CubeRefractionMapping:()=>se,CubeTexture:()=>Ti,CubeTextureLoader:()=>Zu,CubeUVReflectionMapping:()=>le,CubeUVRefractionMapping:()=>ue,CubicBezierCurve:()=>dh,CubicBezierCurve3:()=>ph,CubicInterpolant:()=>Cu,CullFaceBack:()=>o,CullFaceFront:()=>c,CullFaceFrontBack:()=>l,CullFaceNone:()=>s,Curve:()=>eh,CurvePath:()=>bh,CustomBlending:()=>S,CustomToneMapping:()=>re,CylinderBufferGeometry:()=>el,CylinderGeometry:()=>tl,Cylindrical:()=>zd,DataTexture:()=>Ei,DataTexture2DArray:()=>Yi,DataTexture3D:()=>Ki,DataTextureLoader:()=>Ju,DataUtils:()=>Ip,DecrementStencilOp:()=>pn,DecrementWrapStencilOp:()=>mn,DefaultLoadingManager:()=>Wu,DepthFormat:()=>Ge,DepthStencilFormat:()=>He,DepthTexture:()=>Vc,DirectionalLight:()=>Rh,DirectionalLightHelper:()=>hp,DiscreteInterpolant:()=>ku,DodecahedronBufferGeometry:()=>il,DodecahedronGeometry:()=>sl,DoubleSide:()=>g,DstAlphaFactor:()=>P,DstColorFactor:()=>B,DynamicBufferAttribute:()=>uf,DynamicCopyUsage:()=>Rn,DynamicDrawUsage:()=>Mn,DynamicReadUsage:()=>Cn,EdgesGeometry:()=>hl,EdgesHelper:()=>Ef,EllipseCurve:()=>th,EqualDepth:()=>V,EqualStencilFunc:()=>vn,EquirectangularReflectionMapping:()=>oe,EquirectangularRefractionMapping:()=>ce,Euler:()=>Dr,EventDispatcher:()=>Pn,ExtrudeBufferGeometry:()=>$l,ExtrudeGeometry:()=>zl,Face3:()=>va,Face4:()=>qp,FaceColors:()=>Jp,FileLoader:()=>Xu,FlatShading:()=>y,Float16BufferAttribute:()=>Da,Float32Attribute:()=>xf,Float32BufferAttribute:()=>La,Float64Attribute:()=>vf,Float64BufferAttribute:()=>Oa,FloatType:()=>Ae,Fog:()=>$o,FogExp2:()=>Bo,Font:()=>qh,FontLoader:()=>Kh,FrontSide:()=>f,Frustum:()=>Ni,GLBufferAttribute:()=>Pd,GLSL1:()=>Ln,GLSL3:()=>On,GammaEncoding:()=>Jt,Geometry:()=>Kc,GeometryUtils:()=>Af,GreaterDepth:()=>X,GreaterEqualDepth:()=>j,GreaterEqualStencilFunc:()=>Tn,GreaterStencilFunc:()=>wn,GridHelper:()=>sp,Group:()=>Ro,HalfFloatType:()=>ke,HemisphereLight:()=>Sh,HemisphereLightHelper:()=>ip,HemisphereLightProbe:()=>ed,IcosahedronBufferGeometry:()=>Gl,IcosahedronGeometry:()=>Hl,ImageBitmapLoader:()=>jh,ImageLoader:()=>Ku,ImageUtils:()=>Hn,ImmediateRenderObject:()=>Xd,IncrementStencilOp:()=>dn,IncrementWrapStencilOp:()=>fn,InstancedBufferAttribute:()=>Uh,InstancedBufferGeometry:()=>$h,InstancedInterleavedBuffer:()=>Od,InstancedMesh:()=>Tc,Int16Attribute:()=>ff,Int16BufferAttribute:()=>Ca,Int32Attribute:()=>gf,Int32BufferAttribute:()=>ka,Int8Attribute:()=>hf,Int8BufferAttribute:()=>Ma,IntType:()=>Ne,InterleavedBuffer:()=>zo,InterleavedBufferAttribute:()=>Ho,Interpolant:()=>Nu,InterpolateDiscrete:()=>$t,InterpolateLinear:()=>Ut,InterpolateSmooth:()=>zt,InvertStencilOp:()=>gn,JSONLoader:()=>Rf,KeepStencilOp:()=>un,KeyframeTrack:()=>Ru,LOD:()=>cc,LatheBufferGeometry:()=>Wl,LatheGeometry:()=>Vl,Layers:()=>Pr,LensFlare:()=>Lf,LessDepth:()=>H,LessEqualDepth:()=>W,LessEqualStencilFunc:()=>bn,LessStencilFunc:()=>xn,Light:()=>Th,LightProbe:()=>Ph,Line:()=>Ac,Line3:()=>jd,LineBasicMaterial:()=>Sc,LineCurve:()=>fh,LineCurve3:()=>mh,LineDashedMaterial:()=>Eu,LineLoop:()=>Lc,LinePieces:()=>Kp,LineSegments:()=>Dc,LineStrip:()=>Yp,LinearEncoding:()=>Kt,LinearFilter:()=>ve,LinearInterpolant:()=>Au,LinearMipMapLinearFilter:()=>Te,LinearMipMapNearestFilter:()=>we,LinearMipmapLinearFilter:()=>_e,LinearMipmapNearestFilter:()=>be,LinearToneMapping:()=>Q,Loader:()=>Vu,LoaderUtils:()=>Bh,LoadingManager:()=>Hu,LogLuvEncoding:()=>en,LoopOnce:()=>Pt,LoopPingPong:()=>Bt,LoopRepeat:()=>Ft,LuminanceAlphaFormat:()=>Ue,LuminanceFormat:()=>$e,MOUSE:()=>a,Material:()=>wa,MaterialLoader:()=>Fh,Math:()=>$n,MathUtils:()=>$n,Matrix3:()=>zn,Matrix4:()=>Er,MaxEquation:()=>C,Mesh:()=>hi,MeshBasicMaterial:()=>_a,MeshDepthMaterial:()=>Eo,MeshDistanceMaterial:()=>Mo,MeshFaceMaterial:()=>ef,MeshLambertMaterial:()=>Tu,MeshMatcapMaterial:()=>Su,MeshNormalMaterial:()=>_u,MeshPhongMaterial:()=>bu,MeshPhysicalMaterial:()=>vu,MeshStandardMaterial:()=>xu,MeshToonMaterial:()=>wu,MinEquation:()=>N,MirroredRepeatWrapping:()=>pe,MixOperation:()=>K,MultiMaterial:()=>tf,MultiplyBlending:()=>T,MultiplyOperation:()=>Y,NearestFilter:()=>fe,NearestMipMapLinearFilter:()=>xe,NearestMipMapNearestFilter:()=>ge,NearestMipmapLinearFilter:()=>ye,NearestMipmapNearestFilter:()=>me,NeverDepth:()=>z,NeverStencilFunc:()=>yn,NoBlending:()=>v,NoColors:()=>Zp,NoToneMapping:()=>J,NormalAnimationBlendMode:()=>Vt,NormalBlending:()=>b,NotEqualDepth:()=>q,NotEqualStencilFunc:()=>_n,NumberKeyframeTrack:()=>Ou,Object3D:()=>Kr,ObjectLoader:()=>Gh,ObjectSpaceNormalMap:()=>cn,OctahedronBufferGeometry:()=>jl,OctahedronGeometry:()=>Xl,OneFactor:()=>k,OneMinusDstAlphaFactor:()=>F,OneMinusDstColorFactor:()=>$,OneMinusSrcAlphaFactor:()=>O,OneMinusSrcColorFactor:()=>D,OrthographicCamera:()=>Ah,PCFShadowMap:()=>h,PCFSoftShadowMap:()=>d,PMREMGenerator:()=>zp,ParametricBufferGeometry:()=>ql,ParametricGeometry:()=>Yl,Particle:()=>rf,ParticleBasicMaterial:()=>of,ParticleSystem:()=>af,ParticleSystemMaterial:()=>cf,Path:()=>wh,PerspectiveCamera:()=>bi,Plane:()=>ea,PlaneBufferGeometry:()=>ki,PlaneGeometry:()=>Kl,PlaneHelper:()=>vp,PointCloud:()=>nf,PointCloudMaterial:()=>sf,PointLight:()=>Ch,PointLightHelper:()=>tp,Points:()=>Uc,PointsMaterial:()=>Oc,PolarGridHelper:()=>op,PolyhedronBufferGeometry:()=>al,PolyhedronGeometry:()=>Zl,PositionalAudio:()=>yd,PropertyBinding:()=>Ad,PropertyMixer:()=>vd,QuadraticBezierCurve:()=>gh,QuadraticBezierCurve3:()=>yh,Quaternion:()=>Kn,QuaternionKeyframeTrack:()=>Fu,QuaternionLinearInterpolant:()=>Pu,REVISION:()=>r,RGBADepthPacking:()=>sn,RGBAFormat:()=>Be,RGBAIntegerFormat:()=>Ye,RGBA_ASTC_10x10_Format:()=>xt,RGBA_ASTC_10x5_Format:()=>mt,RGBA_ASTC_10x6_Format:()=>gt,RGBA_ASTC_10x8_Format:()=>yt,RGBA_ASTC_12x10_Format:()=>vt,RGBA_ASTC_12x12_Format:()=>bt,RGBA_ASTC_4x4_Format:()=>ot,RGBA_ASTC_5x4_Format:()=>ct,RGBA_ASTC_5x5_Format:()=>lt,RGBA_ASTC_6x5_Format:()=>ut,RGBA_ASTC_6x6_Format:()=>ht,RGBA_ASTC_8x5_Format:()=>dt,RGBA_ASTC_8x6_Format:()=>pt,RGBA_ASTC_8x8_Format:()=>ft,RGBA_BPTC_Format:()=>wt,RGBA_ETC2_EAC_Format:()=>st,RGBA_PVRTC_2BPPV1_Format:()=>rt,RGBA_PVRTC_4BPPV1_Format:()=>nt,RGBA_S3TC_DXT1_Format:()=>Ze,RGBA_S3TC_DXT3_Format:()=>Je,RGBA_S3TC_DXT5_Format:()=>Qe,RGBDEncoding:()=>rn,RGBEEncoding:()=>Qt,RGBEFormat:()=>ze,RGBFormat:()=>Fe,RGBIntegerFormat:()=>qe,RGBM16Encoding:()=>nn,RGBM7Encoding:()=>tn,RGB_ETC1_Format:()=>at,RGB_ETC2_Format:()=>it,RGB_PVRTC_2BPPV1_Format:()=>tt,RGB_PVRTC_4BPPV1_Format:()=>et,RGB_S3TC_DXT1_Format:()=>Ke,RGFormat:()=>je,RGIntegerFormat:()=>Xe,RawShaderMaterial:()=>yu,Ray:()=>Sr,Raycaster:()=>Fd,RectAreaLight:()=>Lh,RedFormat:()=>We,RedIntegerFormat:()=>Ve,ReinhardToneMapping:()=>ee,RepeatWrapping:()=>he,ReplaceStencilOp:()=>hn,ReverseSubtractEquation:()=>I,RingBufferGeometry:()=>Jl,RingGeometry:()=>Ql,SRGB8_ALPHA8_ASTC_10x10_Format:()=>Dt,SRGB8_ALPHA8_ASTC_10x5_Format:()=>At,SRGB8_ALPHA8_ASTC_10x6_Format:()=>kt,SRGB8_ALPHA8_ASTC_10x8_Format:()=>Rt,SRGB8_ALPHA8_ASTC_12x10_Format:()=>Lt,SRGB8_ALPHA8_ASTC_12x12_Format:()=>Ot,SRGB8_ALPHA8_ASTC_4x4_Format:()=>_t,SRGB8_ALPHA8_ASTC_5x4_Format:()=>Tt,SRGB8_ALPHA8_ASTC_5x5_Format:()=>St,SRGB8_ALPHA8_ASTC_6x5_Format:()=>Et,SRGB8_ALPHA8_ASTC_6x6_Format:()=>Mt,SRGB8_ALPHA8_ASTC_8x5_Format:()=>It,SRGB8_ALPHA8_ASTC_8x6_Format:()=>Nt,SRGB8_ALPHA8_ASTC_8x8_Format:()=>Ct,Scene:()=>Uo,SceneUtils:()=>Df,ShaderChunk:()=>Ri,ShaderLib:()=>Li,ShaderMaterial:()=>xi,ShadowMaterial:()=>gu,Shape:()=>_h,ShapeBufferGeometry:()=>eu,ShapeGeometry:()=>tu,ShapePath:()=>Xh,ShapeUtils:()=>Pl,ShortType:()=>Me,Skeleton:()=>xc,SkeletonHelper:()=>Qd,SkinnedMesh:()=>fc,SmoothShading:()=>x,Sphere:()=>gr,SphereBufferGeometry:()=>nu,SphereGeometry:()=>ru,Spherical:()=>Ud,SphericalHarmonics3:()=>Oh,Spline:()=>_f,SplineCurve:()=>xh,SplineCurve3:()=>wf,SpotLight:()=>Ih,SpotLightHelper:()=>Yd,Sprite:()=>ac,SpriteMaterial:()=>Wo,SrcAlphaFactor:()=>L,SrcAlphaSaturateFactor:()=>U,SrcColorFactor:()=>R,StaticCopyUsage:()=>kn,StaticDrawUsage:()=>En,StaticReadUsage:()=>Nn,StereoCamera:()=>ad,StreamCopyUsage:()=>Dn,StreamDrawUsage:()=>In,StreamReadUsage:()=>An,StringKeyframeTrack:()=>Bu,SubtractEquation:()=>M,SubtractiveBlending:()=>_,TOUCH:()=>i,TangentSpaceNormalMap:()=>on,TetrahedronBufferGeometry:()=>au,TetrahedronGeometry:()=>iu,TextBufferGeometry:()=>su,TextGeometry:()=>ou,Texture:()=>Vn,TextureLoader:()=>Qu,TorusBufferGeometry:()=>cu,TorusGeometry:()=>lu,TorusKnotBufferGeometry:()=>uu,TorusKnotGeometry:()=>hu,Triangle:()=>ha,TriangleFanDrawMode:()=>Yt,TriangleStripDrawMode:()=>qt,TrianglesDrawMode:()=>Xt,TubeBufferGeometry:()=>du,TubeGeometry:()=>pu,UVMapping:()=>ae,Uint16Attribute:()=>mf,Uint16BufferAttribute:()=>Aa,Uint32Attribute:()=>yf,Uint32BufferAttribute:()=>Ra,Uint8Attribute:()=>df,Uint8BufferAttribute:()=>Ia,Uint8ClampedAttribute:()=>pf,Uint8ClampedBufferAttribute:()=>Na,Uniform:()=>Ld,UniformsLib:()=>Di,UniformsUtils:()=>yi,UnsignedByteType:()=>Se,UnsignedInt248Type:()=>Oe,UnsignedIntType:()=>Ce,UnsignedShort4444Type:()=>Re,UnsignedShort5551Type:()=>De,UnsignedShort565Type:()=>Le,UnsignedShortType:()=>Ie,VSMShadowMap:()=>p,Vector2:()=>Un,Vector3:()=>Zn,Vector4:()=>Xn,VectorKeyframeTrack:()=>$u,Vertex:()=>lf,VertexColors:()=>Qp,VideoTexture:()=>Gc,WebGL1Renderer:()=>Fo,WebGLCubeRenderTarget:()=>Si,WebGLMultisampleRenderTarget:()=>Yn,WebGLRenderTarget:()=>qn,WebGLRenderTargetCube:()=>Cf,WebGLRenderer:()=>Po,WebGLUtils:()=>Ao,WireframeGeometry:()=>fu,WireframeHelper:()=>Mf,WrapAroundEnding:()=>Wt,XHRLoader:()=>If,ZeroCurvatureEnding:()=>Gt,ZeroFactor:()=>A,ZeroSlopeEnding:()=>Ht,ZeroStencilOp:()=>ln,sRGBEncoding:()=>Zt});const r="124",a={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},i={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},s=0,o=1,c=2,l=3,u=0,h=1,d=2,p=3,f=0,m=1,g=2,y=1,x=2,v=0,b=1,w=2,_=3,T=4,S=5,E=100,M=101,I=102,N=103,C=104,A=200,k=201,R=202,D=203,L=204,O=205,P=206,F=207,B=208,$=209,U=210,z=0,G=1,H=2,W=3,V=4,j=5,X=6,q=7,Y=0,K=1,Z=2,J=0,Q=1,ee=2,te=3,ne=4,re=5,ae=300,ie=301,se=302,oe=303,ce=304,le=306,ue=307,he=1e3,de=1001,pe=1002,fe=1003,me=1004,ge=1004,ye=1005,xe=1005,ve=1006,be=1007,we=1007,_e=1008,Te=1008,Se=1009,Ee=1010,Me=1011,Ie=1012,Ne=1013,Ce=1014,Ae=1015,ke=1016,Re=1017,De=1018,Le=1019,Oe=1020,Pe=1021,Fe=1022,Be=1023,$e=1024,Ue=1025,ze=Be,Ge=1026,He=1027,We=1028,Ve=1029,je=1030,Xe=1031,qe=1032,Ye=1033,Ke=33776,Ze=33777,Je=33778,Qe=33779,et=35840,tt=35841,nt=35842,rt=35843,at=36196,it=37492,st=37496,ot=37808,ct=37809,lt=37810,ut=37811,ht=37812,dt=37813,pt=37814,ft=37815,mt=37816,gt=37817,yt=37818,xt=37819,vt=37820,bt=37821,wt=36492,_t=37840,Tt=37841,St=37842,Et=37843,Mt=37844,It=37845,Nt=37846,Ct=37847,At=37848,kt=37849,Rt=37850,Dt=37851,Lt=37852,Ot=37853,Pt=2200,Ft=2201,Bt=2202,$t=2300,Ut=2301,zt=2302,Gt=2400,Ht=2401,Wt=2402,Vt=2500,jt=2501,Xt=0,qt=1,Yt=2,Kt=3e3,Zt=3001,Jt=3007,Qt=3002,en=3003,tn=3004,nn=3005,rn=3006,an=3200,sn=3201,on=0,cn=1,ln=0,un=7680,hn=7681,dn=7682,pn=7683,fn=34055,mn=34056,gn=5386,yn=512,xn=513,vn=514,bn=515,wn=516,_n=517,Tn=518,Sn=519,En=35044,Mn=35048,In=35040,Nn=35045,Cn=35049,An=35041,kn=35046,Rn=35050,Dn=35042,Ln="100",On="300 es";function Pn(){}Object.assign(Pn.prototype,{addEventListener:function(e,t){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)},hasEventListener:function(e,t){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(t)},removeEventListener:function(e,t){if(void 0===this._listeners)return;const n=this._listeners[e];if(void 0!==n){const e=n.indexOf(t);-1!==e&&n.splice(e,1)}},dispatchEvent:function(e){if(void 0===this._listeners)return;const t=this._listeners[e.type];if(void 0!==t){e.target=this;const n=t.slice(0);for(let t=0,r=n.length;t<r;t++)n[t].call(this,e)}}});const Fn=[];for(let e=0;e<256;e++)Fn[e]=(e<16?"0":"")+e.toString(16);let Bn=1234567;const $n={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){const e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,n=4294967295*Math.random()|0,r=4294967295*Math.random()|0;return(Fn[255&e]+Fn[e>>8&255]+Fn[e>>16&255]+Fn[e>>24&255]+"-"+Fn[255&t]+Fn[t>>8&255]+"-"+Fn[t>>16&15|64]+Fn[t>>24&255]+"-"+Fn[63&n|128]+Fn[n>>8&255]+"-"+Fn[n>>16&255]+Fn[n>>24&255]+Fn[255&r]+Fn[r>>8&255]+Fn[r>>16&255]+Fn[r>>24&255]).toUpperCase()},clamp:function(e,t,n){return Math.max(t,Math.min(n,e))},euclideanModulo:function(e,t){return(e%t+t)%t},mapLinear:function(e,t,n,r,a){return r+(e-t)*(a-r)/(n-t)},lerp:function(e,t,n){return(1-n)*e+n*t},smoothstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t))*e*(3-2*e)},smootherstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t))*e*e*(e*(6*e-15)+10)},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},seededRandom:function(e){return void 0!==e&&(Bn=e%2147483647),Bn=16807*Bn%2147483647,(Bn-1)/2147483646},degToRad:function(e){return e*$n.DEG2RAD},radToDeg:function(e){return e*$n.RAD2DEG},isPowerOfTwo:function(e){return 0==(e&e-1)&&0!==e},ceilPowerOfTwo:function(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))},floorPowerOfTwo:function(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))},setQuaternionFromProperEuler:function(e,t,n,r,a){const i=Math.cos,s=Math.sin,o=i(n/2),c=s(n/2),l=i((t+r)/2),u=s((t+r)/2),h=i((t-r)/2),d=s((t-r)/2),p=i((r-t)/2),f=s((r-t)/2);switch(a){case"XYX":e.set(o*u,c*h,c*d,o*l);break;case"YZY":e.set(c*d,o*u,c*h,o*l);break;case"ZXZ":e.set(c*h,c*d,o*u,o*l);break;case"XZX":e.set(o*u,c*f,c*p,o*l);break;case"YXY":e.set(c*p,o*u,c*f,o*l);break;case"ZYZ":e.set(c*f,c*p,o*u,o*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+a)}}};class Un{constructor(e=0,t=0){Object.defineProperty(this,"isVector2",{value:!0}),this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6],this.y=r[1]*t+r[4]*n+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),r=Math.sin(t),a=this.x-e.x,i=this.y-e.y;return this.x=a*n-i*r+e.x,this.y=a*r+i*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}class zn{constructor(){Object.defineProperty(this,"isMatrix3",{value:!0}),this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,r,a,i,s,o,c){const l=this.elements;return l[0]=e,l[1]=r,l[2]=s,l[3]=t,l[4]=a,l[5]=o,l[6]=n,l[7]=i,l[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}clone(){return(new this.constructor).fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,r=t.elements,a=this.elements,i=n[0],s=n[3],o=n[6],c=n[1],l=n[4],u=n[7],h=n[2],d=n[5],p=n[8],f=r[0],m=r[3],g=r[6],y=r[1],x=r[4],v=r[7],b=r[2],w=r[5],_=r[8];return a[0]=i*f+s*y+o*b,a[3]=i*m+s*x+o*w,a[6]=i*g+s*v+o*_,a[1]=c*f+l*y+u*b,a[4]=c*m+l*x+u*w,a[7]=c*g+l*v+u*_,a[2]=h*f+d*y+p*b,a[5]=h*m+d*x+p*w,a[8]=h*g+d*v+p*_,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],r=e[2],a=e[3],i=e[4],s=e[5],o=e[6],c=e[7],l=e[8];return t*i*l-t*s*c-n*a*l+n*s*o+r*a*c-r*i*o}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],a=e[3],i=e[4],s=e[5],o=e[6],c=e[7],l=e[8],u=l*i-s*c,h=s*o-l*a,d=c*a-i*o,p=t*u+n*h+r*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);const f=1/p;return e[0]=u*f,e[1]=(r*c-l*n)*f,e[2]=(s*n-r*i)*f,e[3]=h*f,e[4]=(l*t-r*o)*f,e[5]=(r*a-s*t)*f,e[6]=d*f,e[7]=(n*o-c*t)*f,e[8]=(i*t-n*a)*f,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).copy(this).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,r,a,i,s){const o=Math.cos(a),c=Math.sin(a);return this.set(n*o,n*c,-n*(o*i+c*s)+i+e,-r*c,r*o,-r*(-c*i+o*s)+s+t,0,0,1),this}scale(e,t){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){const t=Math.cos(e),n=Math.sin(e),r=this.elements,a=r[0],i=r[3],s=r[6],o=r[1],c=r[4],l=r[7];return r[0]=t*a+n*o,r[3]=t*i+n*c,r[6]=t*s+n*l,r[1]=-n*a+t*o,r[4]=-n*i+t*c,r[7]=-n*s+t*l,this}translate(e,t){const n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){const t=this.elements,n=e.elements;for(let e=0;e<9;e++)if(t[e]!==n[e])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}}let Gn;const Hn={getDataURL:function(e){if(/^data:/i.test(e.src))return e.src;if("undefined"==typeof HTMLCanvasElement)return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===Gn&&(Gn=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),Gn.width=e.width,Gn.height=e.height;const n=Gn.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Gn}return t.width>2048||t.height>2048?t.toDataURL("image/jpeg",.6):t.toDataURL("image/png")}};let Wn=0;function Vn(e=Vn.DEFAULT_IMAGE,t=Vn.DEFAULT_MAPPING,n=de,r=de,a=ve,i=_e,s=Be,o=Se,c=1,l=Kt){Object.defineProperty(this,"id",{value:Wn++}),this.uuid=$n.generateUUID(),this.name="",this.image=e,this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=r,this.magFilter=a,this.minFilter=i,this.anisotropy=c,this.format=s,this.internalFormat=null,this.type=o,this.offset=new Un(0,0),this.repeat=new Un(1,1),this.center=new Un(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new zn,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=l,this.version=0,this.onUpdate=null}function jn(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?Hn.getDataURL(e):e.data?{data:Array.prototype.slice.call(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}Vn.DEFAULT_IMAGE=void 0,Vn.DEFAULT_MAPPING=ae,Vn.prototype=Object.assign(Object.create(Pn.prototype),{constructor:Vn,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this},toJSON:function(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const r=this.image;if(void 0===r.uuid&&(r.uuid=$n.generateUUID()),!t&&void 0===e.images[r.uuid]){let t;if(Array.isArray(r)){t=[];for(let e=0,n=r.length;e<n;e++)r[e].isDataTexture?t.push(jn(r[e].image)):t.push(jn(r[e]))}else t=jn(r);e.images[r.uuid]={uuid:r.uuid,url:t}}n.image=r.uuid}return t||(e.textures[this.uuid]=n),n},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(e){if(this.mapping!==ae)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case he:e.x=e.x-Math.floor(e.x);break;case de:e.x=e.x<0?0:1;break;case pe:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case he:e.y=e.y-Math.floor(e.y);break;case de:e.y=e.y<0?0:1;break;case pe:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}}),Object.defineProperty(Vn.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}});class Xn{constructor(e=0,t=0,n=0,r=1){Object.defineProperty(this,"isVector4",{value:!0}),this.x=e,this.y=t,this.z=n,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,r){return this.x=e,this.y=t,this.z=n,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,r=this.z,a=this.w,i=e.elements;return this.x=i[0]*t+i[4]*n+i[8]*r+i[12]*a,this.y=i[1]*t+i[5]*n+i[9]*r+i[13]*a,this.z=i[2]*t+i[6]*n+i[10]*r+i[14]*a,this.w=i[3]*t+i[7]*n+i[11]*r+i[15]*a,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,r,a;const i=.01,s=.1,o=e.elements,c=o[0],l=o[4],u=o[8],h=o[1],d=o[5],p=o[9],f=o[2],m=o[6],g=o[10];if(Math.abs(l-h)<i&&Math.abs(u-f)<i&&Math.abs(p-m)<i){if(Math.abs(l+h)<s&&Math.abs(u+f)<s&&Math.abs(p+m)<s&&Math.abs(c+d+g-3)<s)return this.set(1,0,0,0),this;t=Math.PI;const e=(c+1)/2,o=(d+1)/2,y=(g+1)/2,x=(l+h)/4,v=(u+f)/4,b=(p+m)/4;return e>o&&e>y?e<i?(n=0,r=.707106781,a=.707106781):(n=Math.sqrt(e),r=x/n,a=v/n):o>y?o<i?(n=.707106781,r=0,a=.707106781):(r=Math.sqrt(o),n=x/r,a=b/r):y<i?(n=.707106781,r=.707106781,a=0):(a=Math.sqrt(y),n=v/a,r=b/a),this.set(n,r,a,t),this}let y=Math.sqrt((m-p)*(m-p)+(u-f)*(u-f)+(h-l)*(h-l));return Math.abs(y)<.001&&(y=1),this.x=(m-p)/y,this.y=(u-f)/y,this.z=(h-l)/y,this.w=Math.acos((c+d+g-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}function qn(e,t,n){this.width=e,this.height=t,this.scissor=new Xn(0,0,e,t),this.scissorTest=!1,this.viewport=new Xn(0,0,e,t),n=n||{},this.texture=new Vn(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.image={},this.texture.image.width=e,this.texture.image.height=t,this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:ve,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null}function Yn(e,t,n){qn.call(this,e,t,n),this.samples=4}qn.prototype=Object.assign(Object.create(Pn.prototype),{constructor:qn,isWebGLRenderTarget:!0,setSize:function(e,t){this.width===e&&this.height===t||(this.width=e,this.height=t,this.texture.image.width=e,this.texture.image.height=t,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.width=e.width,this.height=e.height,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Yn.prototype=Object.assign(Object.create(qn.prototype),{constructor:Yn,isWebGLMultisampleRenderTarget:!0,copy:function(e){return qn.prototype.copy.call(this,e),this.samples=e.samples,this}});class Kn{constructor(e=0,t=0,n=0,r=1){Object.defineProperty(this,"isQuaternion",{value:!0}),this._x=e,this._y=t,this._z=n,this._w=r}static slerp(e,t,n,r){return n.copy(e).slerp(t,r)}static slerpFlat(e,t,n,r,a,i,s){let o=n[r+0],c=n[r+1],l=n[r+2],u=n[r+3];const h=a[i+0],d=a[i+1],p=a[i+2],f=a[i+3];if(u!==f||o!==h||c!==d||l!==p){let e=1-s;const t=o*h+c*d+l*p+u*f,n=t>=0?1:-1,r=1-t*t;if(r>Number.EPSILON){const a=Math.sqrt(r),i=Math.atan2(a,t*n);e=Math.sin(e*i)/a,s=Math.sin(s*i)/a}const a=s*n;if(o=o*e+h*a,c=c*e+d*a,l=l*e+p*a,u=u*e+f*a,e===1-s){const e=1/Math.sqrt(o*o+c*c+l*l+u*u);o*=e,c*=e,l*=e,u*=e}}e[t]=o,e[t+1]=c,e[t+2]=l,e[t+3]=u}static multiplyQuaternionsFlat(e,t,n,r,a,i){const s=n[r],o=n[r+1],c=n[r+2],l=n[r+3],u=a[i],h=a[i+1],d=a[i+2],p=a[i+3];return e[t]=s*p+l*u+o*d-c*h,e[t+1]=o*p+l*h+c*u-s*d,e[t+2]=c*p+l*d+s*h-o*u,e[t+3]=l*p-s*u-o*h-c*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!e||!e.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=e._x,r=e._y,a=e._z,i=e._order,s=Math.cos,o=Math.sin,c=s(n/2),l=s(r/2),u=s(a/2),h=o(n/2),d=o(r/2),p=o(a/2);switch(i){case"XYZ":this._x=h*l*u+c*d*p,this._y=c*d*u-h*l*p,this._z=c*l*p+h*d*u,this._w=c*l*u-h*d*p;break;case"YXZ":this._x=h*l*u+c*d*p,this._y=c*d*u-h*l*p,this._z=c*l*p-h*d*u,this._w=c*l*u+h*d*p;break;case"ZXY":this._x=h*l*u-c*d*p,this._y=c*d*u+h*l*p,this._z=c*l*p+h*d*u,this._w=c*l*u-h*d*p;break;case"ZYX":this._x=h*l*u-c*d*p,this._y=c*d*u+h*l*p,this._z=c*l*p-h*d*u,this._w=c*l*u+h*d*p;break;case"YZX":this._x=h*l*u+c*d*p,this._y=c*d*u+h*l*p,this._z=c*l*p-h*d*u,this._w=c*l*u-h*d*p;break;case"XZY":this._x=h*l*u-c*d*p,this._y=c*d*u-h*l*p,this._z=c*l*p+h*d*u,this._w=c*l*u+h*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+i)}return!1!==t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,r=Math.sin(n);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],r=t[4],a=t[8],i=t[1],s=t[5],o=t[9],c=t[2],l=t[6],u=t[10],h=n+s+u;if(h>0){const e=.5/Math.sqrt(h+1);this._w=.25/e,this._x=(l-o)*e,this._y=(a-c)*e,this._z=(i-r)*e}else if(n>s&&n>u){const e=2*Math.sqrt(1+n-s-u);this._w=(l-o)/e,this._x=.25*e,this._y=(r+i)/e,this._z=(a+c)/e}else if(s>u){const e=2*Math.sqrt(1+s-n-u);this._w=(a-c)/e,this._x=(r+i)/e,this._y=.25*e,this._z=(o+l)/e}else{const e=2*Math.sqrt(1+u-n-s);this._w=(i-r)/e,this._x=(a+c)/e,this._y=(o+l)/e,this._z=.25*e}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<1e-6?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs($n.clamp(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(0===n)return this;const r=Math.min(1,t/n);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,r=e._y,a=e._z,i=e._w,s=t._x,o=t._y,c=t._z,l=t._w;return this._x=n*l+i*s+r*c-a*o,this._y=r*l+i*o+a*s-n*c,this._z=a*l+i*c+n*o-r*s,this._w=i*l-n*s-r*o-a*c,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);const n=this._x,r=this._y,a=this._z,i=this._w;let s=i*e._w+n*e._x+r*e._y+a*e._z;if(s<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,s=-s):this.copy(e),s>=1)return this._w=i,this._x=n,this._y=r,this._z=a,this;const o=1-s*s;if(o<=Number.EPSILON){const e=1-t;return this._w=e*i+t*this._w,this._x=e*n+t*this._x,this._y=e*r+t*this._y,this._z=e*a+t*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(o),l=Math.atan2(c,s),u=Math.sin((1-t)*l)/c,h=Math.sin(t*l)/c;return this._w=i*u+this._w*h,this._x=n*u+this._x*h,this._y=r*u+this._y*h,this._z=a*u+this._z*h,this._onChangeCallback(),this}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}class Zn{constructor(e=0,t=0,n=0){Object.defineProperty(this,"isVector3",{value:!0}),this.x=e,this.y=t,this.z=n}set(e,t,n){return void 0===n&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(Qn.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Qn.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,r=this.z,a=e.elements;return this.x=a[0]*t+a[3]*n+a[6]*r,this.y=a[1]*t+a[4]*n+a[7]*r,this.z=a[2]*t+a[5]*n+a[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,r=this.z,a=e.elements,i=1/(a[3]*t+a[7]*n+a[11]*r+a[15]);return this.x=(a[0]*t+a[4]*n+a[8]*r+a[12])*i,this.y=(a[1]*t+a[5]*n+a[9]*r+a[13])*i,this.z=(a[2]*t+a[6]*n+a[10]*r+a[14])*i,this}applyQuaternion(e){const t=this.x,n=this.y,r=this.z,a=e.x,i=e.y,s=e.z,o=e.w,c=o*t+i*r-s*n,l=o*n+s*t-a*r,u=o*r+a*n-i*t,h=-a*t-i*n-s*r;return this.x=c*o+h*-a+l*-s-u*-i,this.y=l*o+h*-i+u*-a-c*-s,this.z=u*o+h*-s+c*-i-l*-a,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,r=this.z,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*r,this.y=a[1]*t+a[5]*n+a[9]*r,this.z=a[2]*t+a[6]*n+a[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e,t){return void 0!==t?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,r=e.y,a=e.z,i=t.x,s=t.y,o=t.z;return this.x=r*o-a*s,this.y=a*i-n*o,this.z=n*s-r*i,this}projectOnVector(e){const t=e.lengthSq();if(0===t)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Jn.copy(this).projectOnVector(e),this.sub(Jn)}reflect(e){return this.sub(Jn.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;const n=this.dot(e)/t;return Math.acos($n.clamp(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,r=this.z-e.z;return t*t+n*n+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const r=Math.sin(t)*e;return this.x=r*Math.sin(n),this.y=Math.cos(t)*e,this.z=r*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}const Jn=new Zn,Qn=new Kn;class er{constructor(e,t){Object.defineProperty(this,"isBox3",{value:!0}),this.min=void 0!==e?e:new Zn(1/0,1/0,1/0),this.max=void 0!==t?t:new Zn(-1/0,-1/0,-1/0)}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,n=1/0,r=1/0,a=-1/0,i=-1/0,s=-1/0;for(let o=0,c=e.length;o<c;o+=3){const c=e[o],l=e[o+1],u=e[o+2];c<t&&(t=c),l<n&&(n=l),u<r&&(r=u),c>a&&(a=c),l>i&&(i=l),u>s&&(s=u)}return this.min.set(t,n,r),this.max.set(a,i,s),this}setFromBufferAttribute(e){let t=1/0,n=1/0,r=1/0,a=-1/0,i=-1/0,s=-1/0;for(let o=0,c=e.count;o<c;o++){const c=e.getX(o),l=e.getY(o),u=e.getZ(o);c<t&&(t=c),l<n&&(n=l),u<r&&(r=u),c>a&&(a=c),l>i&&(i=l),u>s&&(s=u)}return this.min.set(t,n,r),this.max.set(a,i,s),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=rr.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e){return this.makeEmpty(),this.expandByObject(e)}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return void 0===e&&(console.warn("THREE.Box3: .getCenter() target is now required"),e=new Zn),this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return void 0===e&&(console.warn("THREE.Box3: .getSize() target is now required"),e=new Zn),this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e){e.updateWorldMatrix(!1,!1);const t=e.geometry;void 0!==t&&(null===t.boundingBox&&t.computeBoundingBox(),ar.copy(t.boundingBox),ar.applyMatrix4(e.matrixWorld),this.union(ar));const n=e.children;for(let e=0,t=n.length;e<t;e++)this.expandByObject(n[e]);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return void 0===t&&(console.warn("THREE.Box3: .getParameter() target is now required"),t=new Zn),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,rr),rr.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(hr),dr.subVectors(this.max,hr),ir.subVectors(e.a,hr),sr.subVectors(e.b,hr),or.subVectors(e.c,hr),cr.subVectors(sr,ir),lr.subVectors(or,sr),ur.subVectors(ir,or);let t=[0,-cr.z,cr.y,0,-lr.z,lr.y,0,-ur.z,ur.y,cr.z,0,-cr.x,lr.z,0,-lr.x,ur.z,0,-ur.x,-cr.y,cr.x,0,-lr.y,lr.x,0,-ur.y,ur.x,0];return!!tr(t,ir,sr,or,dr)&&(t=[1,0,0,0,1,0,0,0,1],!!tr(t,ir,sr,or,dr)&&(pr.crossVectors(cr,lr),t=[pr.x,pr.y,pr.z],tr(t,ir,sr,or,dr)))}clampPoint(e,t){return void 0===t&&(console.warn("THREE.Box3: .clampPoint() target is now required"),t=new Zn),t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return rr.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return void 0===e&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(e.center),e.radius=.5*this.getSize(rr).length(),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(nr[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),nr[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),nr[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),nr[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),nr[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),nr[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),nr[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),nr[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(nr)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}function tr(e,t,n,r,a){for(let i=0,s=e.length-3;i<=s;i+=3){fr.fromArray(e,i);const s=a.x*Math.abs(fr.x)+a.y*Math.abs(fr.y)+a.z*Math.abs(fr.z),o=t.dot(fr),c=n.dot(fr),l=r.dot(fr);if(Math.max(-Math.max(o,c,l),Math.min(o,c,l))>s)return!1}return!0}const nr=[new Zn,new Zn,new Zn,new Zn,new Zn,new Zn,new Zn,new Zn],rr=new Zn,ar=new er,ir=new Zn,sr=new Zn,or=new Zn,cr=new Zn,lr=new Zn,ur=new Zn,hr=new Zn,dr=new Zn,pr=new Zn,fr=new Zn,mr=new er;class gr{constructor(e,t){this.center=void 0!==e?e:new Zn,this.radius=void 0!==t?t:-1}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;void 0!==t?n.copy(t):mr.setFromPoints(e).getCenter(n);let r=0;for(let t=0,a=e.length;t<a;t++)r=Math.max(r,n.distanceToSquared(e[t]));return this.radius=Math.sqrt(r),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return void 0===t&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),t=new Zn),t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return void 0===e&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),e=new er),this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}}const yr=new Zn,xr=new Zn,vr=new Zn,br=new Zn,wr=new Zn,_r=new Zn,Tr=new Zn;class Sr{constructor(e,t){this.origin=void 0!==e?e:new Zn,this.direction=void 0!==t?t:new Zn(0,0,-1)}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return void 0===t&&(console.warn("THREE.Ray: .at() target is now required"),t=new Zn),t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,yr)),this}closestPointToPoint(e,t){void 0===t&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),t=new Zn),t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=yr.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(yr.copy(this.direction).multiplyScalar(t).add(this.origin),yr.distanceToSquared(e))}distanceSqToSegment(e,t,n,r){xr.copy(e).add(t).multiplyScalar(.5),vr.copy(t).sub(e).normalize(),br.copy(this.origin).sub(xr);const a=.5*e.distanceTo(t),i=-this.direction.dot(vr),s=br.dot(this.direction),o=-br.dot(vr),c=br.lengthSq(),l=Math.abs(1-i*i);let u,h,d,p;if(l>0)if(u=i*o-s,h=i*s-o,p=a*l,u>=0)if(h>=-p)if(h<=p){const e=1/l;u*=e,h*=e,d=u*(u+i*h+2*s)+h*(i*u+h+2*o)+c}else h=a,u=Math.max(0,-(i*h+s)),d=-u*u+h*(h+2*o)+c;else h=-a,u=Math.max(0,-(i*h+s)),d=-u*u+h*(h+2*o)+c;else h<=-p?(u=Math.max(0,-(-i*a+s)),h=u>0?-a:Math.min(Math.max(-a,-o),a),d=-u*u+h*(h+2*o)+c):h<=p?(u=0,h=Math.min(Math.max(-a,-o),a),d=h*(h+2*o)+c):(u=Math.max(0,-(i*a+s)),h=u>0?a:Math.min(Math.max(-a,-o),a),d=-u*u+h*(h+2*o)+c);else h=i>0?-a:a,u=Math.max(0,-(i*h+s)),d=-u*u+h*(h+2*o)+c;return n&&n.copy(this.direction).multiplyScalar(u).add(this.origin),r&&r.copy(vr).multiplyScalar(h).add(xr),d}intersectSphere(e,t){yr.subVectors(e.center,this.origin);const n=yr.dot(this.direction),r=yr.dot(yr)-n*n,a=e.radius*e.radius;if(r>a)return null;const i=Math.sqrt(a-r),s=n-i,o=n+i;return s<0&&o<0?null:s<0?this.at(o,t):this.at(s,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return null===n?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,r,a,i,s,o;const c=1/this.direction.x,l=1/this.direction.y,u=1/this.direction.z,h=this.origin;return c>=0?(n=(e.min.x-h.x)*c,r=(e.max.x-h.x)*c):(n=(e.max.x-h.x)*c,r=(e.min.x-h.x)*c),l>=0?(a=(e.min.y-h.y)*l,i=(e.max.y-h.y)*l):(a=(e.max.y-h.y)*l,i=(e.min.y-h.y)*l),n>i||a>r?null:((a>n||n!=n)&&(n=a),(i<r||r!=r)&&(r=i),u>=0?(s=(e.min.z-h.z)*u,o=(e.max.z-h.z)*u):(s=(e.max.z-h.z)*u,o=(e.min.z-h.z)*u),n>o||s>r?null:((s>n||n!=n)&&(n=s),(o<r||r!=r)&&(r=o),r<0?null:this.at(n>=0?n:r,t)))}intersectsBox(e){return null!==this.intersectBox(e,yr)}intersectTriangle(e,t,n,r,a){wr.subVectors(t,e),_r.subVectors(n,e),Tr.crossVectors(wr,_r);let i,s=this.direction.dot(Tr);if(s>0){if(r)return null;i=1}else{if(!(s<0))return null;i=-1,s=-s}br.subVectors(this.origin,e);const o=i*this.direction.dot(_r.crossVectors(br,_r));if(o<0)return null;const c=i*this.direction.dot(wr.cross(br));if(c<0)return null;if(o+c>s)return null;const l=-i*br.dot(Tr);return l<0?null:this.at(l/s,a)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}}class Er{constructor(){Object.defineProperty(this,"isMatrix4",{value:!0}),this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,r,a,i,s,o,c,l,u,h,d,p,f,m){const g=this.elements;return g[0]=e,g[4]=t,g[8]=n,g[12]=r,g[1]=a,g[5]=i,g[9]=s,g[13]=o,g[2]=c,g[6]=l,g[10]=u,g[14]=h,g[3]=d,g[7]=p,g[11]=f,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Er).fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,r=1/Mr.setFromMatrixColumn(e,0).length(),a=1/Mr.setFromMatrixColumn(e,1).length(),i=1/Mr.setFromMatrixColumn(e,2).length();return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=0,t[4]=n[4]*a,t[5]=n[5]*a,t[6]=n[6]*a,t[7]=0,t[8]=n[8]*i,t[9]=n[9]*i,t[10]=n[10]*i,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements,n=e.x,r=e.y,a=e.z,i=Math.cos(n),s=Math.sin(n),o=Math.cos(r),c=Math.sin(r),l=Math.cos(a),u=Math.sin(a);if("XYZ"===e.order){const e=i*l,n=i*u,r=s*l,a=s*u;t[0]=o*l,t[4]=-o*u,t[8]=c,t[1]=n+r*c,t[5]=e-a*c,t[9]=-s*o,t[2]=a-e*c,t[6]=r+n*c,t[10]=i*o}else if("YXZ"===e.order){const e=o*l,n=o*u,r=c*l,a=c*u;t[0]=e+a*s,t[4]=r*s-n,t[8]=i*c,t[1]=i*u,t[5]=i*l,t[9]=-s,t[2]=n*s-r,t[6]=a+e*s,t[10]=i*o}else if("ZXY"===e.order){const e=o*l,n=o*u,r=c*l,a=c*u;t[0]=e-a*s,t[4]=-i*u,t[8]=r+n*s,t[1]=n+r*s,t[5]=i*l,t[9]=a-e*s,t[2]=-i*c,t[6]=s,t[10]=i*o}else if("ZYX"===e.order){const e=i*l,n=i*u,r=s*l,a=s*u;t[0]=o*l,t[4]=r*c-n,t[8]=e*c+a,t[1]=o*u,t[5]=a*c+e,t[9]=n*c-r,t[2]=-c,t[6]=s*o,t[10]=i*o}else if("YZX"===e.order){const e=i*o,n=i*c,r=s*o,a=s*c;t[0]=o*l,t[4]=a-e*u,t[8]=r*u+n,t[1]=u,t[5]=i*l,t[9]=-s*l,t[2]=-c*l,t[6]=n*u+r,t[10]=e-a*u}else if("XZY"===e.order){const e=i*o,n=i*c,r=s*o,a=s*c;t[0]=o*l,t[4]=-u,t[8]=c*l,t[1]=e*u+a,t[5]=i*l,t[9]=n*u-r,t[2]=r*u-n,t[6]=s*l,t[10]=a*u+e}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Nr,e,Cr)}lookAt(e,t,n){const r=this.elements;return Rr.subVectors(e,t),0===Rr.lengthSq()&&(Rr.z=1),Rr.normalize(),Ar.crossVectors(n,Rr),0===Ar.lengthSq()&&(1===Math.abs(n.z)?Rr.x+=1e-4:Rr.z+=1e-4,Rr.normalize(),Ar.crossVectors(n,Rr)),Ar.normalize(),kr.crossVectors(Rr,Ar),r[0]=Ar.x,r[4]=kr.x,r[8]=Rr.x,r[1]=Ar.y,r[5]=kr.y,r[9]=Rr.y,r[2]=Ar.z,r[6]=kr.z,r[10]=Rr.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,r=t.elements,a=this.elements,i=n[0],s=n[4],o=n[8],c=n[12],l=n[1],u=n[5],h=n[9],d=n[13],p=n[2],f=n[6],m=n[10],g=n[14],y=n[3],x=n[7],v=n[11],b=n[15],w=r[0],_=r[4],T=r[8],S=r[12],E=r[1],M=r[5],I=r[9],N=r[13],C=r[2],A=r[6],k=r[10],R=r[14],D=r[3],L=r[7],O=r[11],P=r[15];return a[0]=i*w+s*E+o*C+c*D,a[4]=i*_+s*M+o*A+c*L,a[8]=i*T+s*I+o*k+c*O,a[12]=i*S+s*N+o*R+c*P,a[1]=l*w+u*E+h*C+d*D,a[5]=l*_+u*M+h*A+d*L,a[9]=l*T+u*I+h*k+d*O,a[13]=l*S+u*N+h*R+d*P,a[2]=p*w+f*E+m*C+g*D,a[6]=p*_+f*M+m*A+g*L,a[10]=p*T+f*I+m*k+g*O,a[14]=p*S+f*N+m*R+g*P,a[3]=y*w+x*E+v*C+b*D,a[7]=y*_+x*M+v*A+b*L,a[11]=y*T+x*I+v*k+b*O,a[15]=y*S+x*N+v*R+b*P,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],r=e[8],a=e[12],i=e[1],s=e[5],o=e[9],c=e[13],l=e[2],u=e[6],h=e[10],d=e[14];return e[3]*(+a*o*u-r*c*u-a*s*h+n*c*h+r*s*d-n*o*d)+e[7]*(+t*o*d-t*c*h+a*i*h-r*i*d+r*c*l-a*o*l)+e[11]*(+t*c*u-t*s*d-a*i*u+n*i*d+a*s*l-n*c*l)+e[15]*(-r*s*l-t*o*u+t*s*h+r*i*u-n*i*h+n*o*l)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],a=e[3],i=e[4],s=e[5],o=e[6],c=e[7],l=e[8],u=e[9],h=e[10],d=e[11],p=e[12],f=e[13],m=e[14],g=e[15],y=u*m*c-f*h*c+f*o*d-s*m*d-u*o*g+s*h*g,x=p*h*c-l*m*c-p*o*d+i*m*d+l*o*g-i*h*g,v=l*f*c-p*u*c+p*s*d-i*f*d-l*s*g+i*u*g,b=p*u*o-l*f*o-p*s*h+i*f*h+l*s*m-i*u*m,w=t*y+n*x+r*v+a*b;if(0===w)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const _=1/w;return e[0]=y*_,e[1]=(f*h*a-u*m*a-f*r*d+n*m*d+u*r*g-n*h*g)*_,e[2]=(s*m*a-f*o*a+f*r*c-n*m*c-s*r*g+n*o*g)*_,e[3]=(u*o*a-s*h*a-u*r*c+n*h*c+s*r*d-n*o*d)*_,e[4]=x*_,e[5]=(l*m*a-p*h*a+p*r*d-t*m*d-l*r*g+t*h*g)*_,e[6]=(p*o*a-i*m*a-p*r*c+t*m*c+i*r*g-t*o*g)*_,e[7]=(i*h*a-l*o*a+l*r*c-t*h*c-i*r*d+t*o*d)*_,e[8]=v*_,e[9]=(p*u*a-l*f*a-p*n*d+t*f*d+l*n*g-t*u*g)*_,e[10]=(i*f*a-p*s*a+p*n*c-t*f*c-i*n*g+t*s*g)*_,e[11]=(l*s*a-i*u*a-l*n*c+t*u*c+i*n*d-t*s*d)*_,e[12]=b*_,e[13]=(l*f*r-p*u*r+p*n*h-t*f*h-l*n*m+t*u*m)*_,e[14]=(p*s*r-i*f*r-p*n*o+t*f*o+i*n*m-t*s*m)*_,e[15]=(i*u*r-l*s*r+l*n*o-t*u*o-i*n*h+t*s*h)*_,this}scale(e){const t=this.elements,n=e.x,r=e.y,a=e.z;return t[0]*=n,t[4]*=r,t[8]*=a,t[1]*=n,t[5]*=r,t[9]*=a,t[2]*=n,t[6]*=r,t[10]*=a,t[3]*=n,t[7]*=r,t[11]*=a,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,r))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),r=Math.sin(t),a=1-n,i=e.x,s=e.y,o=e.z,c=a*i,l=a*s;return this.set(c*i+n,c*s-r*o,c*o+r*s,0,c*s+r*o,l*s+n,l*o-r*i,0,c*o-r*s,l*o+r*i,a*o*o+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n){return this.set(1,t,n,0,e,1,n,0,e,t,1,0,0,0,0,1),this}compose(e,t,n){const r=this.elements,a=t._x,i=t._y,s=t._z,o=t._w,c=a+a,l=i+i,u=s+s,h=a*c,d=a*l,p=a*u,f=i*l,m=i*u,g=s*u,y=o*c,x=o*l,v=o*u,b=n.x,w=n.y,_=n.z;return r[0]=(1-(f+g))*b,r[1]=(d+v)*b,r[2]=(p-x)*b,r[3]=0,r[4]=(d-v)*w,r[5]=(1-(h+g))*w,r[6]=(m+y)*w,r[7]=0,r[8]=(p+x)*_,r[9]=(m-y)*_,r[10]=(1-(h+f))*_,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,n){const r=this.elements;let a=Mr.set(r[0],r[1],r[2]).length();const i=Mr.set(r[4],r[5],r[6]).length(),s=Mr.set(r[8],r[9],r[10]).length();this.determinant()<0&&(a=-a),e.x=r[12],e.y=r[13],e.z=r[14],Ir.copy(this);const o=1/a,c=1/i,l=1/s;return Ir.elements[0]*=o,Ir.elements[1]*=o,Ir.elements[2]*=o,Ir.elements[4]*=c,Ir.elements[5]*=c,Ir.elements[6]*=c,Ir.elements[8]*=l,Ir.elements[9]*=l,Ir.elements[10]*=l,t.setFromRotationMatrix(Ir),n.x=a,n.y=i,n.z=s,this}makePerspective(e,t,n,r,a,i){void 0===i&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const s=this.elements,o=2*a/(t-e),c=2*a/(n-r),l=(t+e)/(t-e),u=(n+r)/(n-r),h=-(i+a)/(i-a),d=-2*i*a/(i-a);return s[0]=o,s[4]=0,s[8]=l,s[12]=0,s[1]=0,s[5]=c,s[9]=u,s[13]=0,s[2]=0,s[6]=0,s[10]=h,s[14]=d,s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(e,t,n,r,a,i){const s=this.elements,o=1/(t-e),c=1/(n-r),l=1/(i-a),u=(t+e)*o,h=(n+r)*c,d=(i+a)*l;return s[0]=2*o,s[4]=0,s[8]=0,s[12]=-u,s[1]=0,s[5]=2*c,s[9]=0,s[13]=-h,s[2]=0,s[6]=0,s[10]=-2*l,s[14]=-d,s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let e=0;e<16;e++)if(t[e]!==n[e])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const Mr=new Zn,Ir=new Er,Nr=new Zn(0,0,0),Cr=new Zn(1,1,1),Ar=new Zn,kr=new Zn,Rr=new Zn;class Dr{constructor(e=0,t=0,n=0,r=Dr.DefaultOrder){Object.defineProperty(this,"isEuler",{value:!0}),this._x=e,this._y=t,this._z=n,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._order=r||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t,n){const r=$n.clamp,a=e.elements,i=a[0],s=a[4],o=a[8],c=a[1],l=a[5],u=a[9],h=a[2],d=a[6],p=a[10];switch(t=t||this._order){case"XYZ":this._y=Math.asin(r(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-u,p),this._z=Math.atan2(-s,i)):(this._x=Math.atan2(d,l),this._z=0);break;case"YXZ":this._x=Math.asin(-r(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(o,p),this._z=Math.atan2(c,l)):(this._y=Math.atan2(-h,i),this._z=0);break;case"ZXY":this._x=Math.asin(r(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-h,p),this._z=Math.atan2(-s,l)):(this._y=0,this._z=Math.atan2(c,i));break;case"ZYX":this._y=Math.asin(-r(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(d,p),this._z=Math.atan2(c,i)):(this._x=0,this._z=Math.atan2(-s,l));break;case"YZX":this._z=Math.asin(r(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-u,l),this._y=Math.atan2(-h,i)):(this._x=0,this._y=Math.atan2(o,p));break;case"XZY":this._z=Math.asin(-r(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(d,l),this._y=Math.atan2(o,i)):(this._x=Math.atan2(-u,p),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!1!==n&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Lr.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Lr,t,n)}setFromVector3(e,t){return this.set(e.x,e.y,e.z,t||this._order)}reorder(e){return Or.setFromEuler(this),this.setFromQuaternion(Or,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}toVector3(e){return e?e.set(this._x,this._y,this._z):new Zn(this._x,this._y,this._z)}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}Dr.DefaultOrder="XYZ",Dr.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];const Lr=new Er,Or=new Kn;class Pr{constructor(){this.mask=1}set(e){this.mask=1<<e|0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return 0!=(this.mask&e.mask)}}let Fr=0;const Br=new Zn,$r=new Kn,Ur=new Er,zr=new Zn,Gr=new Zn,Hr=new Zn,Wr=new Kn,Vr=new Zn(1,0,0),jr=new Zn(0,1,0),Xr=new Zn(0,0,1),qr={type:"added"},Yr={type:"removed"};function Kr(){Object.defineProperty(this,"id",{value:Fr++}),this.uuid=$n.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Kr.DefaultUp.clone();const e=new Zn,t=new Dr,n=new Kn,r=new Zn(1,1,1);t._onChange((function(){n.setFromEuler(t,!1)})),n._onChange((function(){t.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new Er},normalMatrix:{value:new zn}}),this.matrix=new Er,this.matrixWorld=new Er,this.matrixAutoUpdate=Kr.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Pr,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}Kr.DefaultUp=new Zn(0,1,0),Kr.DefaultMatrixAutoUpdate=!0,Kr.prototype=Object.assign(Object.create(Pn.prototype),{constructor:Kr,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(e){return this.quaternion.premultiply(e),this},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(e,t){return $r.setFromAxisAngle(e,t),this.quaternion.multiply($r),this},rotateOnWorldAxis:function(e,t){return $r.setFromAxisAngle(e,t),this.quaternion.premultiply($r),this},rotateX:function(e){return this.rotateOnAxis(Vr,e)},rotateY:function(e){return this.rotateOnAxis(jr,e)},rotateZ:function(e){return this.rotateOnAxis(Xr,e)},translateOnAxis:function(e,t){return Br.copy(e).applyQuaternion(this.quaternion),this.position.add(Br.multiplyScalar(t)),this},translateX:function(e){return this.translateOnAxis(Vr,e)},translateY:function(e){return this.translateOnAxis(jr,e)},translateZ:function(e){return this.translateOnAxis(Xr,e)},localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(e){return e.applyMatrix4(Ur.copy(this.matrixWorld).invert())},lookAt:function(e,t,n){e.isVector3?zr.copy(e):zr.set(e,t,n);const r=this.parent;this.updateWorldMatrix(!0,!1),Gr.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ur.lookAt(Gr,zr,this.up):Ur.lookAt(zr,Gr,this.up),this.quaternion.setFromRotationMatrix(Ur),r&&(Ur.extractRotation(r.matrixWorld),$r.setFromRotationMatrix(Ur),this.quaternion.premultiply($r.invert()))},add:function(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(qr)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)},remove:function(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}const t=this.children.indexOf(e);return-1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Yr)),this},clear:function(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(Yr)}return this.children.length=0,this},attach:function(e){return this.updateWorldMatrix(!0,!1),Ur.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),Ur.multiply(e.parent.matrixWorld)),e.applyMatrix4(Ur),e.updateWorldMatrix(!1,!1),this.add(e),this},getObjectById:function(e){return this.getObjectByProperty("id",e)},getObjectByName:function(e){return this.getObjectByProperty("name",e)},getObjectByProperty:function(e,t){if(this[e]===t)return this;for(let n=0,r=this.children.length;n<r;n++){const r=this.children[n].getObjectByProperty(e,t);if(void 0!==r)return r}},getWorldPosition:function(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),e=new Zn),this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),e=new Kn),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Gr,e,Hr),e},getWorldScale:function(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),e=new Zn),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Gr,Wr,e),e},getWorldDirection:function(e){void 0===e&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),e=new Zn),this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()},raycast:function(){},traverse:function(e){e(this);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverse(e)},traverseVisible:function(e){if(!1===this.visible)return;e(this);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverseVisible(e)},traverseAncestors:function(e){const t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].updateMatrixWorld(e)},updateWorldMatrix:function(e,t){const n=this.parent;if(!0===e&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){const e=this.children;for(let t=0,n=e.length;t<n;t++)e[t].updateWorldMatrix(!1,!0)}},toJSON:function(e){const t=void 0===e||"string"==typeof e,n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const r={};function a(t,n){return void 0===t[n.uuid]&&(t[n.uuid]=n.toJSON(e)),n.uuid}if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),!0===this.castShadow&&(r.castShadow=!0),!0===this.receiveShadow&&(r.receiveShadow=!0),!1===this.visible&&(r.visible=!1),!1===this.frustumCulled&&(r.frustumCulled=!1),0!==this.renderOrder&&(r.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON()),this.isMesh||this.isLine||this.isPoints){r.geometry=a(e.geometries,this.geometry);const t=this.geometry.parameters;if(void 0!==t&&void 0!==t.shapes){const n=t.shapes;if(Array.isArray(n))for(let t=0,r=n.length;t<r;t++){const r=n[t];a(e.shapes,r)}else a(e.shapes,n)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(a(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const t=[];for(let n=0,r=this.material.length;n<r;n++)t.push(a(e.materials,this.material[n]));r.material=t}else r.material=a(e.materials,this.material);if(this.children.length>0){r.children=[];for(let t=0;t<this.children.length;t++)r.children.push(this.children[t].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let t=0;t<this.animations.length;t++){const n=this.animations[t];r.animations.push(a(e.animations,n))}}if(t){const t=i(e.geometries),r=i(e.materials),a=i(e.textures),s=i(e.images),o=i(e.shapes),c=i(e.skeletons),l=i(e.animations);t.length>0&&(n.geometries=t),r.length>0&&(n.materials=r),a.length>0&&(n.textures=a),s.length>0&&(n.images=s),o.length>0&&(n.shapes=o),c.length>0&&(n.skeletons=c),l.length>0&&(n.animations=l)}return n.object=r,n;function i(e){const t=[];for(const n in e){const r=e[n];delete r.metadata,t.push(r)}return t}},clone:function(e){return(new this.constructor).copy(this,e)},copy:function(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let t=0;t<e.children.length;t++){const n=e.children[t];this.add(n.clone())}return this}});const Zr=new Zn,Jr=new Zn,Qr=new zn;class ea{constructor(e,t){Object.defineProperty(this,"isPlane",{value:!0}),this.normal=void 0!==e?e:new Zn(1,0,0),this.constant=void 0!==t?t:0}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,r){return this.normal.set(e,t,n),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const r=Zr.subVectors(n,t).cross(Jr.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return void 0===t&&(console.warn("THREE.Plane: .projectPoint() target is now required"),t=new Zn),t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){void 0===t&&(console.warn("THREE.Plane: .intersectLine() target is now required"),t=new Zn);const n=e.delta(Zr),r=this.normal.dot(n);if(0===r)return 0===this.distanceToPoint(e.start)?t.copy(e.start):void 0;const a=-(e.start.dot(this.normal)+this.constant)/r;return a<0||a>1?void 0:t.copy(n).multiplyScalar(a).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return void 0===e&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),e=new Zn),e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||Qr.getNormalMatrix(e),r=this.coplanarPoint(Zr).applyMatrix4(e),a=this.normal.applyMatrix3(n).normalize();return this.constant=-r.dot(a),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}}const ta=new Zn,na=new Zn,ra=new Zn,aa=new Zn,ia=new Zn,sa=new Zn,oa=new Zn,ca=new Zn,la=new Zn,ua=new Zn;class ha{constructor(e,t,n){this.a=void 0!==e?e:new Zn,this.b=void 0!==t?t:new Zn,this.c=void 0!==n?n:new Zn}static getNormal(e,t,n,r){void 0===r&&(console.warn("THREE.Triangle: .getNormal() target is now required"),r=new Zn),r.subVectors(n,t),ta.subVectors(e,t),r.cross(ta);const a=r.lengthSq();return a>0?r.multiplyScalar(1/Math.sqrt(a)):r.set(0,0,0)}static getBarycoord(e,t,n,r,a){ta.subVectors(r,t),na.subVectors(n,t),ra.subVectors(e,t);const i=ta.dot(ta),s=ta.dot(na),o=ta.dot(ra),c=na.dot(na),l=na.dot(ra),u=i*c-s*s;if(void 0===a&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),a=new Zn),0===u)return a.set(-2,-1,-1);const h=1/u,d=(c*o-s*l)*h,p=(i*l-s*o)*h;return a.set(1-d-p,p,d)}static containsPoint(e,t,n,r){return this.getBarycoord(e,t,n,r,aa),aa.x>=0&&aa.y>=0&&aa.x+aa.y<=1}static getUV(e,t,n,r,a,i,s,o){return this.getBarycoord(e,t,n,r,aa),o.set(0,0),o.addScaledVector(a,aa.x),o.addScaledVector(i,aa.y),o.addScaledVector(s,aa.z),o}static isFrontFacing(e,t,n,r){return ta.subVectors(n,t),na.subVectors(e,t),ta.cross(na).dot(r)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,r){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[r]),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return ta.subVectors(this.c,this.b),na.subVectors(this.a,this.b),.5*ta.cross(na).length()}getMidpoint(e){return void 0===e&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),e=new Zn),e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return ha.getNormal(this.a,this.b,this.c,e)}getPlane(e){return void 0===e&&(console.warn("THREE.Triangle: .getPlane() target is now required"),e=new ea),e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return ha.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,r,a){return ha.getUV(e,this.a,this.b,this.c,t,n,r,a)}containsPoint(e){return ha.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return ha.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){void 0===t&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),t=new Zn);const n=this.a,r=this.b,a=this.c;let i,s;ia.subVectors(r,n),sa.subVectors(a,n),ca.subVectors(e,n);const o=ia.dot(ca),c=sa.dot(ca);if(o<=0&&c<=0)return t.copy(n);la.subVectors(e,r);const l=ia.dot(la),u=sa.dot(la);if(l>=0&&u<=l)return t.copy(r);const h=o*u-l*c;if(h<=0&&o>=0&&l<=0)return i=o/(o-l),t.copy(n).addScaledVector(ia,i);ua.subVectors(e,a);const d=ia.dot(ua),p=sa.dot(ua);if(p>=0&&d<=p)return t.copy(a);const f=d*c-o*p;if(f<=0&&c>=0&&p<=0)return s=c/(c-p),t.copy(n).addScaledVector(sa,s);const m=l*p-d*u;if(m<=0&&u-l>=0&&d-p>=0)return oa.subVectors(a,r),s=(u-l)/(u-l+(d-p)),t.copy(r).addScaledVector(oa,s);const g=1/(m+f+h);return i=f*g,s=h*g,t.copy(n).addScaledVector(ia,i).addScaledVector(sa,s)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const da={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},pa={h:0,s:0,l:0},fa={h:0,s:0,l:0};function ma(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+6*(t-e)*(2/3-n):e}function ga(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function ya(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}class xa{constructor(e,t,n){return Object.defineProperty(this,"isColor",{value:!0}),void 0===t&&void 0===n?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this}setRGB(e,t,n){return this.r=e,this.g=t,this.b=n,this}setHSL(e,t,n){if(e=$n.euclideanModulo(e,1),t=$n.clamp(t,0,1),n=$n.clamp(n,0,1),0===t)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+t):n+t-n*t,a=2*n-r;this.r=ma(a,r,e+1/3),this.g=ma(a,r,e),this.b=ma(a,r,e-1/3)}return this}setStyle(e){function t(t){void 0!==t&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let n;if(n=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e)){let e;const r=n[1],a=n[2];switch(r){case"rgb":case"rgba":if(e=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,t(e[4]),this;if(e=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,t(e[4]),this;break;case"hsl":case"hsla":if(e=/^(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){const n=parseFloat(e[1])/360,r=parseInt(e[2],10)/100,a=parseInt(e[3],10)/100;return t(e[4]),this.setHSL(n,r,a)}}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(e)){const e=n[1],t=e.length;if(3===t)return this.r=parseInt(e.charAt(0)+e.charAt(0),16)/255,this.g=parseInt(e.charAt(1)+e.charAt(1),16)/255,this.b=parseInt(e.charAt(2)+e.charAt(2),16)/255,this;if(6===t)return this.r=parseInt(e.charAt(0)+e.charAt(1),16)/255,this.g=parseInt(e.charAt(2)+e.charAt(3),16)/255,this.b=parseInt(e.charAt(4)+e.charAt(5),16)/255,this}return e&&e.length>0?this.setColorName(e):this}setColorName(e){const t=da[e];return void 0!==t?this.setHex(t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copyGammaToLinear(e,t=2){return this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this}copyLinearToGamma(e,t=2){const n=t>0?1/t:1;return this.r=Math.pow(e.r,n),this.g=Math.pow(e.g,n),this.b=Math.pow(e.b,n),this}convertGammaToLinear(e){return this.copyGammaToLinear(this,e),this}convertLinearToGamma(e){return this.copyLinearToGamma(this,e),this}copySRGBToLinear(e){return this.r=ga(e.r),this.g=ga(e.g),this.b=ga(e.b),this}copyLinearToSRGB(e){return this.r=ya(e.r),this.g=ya(e.g),this.b=ya(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(e){void 0===e&&(console.warn("THREE.Color: .getHSL() target is now required"),e={h:0,s:0,l:0});const t=this.r,n=this.g,r=this.b,a=Math.max(t,n,r),i=Math.min(t,n,r);let s,o;const c=(i+a)/2;if(i===a)s=0,o=0;else{const e=a-i;switch(o=c<=.5?e/(a+i):e/(2-a-i),a){case t:s=(n-r)/e+(n<r?6:0);break;case n:s=(r-t)/e+2;break;case r:s=(t-n)/e+4}s/=6}return e.h=s,e.s=o,e.l=c,e}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(e,t,n){return this.getHSL(pa),pa.h+=e,pa.s+=t,pa.l+=n,this.setHSL(pa.h,pa.s,pa.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpHSL(e,t){this.getHSL(pa),e.getHSL(fa);const n=$n.lerp(pa.h,fa.h,t),r=$n.lerp(pa.s,fa.s,t),a=$n.lerp(pa.l,fa.l,t);return this.setHSL(n,r,a),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),!0===e.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}xa.NAMES=da,xa.prototype.r=1,xa.prototype.g=1,xa.prototype.b=1;class va{constructor(e,t,n,r,a,i=0){this.a=e,this.b=t,this.c=n,this.normal=r&&r.isVector3?r:new Zn,this.vertexNormals=Array.isArray(r)?r:[],this.color=a&&a.isColor?a:new xa,this.vertexColors=Array.isArray(a)?a:[],this.materialIndex=i}clone(){return(new this.constructor).copy(this)}copy(e){this.a=e.a,this.b=e.b,this.c=e.c,this.normal.copy(e.normal),this.color.copy(e.color),this.materialIndex=e.materialIndex;for(let t=0,n=e.vertexNormals.length;t<n;t++)this.vertexNormals[t]=e.vertexNormals[t].clone();for(let t=0,n=e.vertexColors.length;t<n;t++)this.vertexColors[t]=e.vertexColors[t].clone();return this}}let ba=0;function wa(){Object.defineProperty(this,"id",{value:ba++}),this.uuid=$n.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=b,this.side=f,this.flatShading=!1,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=L,this.blendDst=O,this.blendEquation=E,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=W,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Sn,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=un,this.stencilZFail=un,this.stencilZPass=un,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}function _a(e){wa.call(this),this.type="MeshBasicMaterial",this.color=new xa(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Y,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(e)}wa.prototype=Object.assign(Object.create(Pn.prototype),{constructor:wa,isMaterial:!0,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(e){if(void 0!==e)for(const t in e){const n=e[t];if(void 0===n){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if("shading"===t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===y;continue}const r=this[t];void 0!==r?r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[t]=n:console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.")}},toJSON:function(e){const t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function r(e){const t=[];for(const n in e){const r=e[n];delete r.metadata,t.push(r)}return t}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(n.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,n.reflectivity=this.reflectivity,n.refractionRatio=this.refractionRatio,void 0!==this.combine&&(n.combine=this.combine),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.size&&(n.size=this.size),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==b&&(n.blending=this.blending),!0===this.flatShading&&(n.flatShading=this.flatShading),this.side!==f&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(n.morphTargets=!0),!0===this.morphNormals&&(n.morphNormals=!0),!0===this.skinning&&(n.skinning=!0),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),t){const t=r(e.textures),a=r(e.images);t.length>0&&(n.textures=t),a.length>0&&(n.images=a)}return n},clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.flatShading=e.flatShading,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(null!==t){const e=t.length;n=new Array(e);for(let r=0;r!==e;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(wa.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),_a.prototype=Object.create(wa.prototype),_a.prototype.constructor=_a,_a.prototype.isMeshBasicMaterial=!0,_a.prototype.copy=function(e){return wa.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this};const Ta=new Zn,Sa=new Un;function Ea(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===n,this.usage=En,this.updateRange={offset:0,count:-1},this.version=0}function Ma(e,t,n){Ea.call(this,new Int8Array(e),t,n)}function Ia(e,t,n){Ea.call(this,new Uint8Array(e),t,n)}function Na(e,t,n){Ea.call(this,new Uint8ClampedArray(e),t,n)}function Ca(e,t,n){Ea.call(this,new Int16Array(e),t,n)}function Aa(e,t,n){Ea.call(this,new Uint16Array(e),t,n)}function ka(e,t,n){Ea.call(this,new Int32Array(e),t,n)}function Ra(e,t,n){Ea.call(this,new Uint32Array(e),t,n)}function Da(e,t,n){Ea.call(this,new Uint16Array(e),t,n)}function La(e,t,n){Ea.call(this,new Float32Array(e),t,n)}function Oa(e,t,n){Ea.call(this,new Float64Array(e),t,n)}Object.defineProperty(Ea.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.assign(Ea.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(e){return this.usage=e,this},copy:function(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this},copyAt:function(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let r=0,a=this.itemSize;r<a;r++)this.array[e+r]=t.array[n+r];return this},copyArray:function(e){return this.array.set(e),this},copyColorsArray:function(e){const t=this.array;let n=0;for(let r=0,a=e.length;r<a;r++){let a=e[r];void 0===a&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",r),a=new xa),t[n++]=a.r,t[n++]=a.g,t[n++]=a.b}return this},copyVector2sArray:function(e){const t=this.array;let n=0;for(let r=0,a=e.length;r<a;r++){let a=e[r];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),a=new Un),t[n++]=a.x,t[n++]=a.y}return this},copyVector3sArray:function(e){const t=this.array;let n=0;for(let r=0,a=e.length;r<a;r++){let a=e[r];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",r),a=new Zn),t[n++]=a.x,t[n++]=a.y,t[n++]=a.z}return this},copyVector4sArray:function(e){const t=this.array;let n=0;for(let r=0,a=e.length;r<a;r++){let a=e[r];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",r),a=new Xn),t[n++]=a.x,t[n++]=a.y,t[n++]=a.z,t[n++]=a.w}return this},applyMatrix3:function(e){if(2===this.itemSize)for(let t=0,n=this.count;t<n;t++)Sa.fromBufferAttribute(this,t),Sa.applyMatrix3(e),this.setXY(t,Sa.x,Sa.y);else if(3===this.itemSize)for(let t=0,n=this.count;t<n;t++)Ta.fromBufferAttribute(this,t),Ta.applyMatrix3(e),this.setXYZ(t,Ta.x,Ta.y,Ta.z);return this},applyMatrix4:function(e){for(let t=0,n=this.count;t<n;t++)Ta.x=this.getX(t),Ta.y=this.getY(t),Ta.z=this.getZ(t),Ta.applyMatrix4(e),this.setXYZ(t,Ta.x,Ta.y,Ta.z);return this},applyNormalMatrix:function(e){for(let t=0,n=this.count;t<n;t++)Ta.x=this.getX(t),Ta.y=this.getY(t),Ta.z=this.getZ(t),Ta.applyNormalMatrix(e),this.setXYZ(t,Ta.x,Ta.y,Ta.z);return this},transformDirection:function(e){for(let t=0,n=this.count;t<n;t++)Ta.x=this.getX(t),Ta.y=this.getY(t),Ta.z=this.getZ(t),Ta.transformDirection(e),this.setXYZ(t,Ta.x,Ta.y,Ta.z);return this},set:function(e,t=0){return this.array.set(e,t),this},getX:function(e){return this.array[e*this.itemSize]},setX:function(e,t){return this.array[e*this.itemSize]=t,this},getY:function(e){return this.array[e*this.itemSize+1]},setY:function(e,t){return this.array[e*this.itemSize+1]=t,this},getZ:function(e){return this.array[e*this.itemSize+2]},setZ:function(e,t){return this.array[e*this.itemSize+2]=t,this},getW:function(e){return this.array[e*this.itemSize+3]},setW:function(e,t){return this.array[e*this.itemSize+3]=t,this},setXY:function(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this},setXYZ:function(e,t,n,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this},setXYZW:function(e,t,n,r,a){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this.array[e+3]=a,this},onUpload:function(e){return this.onUploadCallback=e,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}}),Ma.prototype=Object.create(Ea.prototype),Ma.prototype.constructor=Ma,Ia.prototype=Object.create(Ea.prototype),Ia.prototype.constructor=Ia,Na.prototype=Object.create(Ea.prototype),Na.prototype.constructor=Na,Ca.prototype=Object.create(Ea.prototype),Ca.prototype.constructor=Ca,Aa.prototype=Object.create(Ea.prototype),Aa.prototype.constructor=Aa,ka.prototype=Object.create(Ea.prototype),ka.prototype.constructor=ka,Ra.prototype=Object.create(Ea.prototype),Ra.prototype.constructor=Ra,Da.prototype=Object.create(Ea.prototype),Da.prototype.constructor=Da,Da.prototype.isFloat16BufferAttribute=!0,La.prototype=Object.create(Ea.prototype),La.prototype.constructor=La,Oa.prototype=Object.create(Ea.prototype),Oa.prototype.constructor=Oa;class Pa{constructor(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}computeGroups(e){const t=[];let n,r,a;const i=e.faces;for(r=0;r<i.length;r++){const e=i[r];e.materialIndex!==a&&(a=e.materialIndex,void 0!==n&&(n.count=3*r-n.start,t.push(n)),n={start:3*r,materialIndex:a})}void 0!==n&&(n.count=3*r-n.start,t.push(n)),this.groups=t}fromGeometry(e){const t=e.faces,n=e.vertices,r=e.faceVertexUvs,a=r[0]&&r[0].length>0,i=r[1]&&r[1].length>0,s=e.morphTargets,o=s.length;let c;if(o>0){c=[];for(let e=0;e<o;e++)c[e]={name:s[e].name,data:[]};this.morphTargets.position=c}const l=e.morphNormals,u=l.length;let h;if(u>0){h=[];for(let e=0;e<u;e++)h[e]={name:l[e].name,data:[]};this.morphTargets.normal=h}const d=e.skinIndices,p=e.skinWeights,f=d.length===n.length,m=p.length===n.length;n.length>0&&0===t.length&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(let e=0;e<t.length;e++){const g=t[e];this.vertices.push(n[g.a],n[g.b],n[g.c]);const y=g.vertexNormals;if(3===y.length)this.normals.push(y[0],y[1],y[2]);else{const e=g.normal;this.normals.push(e,e,e)}const x=g.vertexColors;if(3===x.length)this.colors.push(x[0],x[1],x[2]);else{const e=g.color;this.colors.push(e,e,e)}if(!0===a){const t=r[0][e];void 0!==t?this.uvs.push(t[0],t[1],t[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",e),this.uvs.push(new Un,new Un,new Un))}if(!0===i){const t=r[1][e];void 0!==t?this.uvs2.push(t[0],t[1],t[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",e),this.uvs2.push(new Un,new Un,new Un))}for(let e=0;e<o;e++){const t=s[e].vertices;c[e].data.push(t[g.a],t[g.b],t[g.c])}for(let t=0;t<u;t++){const n=l[t].vertexNormals[e];h[t].data.push(n.a,n.b,n.c)}f&&this.skinIndices.push(d[g.a],d[g.b],d[g.c]),m&&this.skinWeights.push(p[g.a],p[g.b],p[g.c])}return this.computeGroups(e),this.verticesNeedUpdate=e.verticesNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),this}}function Fa(e){if(0===e.length)return-1/0;let t=e[0];for(let n=1,r=e.length;n<r;++n)e[n]>t&&(t=e[n]);return t}const Ba={Int8Array,Uint8Array,Uint8ClampedArray:"undefined"!=typeof Uint8ClampedArray?Uint8ClampedArray:Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function $a(e,t){return new Ba[e](t)}let Ua=1;const za=new Er,Ga=new Kr,Ha=new Zn,Wa=new er,Va=new er,ja=new Zn;function Xa(){Object.defineProperty(this,"id",{value:Ua+=2}),this.uuid=$n.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}Xa.prototype=Object.assign(Object.create(Pn.prototype),{constructor:Xa,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(e){return Array.isArray(e)?this.index=new(Fa(e)>65535?Ra:Aa)(e,1):this.index=e,this},getAttribute:function(e){return this.attributes[e]},setAttribute:function(e,t){return this.attributes[e]=t,this},deleteAttribute:function(e){return delete this.attributes[e],this},hasAttribute:function(e){return void 0!==this.attributes[e]},addGroup:function(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})},clearGroups:function(){this.groups=[]},setDrawRange:function(e,t){this.drawRange.start=e,this.drawRange.count=t},applyMatrix4:function(e){const t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const t=(new zn).getNormalMatrix(e);n.applyNormalMatrix(t),n.needsUpdate=!0}const r=this.attributes.tangent;return void 0!==r&&(r.transformDirection(e),r.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(e){return za.makeRotationX(e),this.applyMatrix4(za),this},rotateY:function(e){return za.makeRotationY(e),this.applyMatrix4(za),this},rotateZ:function(e){return za.makeRotationZ(e),this.applyMatrix4(za),this},translate:function(e,t,n){return za.makeTranslation(e,t,n),this.applyMatrix4(za),this},scale:function(e,t,n){return za.makeScale(e,t,n),this.applyMatrix4(za),this},lookAt:function(e){return Ga.lookAt(e),Ga.updateMatrix(),this.applyMatrix4(Ga.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(Ha).negate(),this.translate(Ha.x,Ha.y,Ha.z),this},setFromObject:function(e){const t=e.geometry;if(e.isPoints||e.isLine){const e=new La(3*t.vertices.length,3),n=new La(3*t.colors.length,3);if(this.setAttribute("position",e.copyVector3sArray(t.vertices)),this.setAttribute("color",n.copyColorsArray(t.colors)),t.lineDistances&&t.lineDistances.length===t.vertices.length){const e=new La(t.lineDistances.length,1);this.setAttribute("lineDistance",e.copyArray(t.lineDistances))}null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone())}else e.isMesh&&t&&t.isGeometry&&this.fromGeometry(t);return this},setFromPoints:function(e){const t=[];for(let n=0,r=e.length;n<r;n++){const r=e[n];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new La(t,3)),this},updateFromObject:function(e){let t=e.geometry;if(e.isMesh){let e=t.__directGeometry;if(!0===t.elementsNeedUpdate&&(e=void 0,t.elementsNeedUpdate=!1),void 0===e)return this.fromGeometry(t);e.verticesNeedUpdate=t.verticesNeedUpdate,e.normalsNeedUpdate=t.normalsNeedUpdate,e.colorsNeedUpdate=t.colorsNeedUpdate,e.uvsNeedUpdate=t.uvsNeedUpdate,e.groupsNeedUpdate=t.groupsNeedUpdate,t.verticesNeedUpdate=!1,t.normalsNeedUpdate=!1,t.colorsNeedUpdate=!1,t.uvsNeedUpdate=!1,t.groupsNeedUpdate=!1,t=e}if(!0===t.verticesNeedUpdate){const e=this.attributes.position;void 0!==e&&(e.copyVector3sArray(t.vertices),e.needsUpdate=!0),t.verticesNeedUpdate=!1}if(!0===t.normalsNeedUpdate){const e=this.attributes.normal;void 0!==e&&(e.copyVector3sArray(t.normals),e.needsUpdate=!0),t.normalsNeedUpdate=!1}if(!0===t.colorsNeedUpdate){const e=this.attributes.color;void 0!==e&&(e.copyColorsArray(t.colors),e.needsUpdate=!0),t.colorsNeedUpdate=!1}if(t.uvsNeedUpdate){const e=this.attributes.uv;void 0!==e&&(e.copyVector2sArray(t.uvs),e.needsUpdate=!0),t.uvsNeedUpdate=!1}if(t.lineDistancesNeedUpdate){const e=this.attributes.lineDistance;void 0!==e&&(e.copyArray(t.lineDistances),e.needsUpdate=!0),t.lineDistancesNeedUpdate=!1}return t.groupsNeedUpdate&&(t.computeGroups(e.geometry),this.groups=t.groups,t.groupsNeedUpdate=!1),this},fromGeometry:function(e){return e.__directGeometry=(new Pa).fromGeometry(e),this.fromDirectGeometry(e.__directGeometry)},fromDirectGeometry:function(e){const t=new Float32Array(3*e.vertices.length);if(this.setAttribute("position",new Ea(t,3).copyVector3sArray(e.vertices)),e.normals.length>0){const t=new Float32Array(3*e.normals.length);this.setAttribute("normal",new Ea(t,3).copyVector3sArray(e.normals))}if(e.colors.length>0){const t=new Float32Array(3*e.colors.length);this.setAttribute("color",new Ea(t,3).copyColorsArray(e.colors))}if(e.uvs.length>0){const t=new Float32Array(2*e.uvs.length);this.setAttribute("uv",new Ea(t,2).copyVector2sArray(e.uvs))}if(e.uvs2.length>0){const t=new Float32Array(2*e.uvs2.length);this.setAttribute("uv2",new Ea(t,2).copyVector2sArray(e.uvs2))}this.groups=e.groups;for(const t in e.morphTargets){const n=[],r=e.morphTargets[t];for(let e=0,t=r.length;e<t;e++){const t=r[e],a=new La(3*t.data.length,3);a.name=t.name,n.push(a.copyVector3sArray(t.data))}this.morphAttributes[t]=n}if(e.skinIndices.length>0){const t=new La(4*e.skinIndices.length,4);this.setAttribute("skinIndex",t.copyVector4sArray(e.skinIndices))}if(e.skinWeights.length>0){const t=new La(4*e.skinWeights.length,4);this.setAttribute("skinWeight",t.copyVector4sArray(e.skinWeights))}return null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new er);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new Zn(-1/0,-1/0,-1/0),new Zn(1/0,1/0,1/0));if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let e=0,n=t.length;e<n;e++){const n=t[e];Wa.setFromBufferAttribute(n),this.morphTargetsRelative?(ja.addVectors(this.boundingBox.min,Wa.min),this.boundingBox.expandByPoint(ja),ja.addVectors(this.boundingBox.max,Wa.max),this.boundingBox.expandByPoint(ja)):(this.boundingBox.expandByPoint(Wa.min),this.boundingBox.expandByPoint(Wa.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new gr);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new Zn,1/0);if(e){const n=this.boundingSphere.center;if(Wa.setFromBufferAttribute(e),t)for(let e=0,n=t.length;e<n;e++){const n=t[e];Va.setFromBufferAttribute(n),this.morphTargetsRelative?(ja.addVectors(Wa.min,Va.min),Wa.expandByPoint(ja),ja.addVectors(Wa.max,Va.max),Wa.expandByPoint(ja)):(Wa.expandByPoint(Va.min),Wa.expandByPoint(Va.max))}Wa.getCenter(n);let r=0;for(let t=0,a=e.count;t<a;t++)ja.fromBufferAttribute(e,t),r=Math.max(r,n.distanceToSquared(ja));if(t)for(let a=0,i=t.length;a<i;a++){const i=t[a],s=this.morphTargetsRelative;for(let t=0,a=i.count;t<a;t++)ja.fromBufferAttribute(i,t),s&&(Ha.fromBufferAttribute(e,t),ja.add(Ha)),r=Math.max(r,n.distanceToSquared(ja))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeVertexNormals:function(){const e=this.index,t=this.getAttribute("position");if(void 0!==t){let n=this.getAttribute("normal");if(void 0===n)n=new Ea(new Float32Array(3*t.count),3),this.setAttribute("normal",n);else for(let e=0,t=n.count;e<t;e++)n.setXYZ(e,0,0,0);const r=new Zn,a=new Zn,i=new Zn,s=new Zn,o=new Zn,c=new Zn,l=new Zn,u=new Zn;if(e)for(let h=0,d=e.count;h<d;h+=3){const d=e.getX(h+0),p=e.getX(h+1),f=e.getX(h+2);r.fromBufferAttribute(t,d),a.fromBufferAttribute(t,p),i.fromBufferAttribute(t,f),l.subVectors(i,a),u.subVectors(r,a),l.cross(u),s.fromBufferAttribute(n,d),o.fromBufferAttribute(n,p),c.fromBufferAttribute(n,f),s.add(l),o.add(l),c.add(l),n.setXYZ(d,s.x,s.y,s.z),n.setXYZ(p,o.x,o.y,o.z),n.setXYZ(f,c.x,c.y,c.z)}else for(let e=0,s=t.count;e<s;e+=3)r.fromBufferAttribute(t,e+0),a.fromBufferAttribute(t,e+1),i.fromBufferAttribute(t,e+2),l.subVectors(i,a),u.subVectors(r,a),l.cross(u),n.setXYZ(e+0,l.x,l.y,l.z),n.setXYZ(e+1,l.x,l.y,l.z),n.setXYZ(e+2,l.x,l.y,l.z);this.normalizeNormals(),n.needsUpdate=!0}},merge:function(e,t){if(!e||!e.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);void 0===t&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const r in n){if(void 0===e.attributes[r])continue;const a=n[r].array,i=e.attributes[r],s=i.array,o=i.itemSize*t,c=Math.min(s.length,a.length-o);for(let e=0,t=o;e<c;e++,t++)a[t]=s[e]}return this},normalizeNormals:function(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)ja.fromBufferAttribute(e,t),ja.normalize(),e.setXYZ(t,ja.x,ja.y,ja.z)},toNonIndexed:function(){function e(e,t){const n=e.array,r=e.itemSize,a=e.normalized,i=new n.constructor(t.length*r);let s=0,o=0;for(let e=0,a=t.length;e<a;e++){s=t[e]*r;for(let e=0;e<r;e++)i[o++]=n[s++]}return new Ea(i,r,a)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;const t=new Xa,n=this.index.array,r=this.attributes;for(const a in r){const i=e(r[a],n);t.setAttribute(a,i)}const a=this.morphAttributes;for(const r in a){const i=[],s=a[r];for(let t=0,r=s.length;t<r;t++){const r=e(s[t],n);i.push(r)}t.morphAttributes[r]=i}t.morphTargetsRelative=this.morphTargetsRelative;const i=this.groups;for(let e=0,n=i.length;e<n;e++){const n=i[e];t.addGroup(n.start,n.count,n.materialIndex)}return t},toJSON:function(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){const t=this.parameters;for(const n in t)void 0!==t[n]&&(e[n]=t[n]);return e}e.data={attributes:{}};const t=this.index;null!==t&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const t in n){const r=n[t],a=r.toJSON(e.data);""!==r.name&&(a.name=r.name),e.data.attributes[t]=a}const r={};let a=!1;for(const t in this.morphAttributes){const n=this.morphAttributes[t],i=[];for(let t=0,r=n.length;t<r;t++){const r=n[t],a=r.toJSON(e.data);""!==r.name&&(a.name=r.name),i.push(a)}i.length>0&&(r[t]=i,a=!0)}a&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const i=this.groups;i.length>0&&(e.data.groups=JSON.parse(JSON.stringify(i)));const s=this.boundingSphere;return null!==s&&(e.data.boundingSphere={center:s.center.toArray(),radius:s.radius}),e},clone:function(){return(new Xa).copy(this)},copy:function(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;null!==n&&this.setIndex(n.clone(t));const r=e.attributes;for(const e in r){const n=r[e];this.setAttribute(e,n.clone(t))}const a=e.morphAttributes;for(const e in a){const n=[],r=a[e];for(let e=0,a=r.length;e<a;e++)n.push(r[e].clone(t));this.morphAttributes[e]=n}this.morphTargetsRelative=e.morphTargetsRelative;const i=e.groups;for(let e=0,t=i.length;e<t;e++){const t=i[e];this.addGroup(t.start,t.count,t.materialIndex)}const s=e.boundingBox;null!==s&&(this.boundingBox=s.clone());const o=e.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});const qa=new Er,Ya=new Sr,Ka=new gr,Za=new Zn,Ja=new Zn,Qa=new Zn,ei=new Zn,ti=new Zn,ni=new Zn,ri=new Zn,ai=new Zn,ii=new Zn,si=new Un,oi=new Un,ci=new Un,li=new Zn,ui=new Zn;function hi(e=new Xa,t=new _a){Kr.call(this),this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}function di(e,t,n,r,a,i,s,o){let c;if(c=t.side===m?r.intersectTriangle(s,i,a,!0,o):r.intersectTriangle(a,i,s,t.side!==g,o),null===c)return null;ui.copy(o),ui.applyMatrix4(e.matrixWorld);const l=n.ray.origin.distanceTo(ui);return l<n.near||l>n.far?null:{distance:l,point:ui.clone(),object:e}}function pi(e,t,n,r,a,i,s,o,c,l,u,h){Za.fromBufferAttribute(a,l),Ja.fromBufferAttribute(a,u),Qa.fromBufferAttribute(a,h);const d=e.morphTargetInfluences;if(t.morphTargets&&i&&d){ri.set(0,0,0),ai.set(0,0,0),ii.set(0,0,0);for(let e=0,t=i.length;e<t;e++){const t=d[e],n=i[e];0!==t&&(ei.fromBufferAttribute(n,l),ti.fromBufferAttribute(n,u),ni.fromBufferAttribute(n,h),s?(ri.addScaledVector(ei,t),ai.addScaledVector(ti,t),ii.addScaledVector(ni,t)):(ri.addScaledVector(ei.sub(Za),t),ai.addScaledVector(ti.sub(Ja),t),ii.addScaledVector(ni.sub(Qa),t)))}Za.add(ri),Ja.add(ai),Qa.add(ii)}e.isSkinnedMesh&&(e.boneTransform(l,Za),e.boneTransform(u,Ja),e.boneTransform(h,Qa));const p=di(e,t,n,r,Za,Ja,Qa,li);if(p){o&&(si.fromBufferAttribute(o,l),oi.fromBufferAttribute(o,u),ci.fromBufferAttribute(o,h),p.uv=ha.getUV(li,Za,Ja,Qa,si,oi,ci,new Un)),c&&(si.fromBufferAttribute(c,l),oi.fromBufferAttribute(c,u),ci.fromBufferAttribute(c,h),p.uv2=ha.getUV(li,Za,Ja,Qa,si,oi,ci,new Un));const e=new va(l,u,h);ha.getNormal(Za,Ja,Qa,e.normal),p.face=e}return p}hi.prototype=Object.assign(Object.create(Kr.prototype),{constructor:hi,isMesh:!0,copy:function(e){return Kr.prototype.copy.call(this,e),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const e=t[n[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,n=e.length;t<n;t++){const n=e[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=t}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(e,t){const n=this.geometry,r=this.material,a=this.matrixWorld;if(void 0===r)return;if(null===n.boundingSphere&&n.computeBoundingSphere(),Ka.copy(n.boundingSphere),Ka.applyMatrix4(a),!1===e.ray.intersectsSphere(Ka))return;if(qa.copy(a).invert(),Ya.copy(e.ray).applyMatrix4(qa),null!==n.boundingBox&&!1===Ya.intersectsBox(n.boundingBox))return;let i;if(n.isBufferGeometry){const a=n.index,s=n.attributes.position,o=n.morphAttributes.position,c=n.morphTargetsRelative,l=n.attributes.uv,u=n.attributes.uv2,h=n.groups,d=n.drawRange;if(null!==a)if(Array.isArray(r))for(let n=0,p=h.length;n<p;n++){const p=h[n],f=r[p.materialIndex];for(let n=Math.max(p.start,d.start),r=Math.min(p.start+p.count,d.start+d.count);n<r;n+=3){const r=a.getX(n),h=a.getX(n+1),d=a.getX(n+2);i=pi(this,f,e,Ya,s,o,c,l,u,r,h,d),i&&(i.faceIndex=Math.floor(n/3),i.face.materialIndex=p.materialIndex,t.push(i))}}else for(let n=Math.max(0,d.start),h=Math.min(a.count,d.start+d.count);n<h;n+=3){const h=a.getX(n),d=a.getX(n+1),p=a.getX(n+2);i=pi(this,r,e,Ya,s,o,c,l,u,h,d,p),i&&(i.faceIndex=Math.floor(n/3),t.push(i))}else if(void 0!==s)if(Array.isArray(r))for(let n=0,a=h.length;n<a;n++){const a=h[n],p=r[a.materialIndex];for(let n=Math.max(a.start,d.start),r=Math.min(a.start+a.count,d.start+d.count);n<r;n+=3)i=pi(this,p,e,Ya,s,o,c,l,u,n,n+1,n+2),i&&(i.faceIndex=Math.floor(n/3),i.face.materialIndex=a.materialIndex,t.push(i))}else for(let n=Math.max(0,d.start),a=Math.min(s.count,d.start+d.count);n<a;n+=3)i=pi(this,r,e,Ya,s,o,c,l,u,n,n+1,n+2),i&&(i.faceIndex=Math.floor(n/3),t.push(i))}else if(n.isGeometry){const a=Array.isArray(r),s=n.vertices,o=n.faces;let c;const l=n.faceVertexUvs[0];l.length>0&&(c=l);for(let n=0,l=o.length;n<l;n++){const l=o[n],u=a?r[l.materialIndex]:r;if(void 0===u)continue;const h=s[l.a],d=s[l.b],p=s[l.c];if(i=di(this,u,e,Ya,h,d,p,li),i){if(c&&c[n]){const e=c[n];si.copy(e[0]),oi.copy(e[1]),ci.copy(e[2]),i.uv=ha.getUV(li,h,d,p,si,oi,ci,new Un)}i.face=l,i.faceIndex=n,t.push(i)}}}}});class fi extends Xa{constructor(e=1,t=1,n=1,r=1,a=1,i=1){super(),this.type="BoxBufferGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:r,heightSegments:a,depthSegments:i};const s=this;r=Math.floor(r),a=Math.floor(a),i=Math.floor(i);const o=[],c=[],l=[],u=[];let h=0,d=0;function p(e,t,n,r,a,i,p,f,m,g,y){const x=i/m,v=p/g,b=i/2,w=p/2,_=f/2,T=m+1,S=g+1;let E=0,M=0;const I=new Zn;for(let i=0;i<S;i++){const s=i*v-w;for(let o=0;o<T;o++){const h=o*x-b;I[e]=h*r,I[t]=s*a,I[n]=_,c.push(I.x,I.y,I.z),I[e]=0,I[t]=0,I[n]=f>0?1:-1,l.push(I.x,I.y,I.z),u.push(o/m),u.push(1-i/g),E+=1}}for(let e=0;e<g;e++)for(let t=0;t<m;t++){const n=h+t+T*e,r=h+t+T*(e+1),a=h+(t+1)+T*(e+1),i=h+(t+1)+T*e;o.push(n,r,i),o.push(r,a,i),M+=6}s.addGroup(d,M,y),d+=M,h+=E}p("z","y","x",-1,-1,n,t,e,i,a,0),p("z","y","x",1,-1,n,t,-e,i,a,1),p("x","z","y",1,1,e,n,t,r,i,2),p("x","z","y",1,-1,e,n,-t,r,i,3),p("x","y","z",1,-1,e,t,n,r,a,4),p("x","y","z",-1,-1,e,t,-n,r,a,5),this.setIndex(o),this.setAttribute("position",new La(c,3)),this.setAttribute("normal",new La(l,3)),this.setAttribute("uv",new La(u,2))}}function mi(e){const t={};for(const n in e){t[n]={};for(const r in e[n]){const a=e[n][r];a&&(a.isColor||a.isMatrix3||a.isMatrix4||a.isVector2||a.isVector3||a.isVector4||a.isTexture)?t[n][r]=a.clone():Array.isArray(a)?t[n][r]=a.slice():t[n][r]=a}}return t}function gi(e){const t={};for(let n=0;n<e.length;n++){const r=mi(e[n]);for(const e in r)t[e]=r[e]}return t}const yi={clone:mi,merge:gi};function xi(e){wa.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}function vi(){Kr.call(this),this.type="Camera",this.matrixWorldInverse=new Er,this.projectionMatrix=new Er,this.projectionMatrixInverse=new Er}function bi(e=50,t=1,n=.1,r=2e3){vi.call(this),this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}xi.prototype=Object.create(wa.prototype),xi.prototype.constructor=xi,xi.prototype.isShaderMaterial=!0,xi.prototype.copy=function(e){return wa.prototype.copy.call(this,e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=mi(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this},xi.prototype.toJSON=function(e){const t=wa.prototype.toJSON.call(this,e);t.glslVersion=this.glslVersion,t.uniforms={};for(const n in this.uniforms){const r=this.uniforms[n].value;r&&r.isTexture?t.uniforms[n]={type:"t",value:r.toJSON(e).uuid}:r&&r.isColor?t.uniforms[n]={type:"c",value:r.getHex()}:r&&r.isVector2?t.uniforms[n]={type:"v2",value:r.toArray()}:r&&r.isVector3?t.uniforms[n]={type:"v3",value:r.toArray()}:r&&r.isVector4?t.uniforms[n]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?t.uniforms[n]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?t.uniforms[n]={type:"m4",value:r.toArray()}:t.uniforms[n]={value:r}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const e in this.extensions)!0===this.extensions[e]&&(n[e]=!0);return Object.keys(n).length>0&&(t.extensions=n),t},vi.prototype=Object.assign(Object.create(Kr.prototype),{constructor:vi,isCamera:!0,copy:function(e,t){return Kr.prototype.copy.call(this,e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this},getWorldDirection:function(e){void 0===e&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),e=new Zn),this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()},updateMatrixWorld:function(e){Kr.prototype.updateMatrixWorld.call(this,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()},updateWorldMatrix:function(e,t){Kr.prototype.updateWorldMatrix.call(this,e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()},clone:function(){return(new this.constructor).copy(this)}}),bi.prototype=Object.assign(Object.create(vi.prototype),{constructor:bi,isPerspectiveCamera:!0,copy:function(e,t){return vi.prototype.copy.call(this,e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this},setFocalLength:function(e){const t=.5*this.getFilmHeight()/e;this.fov=2*$n.RAD2DEG*Math.atan(t),this.updateProjectionMatrix()},getFocalLength:function(){const e=Math.tan(.5*$n.DEG2RAD*this.fov);return.5*this.getFilmHeight()/e},getEffectiveFOV:function(){return 2*$n.RAD2DEG*Math.atan(Math.tan(.5*$n.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(e,t,n,r,a,i){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=a,this.view.height=i,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const e=this.near;let t=e*Math.tan(.5*$n.DEG2RAD*this.fov)/this.zoom,n=2*t,r=this.aspect*n,a=-.5*r;const i=this.view;if(null!==this.view&&this.view.enabled){const e=i.fullWidth,s=i.fullHeight;a+=i.offsetX*r/e,t-=i.offsetY*n/s,r*=i.width/e,n*=i.height/s}const s=this.filmOffset;0!==s&&(a+=e*s/this.getFilmWidth()),this.projectionMatrix.makePerspective(a,a+r,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(e){const t=Kr.prototype.toJSON.call(this,e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}});const wi=90;function _i(e,t,n){if(Kr.call(this),this.type="CubeCamera",!0!==n.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=n;const r=new bi(wi,1,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new Zn(1,0,0)),this.add(r);const a=new bi(wi,1,e,t);a.layers=this.layers,a.up.set(0,-1,0),a.lookAt(new Zn(-1,0,0)),this.add(a);const i=new bi(wi,1,e,t);i.layers=this.layers,i.up.set(0,0,1),i.lookAt(new Zn(0,1,0)),this.add(i);const s=new bi(wi,1,e,t);s.layers=this.layers,s.up.set(0,0,-1),s.lookAt(new Zn(0,-1,0)),this.add(s);const o=new bi(wi,1,e,t);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new Zn(0,0,1)),this.add(o);const c=new bi(wi,1,e,t);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new Zn(0,0,-1)),this.add(c),this.update=function(e,t){null===this.parent&&this.updateMatrixWorld();const l=e.xr.enabled,u=e.getRenderTarget();e.xr.enabled=!1;const h=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,r),e.setRenderTarget(n,1),e.render(t,a),e.setRenderTarget(n,2),e.render(t,i),e.setRenderTarget(n,3),e.render(t,s),e.setRenderTarget(n,4),e.render(t,o),n.texture.generateMipmaps=h,e.setRenderTarget(n,5),e.render(t,c),e.setRenderTarget(u),e.xr.enabled=l}}function Ti(e,t,n,r,a,i,s,o,c,l){e=void 0!==e?e:[],t=void 0!==t?t:ie,s=void 0!==s?s:Fe,Vn.call(this,e,t,n,r,a,i,s,o,c,l),this.flipY=!1,this._needsFlipEnvMap=!0}function Si(e,t,n){Number.isInteger(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=n),qn.call(this,e,e,t),t=t||{},this.texture=new Ti(void 0,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture._needsFlipEnvMap=!1}function Ei(e,t,n,r,a,i,s,o,c,l,u,h){Vn.call(this,null,i,s,o,c,l,r,a,u,h),this.image={data:e||null,width:t||1,height:n||1},this.magFilter=void 0!==c?c:fe,this.minFilter=void 0!==l?l:fe,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}_i.prototype=Object.create(Kr.prototype),_i.prototype.constructor=_i,Ti.prototype=Object.create(Vn.prototype),Ti.prototype.constructor=Ti,Ti.prototype.isCubeTexture=!0,Object.defineProperty(Ti.prototype,"images",{get:function(){return this.image},set:function(e){this.image=e}}),Si.prototype=Object.create(qn.prototype),Si.prototype.constructor=Si,Si.prototype.isWebGLCubeRenderTarget=!0,Si.prototype.fromEquirectangularTexture=function(e,t){this.texture.type=t.type,this.texture.format=Be,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={tEquirect:{value:null}},r="\n\n\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t#include <begin_vertex>\n\t\t\t\t#include <project_vertex>\n\n\t\t\t}\n\t\t",a="\n\n\t\t\tuniform sampler2D tEquirect;\n\n\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t}\n\t\t",i=new fi(5,5,5),s=new xi({name:"CubemapFromEquirect",uniforms:mi(n),vertexShader:r,fragmentShader:a,side:m,blending:v});s.uniforms.tEquirect.value=t;const o=new hi(i,s),c=t.minFilter;return t.minFilter===_e&&(t.minFilter=ve),new _i(1,10,this).update(e,o),t.minFilter=c,o.geometry.dispose(),o.material.dispose(),this},Si.prototype.clear=function(e,t,n,r){const a=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,n,r);e.setRenderTarget(a)},Ei.prototype=Object.create(Vn.prototype),Ei.prototype.constructor=Ei,Ei.prototype.isDataTexture=!0;const Mi=new gr,Ii=new Zn;class Ni{constructor(e,t,n,r,a,i){this.planes=[void 0!==e?e:new ea,void 0!==t?t:new ea,void 0!==n?n:new ea,void 0!==r?r:new ea,void 0!==a?a:new ea,void 0!==i?i:new ea]}set(e,t,n,r,a,i){const s=this.planes;return s[0].copy(e),s[1].copy(t),s[2].copy(n),s[3].copy(r),s[4].copy(a),s[5].copy(i),this}clone(){return(new this.constructor).copy(this)}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,r=n[0],a=n[1],i=n[2],s=n[3],o=n[4],c=n[5],l=n[6],u=n[7],h=n[8],d=n[9],p=n[10],f=n[11],m=n[12],g=n[13],y=n[14],x=n[15];return t[0].setComponents(s-r,u-o,f-h,x-m).normalize(),t[1].setComponents(s+r,u+o,f+h,x+m).normalize(),t[2].setComponents(s+a,u+c,f+d,x+g).normalize(),t[3].setComponents(s-a,u-c,f-d,x-g).normalize(),t[4].setComponents(s-i,u-l,f-p,x-y).normalize(),t[5].setComponents(s+i,u+l,f+p,x+y).normalize(),this}intersectsObject(e){const t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),Mi.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(Mi)}intersectsSprite(e){return Mi.center.set(0,0,0),Mi.radius=.7071067811865476,Mi.applyMatrix4(e.matrixWorld),this.intersectsSphere(Mi)}intersectsSphere(e){const t=this.planes,n=e.center,r=-e.radius;for(let e=0;e<6;e++)if(t[e].distanceToPoint(n)<r)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const r=t[n];if(Ii.x=r.normal.x>0?e.max.x:e.min.x,Ii.y=r.normal.y>0?e.max.y:e.min.y,Ii.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(Ii)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}}function Ci(){let e=null,t=!1,n=null,r=null;function a(t,i){n(t,i),r=e.requestAnimationFrame(a)}return{start:function(){!0!==t&&null!==n&&(r=e.requestAnimationFrame(a),t=!0)},stop:function(){e.cancelAnimationFrame(r),t=!1},setAnimationLoop:function(e){n=e},setContext:function(t){e=t}}}function Ai(e,t){const n=t.isWebGL2,r=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),r.get(e)},remove:function(t){t.isInterleavedBufferAttribute&&(t=t.data);const n=r.get(t);n&&(e.deleteBuffer(n.buffer),r.delete(t))},update:function(t,a){if(t.isGLBufferAttribute){const e=r.get(t);return void((!e||e.version<t.version)&&r.set(t,{buffer:t.buffer,type:t.type,bytesPerElement:t.elementSize,version:t.version}))}t.isInterleavedBufferAttribute&&(t=t.data);const i=r.get(t);void 0===i?r.set(t,function(t,r){const a=t.array,i=t.usage,s=e.createBuffer();e.bindBuffer(r,s),e.bufferData(r,a,i),t.onUploadCallback();let o=5126;return a instanceof Float32Array?o=5126:a instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):a instanceof Uint16Array?t.isFloat16BufferAttribute?n?o=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):o=5123:a instanceof Int16Array?o=5122:a instanceof Uint32Array?o=5125:a instanceof Int32Array?o=5124:a instanceof Int8Array?o=5120:a instanceof Uint8Array&&(o=5121),{buffer:s,type:o,bytesPerElement:a.BYTES_PER_ELEMENT,version:t.version}}(t,a)):i.version<t.version&&(function(t,r,a){const i=r.array,s=r.updateRange;e.bindBuffer(a,t),-1===s.count?e.bufferSubData(a,0,i):(n?e.bufferSubData(a,s.offset*i.BYTES_PER_ELEMENT,i,s.offset,s.count):e.bufferSubData(a,s.offset*i.BYTES_PER_ELEMENT,i.subarray(s.offset,s.offset+s.count)),s.count=-1)}(i.buffer,t,a),i.version=t.version)}}}class ki extends Xa{constructor(e=1,t=1,n=1,r=1){super(),this.type="PlaneBufferGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r};const a=e/2,i=t/2,s=Math.floor(n),o=Math.floor(r),c=s+1,l=o+1,u=e/s,h=t/o,d=[],p=[],f=[],m=[];for(let e=0;e<l;e++){const t=e*h-i;for(let n=0;n<c;n++){const r=n*u-a;p.push(r,-t,0),f.push(0,0,1),m.push(n/s),m.push(1-e/o)}}for(let e=0;e<o;e++)for(let t=0;t<s;t++){const n=t+c*e,r=t+c*(e+1),a=t+1+c*(e+1),i=t+1+c*e;d.push(n,r,i),d.push(r,a,i)}this.setIndex(d),this.setAttribute("position",new La(p,3)),this.setAttribute("normal",new La(f,3)),this.setAttribute("uv",new La(m,2))}}const Ri={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor.xyz *= color.xyz;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tfogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",normal_fragment_begin:"#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\t\tmat3 tsn = mat3( S, T, N );\n\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmissionmap_fragment:"#ifdef USE_TRANSMISSIONMAP\n\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\n#endif",transmissionmap_pars_fragment:"#ifdef USE_TRANSMISSIONMAP\n\tuniform sampler2D transmissionMap;\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSMISSION\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSMISSION\n\tuniform float transmission;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <transmissionmap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#ifdef TRANSMISSION\n\t\tfloat totalTransmission = transmission;\n\t#endif\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <transmissionmap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSMISSION\n\t\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"},Di={common:{diffuse:{value:new xa(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new zn},uv2Transform:{value:new zn},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Un(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new xa(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new xa(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new zn}},sprite:{diffuse:{value:new xa(15658734)},opacity:{value:1},center:{value:new Un(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new zn}}},Li={basic:{uniforms:gi([Di.common,Di.specularmap,Di.envmap,Di.aomap,Di.lightmap,Di.fog]),vertexShader:Ri.meshbasic_vert,fragmentShader:Ri.meshbasic_frag},lambert:{uniforms:gi([Di.common,Di.specularmap,Di.envmap,Di.aomap,Di.lightmap,Di.emissivemap,Di.fog,Di.lights,{emissive:{value:new xa(0)}}]),vertexShader:Ri.meshlambert_vert,fragmentShader:Ri.meshlambert_frag},phong:{uniforms:gi([Di.common,Di.specularmap,Di.envmap,Di.aomap,Di.lightmap,Di.emissivemap,Di.bumpmap,Di.normalmap,Di.displacementmap,Di.fog,Di.lights,{emissive:{value:new xa(0)},specular:{value:new xa(1118481)},shininess:{value:30}}]),vertexShader:Ri.meshphong_vert,fragmentShader:Ri.meshphong_frag},standard:{uniforms:gi([Di.common,Di.envmap,Di.aomap,Di.lightmap,Di.emissivemap,Di.bumpmap,Di.normalmap,Di.displacementmap,Di.roughnessmap,Di.metalnessmap,Di.fog,Di.lights,{emissive:{value:new xa(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ri.meshphysical_vert,fragmentShader:Ri.meshphysical_frag},toon:{uniforms:gi([Di.common,Di.aomap,Di.lightmap,Di.emissivemap,Di.bumpmap,Di.normalmap,Di.displacementmap,Di.gradientmap,Di.fog,Di.lights,{emissive:{value:new xa(0)}}]),vertexShader:Ri.meshtoon_vert,fragmentShader:Ri.meshtoon_frag},matcap:{uniforms:gi([Di.common,Di.bumpmap,Di.normalmap,Di.displacementmap,Di.fog,{matcap:{value:null}}]),vertexShader:Ri.meshmatcap_vert,fragmentShader:Ri.meshmatcap_frag},points:{uniforms:gi([Di.points,Di.fog]),vertexShader:Ri.points_vert,fragmentShader:Ri.points_frag},dashed:{uniforms:gi([Di.common,Di.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ri.linedashed_vert,fragmentShader:Ri.linedashed_frag},depth:{uniforms:gi([Di.common,Di.displacementmap]),vertexShader:Ri.depth_vert,fragmentShader:Ri.depth_frag},normal:{uniforms:gi([Di.common,Di.bumpmap,Di.normalmap,Di.displacementmap,{opacity:{value:1}}]),vertexShader:Ri.normal_vert,fragmentShader:Ri.normal_frag},sprite:{uniforms:gi([Di.sprite,Di.fog]),vertexShader:Ri.sprite_vert,fragmentShader:Ri.sprite_frag},background:{uniforms:{uvTransform:{value:new zn},t2D:{value:null}},vertexShader:Ri.background_vert,fragmentShader:Ri.background_frag},cube:{uniforms:gi([Di.envmap,{opacity:{value:1}}]),vertexShader:Ri.cube_vert,fragmentShader:Ri.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ri.equirect_vert,fragmentShader:Ri.equirect_frag},distanceRGBA:{uniforms:gi([Di.common,Di.displacementmap,{referencePosition:{value:new Zn},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ri.distanceRGBA_vert,fragmentShader:Ri.distanceRGBA_frag},shadow:{uniforms:gi([Di.lights,Di.fog,{color:{value:new xa(0)},opacity:{value:1}}]),vertexShader:Ri.shadow_vert,fragmentShader:Ri.shadow_frag}};function Oi(e,t,n,r,a){const i=new xa(0);let s,o,c=0,l=null,u=0,h=null;function d(e,t){n.buffers.color.setClear(e.r,e.g,e.b,t,a)}return{getClearColor:function(){return i},setClearColor:function(e,t=1){i.set(e),c=t,d(i,c)},getClearAlpha:function(){return c},setClearAlpha:function(e){c=e,d(i,c)},render:function(n,a,p,g){let y=!0===a.isScene?a.background:null;y&&y.isTexture&&(y=t.get(y));const x=e.xr,v=x.getSession&&x.getSession();v&&"additive"===v.environmentBlendMode&&(y=null),null===y?d(i,c):y&&y.isColor&&(d(y,1),g=!0),(e.autoClear||g)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),y&&(y.isCubeTexture||y.isWebGLCubeRenderTarget||y.mapping===le)?(void 0===o&&(o=new hi(new fi(1,1,1),new xi({name:"BackgroundCubeMaterial",uniforms:mi(Li.cube.uniforms),vertexShader:Li.cube.vertexShader,fragmentShader:Li.cube.fragmentShader,side:m,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),o.geometry.deleteAttribute("uv"),o.onBeforeRender=function(e,t,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(o.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(o)),y.isWebGLCubeRenderTarget&&(y=y.texture),o.material.uniforms.envMap.value=y,o.material.uniforms.flipEnvMap.value=y.isCubeTexture&&y._needsFlipEnvMap?-1:1,l===y&&u===y.version&&h===e.toneMapping||(o.material.needsUpdate=!0,l=y,u=y.version,h=e.toneMapping),n.unshift(o,o.geometry,o.material,0,0,null)):y&&y.isTexture&&(void 0===s&&(s=new hi(new ki(2,2),new xi({name:"BackgroundMaterial",uniforms:mi(Li.background.uniforms),vertexShader:Li.background.vertexShader,fragmentShader:Li.background.fragmentShader,side:f,depthTest:!1,depthWrite:!1,fog:!1})),s.geometry.deleteAttribute("normal"),Object.defineProperty(s.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(s)),s.material.uniforms.t2D.value=y,!0===y.matrixAutoUpdate&&y.updateMatrix(),s.material.uniforms.uvTransform.value.copy(y.matrix),l===y&&u===y.version&&h===e.toneMapping||(s.material.needsUpdate=!0,l=y,u=y.version,h=e.toneMapping),n.unshift(s,s.geometry,s.material,0,0,null))}}}function Pi(e,t,n,r){const a=e.getParameter(34921),i=r.isWebGL2?null:t.get("OES_vertex_array_object"),s=r.isWebGL2||null!==i,o={},c=d(null);let l=c;function u(t){return r.isWebGL2?e.bindVertexArray(t):i.bindVertexArrayOES(t)}function h(t){return r.isWebGL2?e.deleteVertexArray(t):i.deleteVertexArrayOES(t)}function d(e){const t=[],n=[],r=[];for(let e=0;e<a;e++)t[e]=0,n[e]=0,r[e]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:n,attributeDivisors:r,object:e,attributes:{},index:null}}function p(){const e=l.newAttributes;for(let t=0,n=e.length;t<n;t++)e[t]=0}function f(e){m(e,0)}function m(n,a){const i=l.newAttributes,s=l.enabledAttributes,o=l.attributeDivisors;i[n]=1,0===s[n]&&(e.enableVertexAttribArray(n),s[n]=1),o[n]!==a&&((r.isWebGL2?e:t.get("ANGLE_instanced_arrays"))[r.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,a),o[n]=a)}function g(){const t=l.newAttributes,n=l.enabledAttributes;for(let r=0,a=n.length;r<a;r++)n[r]!==t[r]&&(e.disableVertexAttribArray(r),n[r]=0)}function y(t,n,a,i,s,o){!0!==r.isWebGL2||5124!==a&&5125!==a?e.vertexAttribPointer(t,n,a,i,s,o):e.vertexAttribIPointer(t,n,a,s,o)}function x(){v(),l!==c&&(l=c,u(l.object))}function v(){c.geometry=null,c.program=null,c.wireframe=!1}return{setup:function(a,c,h,x,v){let b=!1;if(s){const t=function(t,n,a){const s=!0===a.wireframe;let c=o[t.id];void 0===c&&(c={},o[t.id]=c);let l=c[n.id];void 0===l&&(l={},c[n.id]=l);let u=l[s];return void 0===u&&(u=d(r.isWebGL2?e.createVertexArray():i.createVertexArrayOES()),l[s]=u),u}(x,h,c);l!==t&&(l=t,u(l.object)),b=function(e,t){const n=l.attributes,r=e.attributes;let a=0;for(const e in r){const t=n[e],i=r[e];if(void 0===t)return!0;if(t.attribute!==i)return!0;if(t.data!==i.data)return!0;a++}return l.attributesNum!==a||l.index!==t}(x,v),b&&function(e,t){const n={},r=e.attributes;let a=0;for(const e in r){const t=r[e],i={};i.attribute=t,t.data&&(i.data=t.data),n[e]=i,a++}l.attributes=n,l.attributesNum=a,l.index=t}(x,v)}else{const e=!0===c.wireframe;l.geometry===x.id&&l.program===h.id&&l.wireframe===e||(l.geometry=x.id,l.program=h.id,l.wireframe=e,b=!0)}!0===a.isInstancedMesh&&(b=!0),null!==v&&n.update(v,34963),b&&(function(a,i,s,o){if(!1===r.isWebGL2&&(a.isInstancedMesh||o.isInstancedBufferGeometry)&&null===t.get("ANGLE_instanced_arrays"))return;p();const c=o.attributes,l=s.getAttributes(),u=i.defaultAttributeValues;for(const t in l){const r=l[t];if(r>=0){const i=c[t];if(void 0!==i){const t=i.normalized,a=i.itemSize,s=n.get(i);if(void 0===s)continue;const c=s.buffer,l=s.type,u=s.bytesPerElement;if(i.isInterleavedBufferAttribute){const n=i.data,s=n.stride,h=i.offset;n&&n.isInstancedInterleavedBuffer?(m(r,n.meshPerAttribute),void 0===o._maxInstanceCount&&(o._maxInstanceCount=n.meshPerAttribute*n.count)):f(r),e.bindBuffer(34962,c),y(r,a,l,t,s*u,h*u)}else i.isInstancedBufferAttribute?(m(r,i.meshPerAttribute),void 0===o._maxInstanceCount&&(o._maxInstanceCount=i.meshPerAttribute*i.count)):f(r),e.bindBuffer(34962,c),y(r,a,l,t,0,0)}else if("instanceMatrix"===t){const t=n.get(a.instanceMatrix);if(void 0===t)continue;const i=t.buffer,s=t.type;m(r+0,1),m(r+1,1),m(r+2,1),m(r+3,1),e.bindBuffer(34962,i),e.vertexAttribPointer(r+0,4,s,!1,64,0),e.vertexAttribPointer(r+1,4,s,!1,64,16),e.vertexAttribPointer(r+2,4,s,!1,64,32),e.vertexAttribPointer(r+3,4,s,!1,64,48)}else if("instanceColor"===t){const t=n.get(a.instanceColor);if(void 0===t)continue;const i=t.buffer,s=t.type;m(r,1),e.bindBuffer(34962,i),e.vertexAttribPointer(r,3,s,!1,12,0)}else if(void 0!==u){const n=u[t];if(void 0!==n)switch(n.length){case 2:e.vertexAttrib2fv(r,n);break;case 3:e.vertexAttrib3fv(r,n);break;case 4:e.vertexAttrib4fv(r,n);break;default:e.vertexAttrib1fv(r,n)}}}}g()}(a,c,h,x),null!==v&&e.bindBuffer(34963,n.get(v).buffer))},reset:x,resetDefaultState:v,dispose:function(){x();for(const e in o){const t=o[e];for(const e in t){const n=t[e];for(const e in n)h(n[e].object),delete n[e];delete t[e]}delete o[e]}},releaseStatesOfGeometry:function(e){if(void 0===o[e.id])return;const t=o[e.id];for(const e in t){const n=t[e];for(const e in n)h(n[e].object),delete n[e];delete t[e]}delete o[e.id]},releaseStatesOfProgram:function(e){for(const t in o){const n=o[t];if(void 0===n[e.id])continue;const r=n[e.id];for(const e in r)h(r[e].object),delete r[e];delete n[e.id]}},initAttributes:p,enableAttribute:f,disableUnusedAttributes:g}}function Fi(e,t,n,r){const a=r.isWebGL2;let i;this.setMode=function(e){i=e},this.render=function(t,r){e.drawArrays(i,t,r),n.update(r,i,1)},this.renderInstances=function(r,s,o){if(0===o)return;let c,l;if(a)c=e,l="drawArraysInstanced";else if(c=t.get("ANGLE_instanced_arrays"),l="drawArraysInstancedANGLE",null===c)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");c[l](i,r,s,o),n.update(s,i,o)}}function Bi(e,t,n){let r;function a(t){if("highp"===t){if(e.getShaderPrecisionFormat(35633,36338).precision>0&&e.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(35633,36337).precision>0&&e.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const i="undefined"!=typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&e instanceof WebGL2ComputeRenderingContext;let s=void 0!==n.precision?n.precision:"highp";const o=a(s);o!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",o,"instead."),s=o);const c=!0===n.logarithmicDepthBuffer,l=e.getParameter(34930),u=e.getParameter(35660),h=e.getParameter(3379),d=e.getParameter(34076),p=e.getParameter(34921),f=e.getParameter(36347),m=e.getParameter(36348),g=e.getParameter(36349),y=u>0,x=i||!!t.get("OES_texture_float");return{isWebGL2:i,getMaxAnisotropy:function(){if(void 0!==r)return r;const n=t.get("EXT_texture_filter_anisotropic");return r=null!==n?e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,r},getMaxPrecision:a,precision:s,logarithmicDepthBuffer:c,maxTextures:l,maxVertexTextures:u,maxTextureSize:h,maxCubemapSize:d,maxAttributes:p,maxVertexUniforms:f,maxVaryings:m,maxFragmentUniforms:g,vertexTextures:y,floatFragmentTextures:x,floatVertexTextures:y&&x,maxSamples:i?e.getParameter(36183):0}}function $i(e){const t=this;let n=null,r=0,a=!1,i=!1;const s=new ea,o=new zn,c={value:null,needsUpdate:!1};function l(){c.value!==n&&(c.value=n,c.needsUpdate=r>0),t.numPlanes=r,t.numIntersection=0}function u(e,n,r,a){const i=null!==e?e.length:0;let l=null;if(0!==i){if(l=c.value,!0!==a||null===l){const t=r+4*i,a=n.matrixWorldInverse;o.getNormalMatrix(a),(null===l||l.length<t)&&(l=new Float32Array(t));for(let t=0,n=r;t!==i;++t,n+=4)s.copy(e[t]).applyMatrix4(a,o),s.normal.toArray(l,n),l[n+3]=s.constant}c.value=l,c.needsUpdate=!0}return t.numPlanes=i,t.numIntersection=0,l}this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t,i){const s=0!==e.length||t||0!==r||a;return a=t,n=u(e,i,0),r=e.length,s},this.beginShadows=function(){i=!0,u(null)},this.endShadows=function(){i=!1,l()},this.setState=function(t,s,o){const h=t.clippingPlanes,d=t.clipIntersection,p=t.clipShadows,f=e.get(t);if(!a||null===h||0===h.length||i&&!p)i?u(null):l();else{const e=i?0:r,t=4*e;let a=f.clippingState||null;c.value=a,a=u(h,s,t,o);for(let e=0;e!==t;++e)a[e]=n[e];f.clippingState=a,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=e}}}function Ui(e){let t=new WeakMap;function n(e,t){return t===oe?e.mapping=ie:t===ce&&(e.mapping=se),e}function r(e){const n=e.target;n.removeEventListener("dispose",r);const a=t.get(n);void 0!==a&&(t.delete(n),a.dispose())}return{get:function(a){if(a&&a.isTexture){const i=a.mapping;if(i===oe||i===ce){if(t.has(a))return n(t.get(a).texture,a.mapping);{const i=a.image;if(i&&i.height>0){const s=e.getRenderList(),o=e.getRenderTarget(),c=new Si(i.height/2);return c.fromEquirectangularTexture(e,a),t.set(a,c),e.setRenderTarget(o),e.setRenderList(s),a.addEventListener("dispose",r),n(c.texture,a.mapping)}return null}}}return a},dispose:function(){t=new WeakMap}}}function zi(e){const t={};return{has:function(n){if(void 0!==t[n])return null!==t[n];let r;switch(n){case"WEBGL_depth_texture":r=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=e.getExtension(n)}return t[n]=r,null!==r},get:function(e){return this.has(e)||console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t[e]}}}function Gi(e,t,n,r){const a=new WeakMap,i=new WeakMap;function s(e){const o=e.target,c=a.get(o);null!==c.index&&t.remove(c.index);for(const e in c.attributes)t.remove(c.attributes[e]);o.removeEventListener("dispose",s),a.delete(o);const l=i.get(c);l&&(t.remove(l),i.delete(c)),r.releaseStatesOfGeometry(c),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,n.memory.geometries--}function o(e){const n=[],r=e.index,a=e.attributes.position;let s=0;if(null!==r){const e=r.array;s=r.version;for(let t=0,r=e.length;t<r;t+=3){const r=e[t+0],a=e[t+1],i=e[t+2];n.push(r,a,a,i,i,r)}}else{const e=a.array;s=a.version;for(let t=0,r=e.length/3-1;t<r;t+=3){const e=t+0,r=t+1,a=t+2;n.push(e,r,r,a,a,e)}}const o=new(Fa(n)>65535?Ra:Aa)(n,1);o.version=s;const c=i.get(e);c&&t.remove(c),i.set(e,o)}return{get:function(e,t){let r=a.get(t);return r||(t.addEventListener("dispose",s),t.isBufferGeometry?r=t:t.isGeometry&&(void 0===t._bufferGeometry&&(t._bufferGeometry=(new Xa).setFromObject(e)),r=t._bufferGeometry),a.set(t,r),n.memory.geometries++,r)},update:function(e){const n=e.attributes;for(const e in n)t.update(n[e],34962);const r=e.morphAttributes;for(const e in r){const n=r[e];for(let e=0,r=n.length;e<r;e++)t.update(n[e],34962)}},getWireframeAttribute:function(e){const t=i.get(e);if(t){const n=e.index;null!==n&&t.version<n.version&&o(e)}else o(e);return i.get(e)}}}function Hi(e,t,n,r){const a=r.isWebGL2;let i,s,o;this.setMode=function(e){i=e},this.setIndex=function(e){s=e.type,o=e.bytesPerElement},this.render=function(t,r){e.drawElements(i,r,s,t*o),n.update(r,i,1)},this.renderInstances=function(r,c,l){if(0===l)return;let u,h;if(a)u=e,h="drawElementsInstanced";else if(u=t.get("ANGLE_instanced_arrays"),h="drawElementsInstancedANGLE",null===u)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");u[h](i,c,s,r*o,l),n.update(c,i,l)}}function Wi(e){const t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(e,n,r){switch(t.calls++,n){case 4:t.triangles+=r*(e/3);break;case 1:t.lines+=r*(e/2);break;case 3:t.lines+=r*(e-1);break;case 2:t.lines+=r*e;break;case 0:t.points+=r*e;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",n)}}}}function Vi(e,t){return e[0]-t[0]}function ji(e,t){return Math.abs(t[1])-Math.abs(e[1])}function Xi(e){const t={},n=new Float32Array(8),r=[];for(let e=0;e<8;e++)r[e]=[e,0];return{update:function(a,i,s,o){const c=a.morphTargetInfluences,l=void 0===c?0:c.length;let u=t[i.id];if(void 0===u){u=[];for(let e=0;e<l;e++)u[e]=[e,0];t[i.id]=u}for(let e=0;e<l;e++){const t=u[e];t[0]=e,t[1]=c[e]}u.sort(ji);for(let e=0;e<8;e++)e<l&&u[e][1]?(r[e][0]=u[e][0],r[e][1]=u[e][1]):(r[e][0]=Number.MAX_SAFE_INTEGER,r[e][1]=0);r.sort(Vi);const h=s.morphTargets&&i.morphAttributes.position,d=s.morphNormals&&i.morphAttributes.normal;let p=0;for(let e=0;e<8;e++){const t=r[e],a=t[0],s=t[1];a!==Number.MAX_SAFE_INTEGER&&s?(h&&i.getAttribute("morphTarget"+e)!==h[a]&&i.setAttribute("morphTarget"+e,h[a]),d&&i.getAttribute("morphNormal"+e)!==d[a]&&i.setAttribute("morphNormal"+e,d[a]),n[e]=s,p+=s):(h&&!0===i.hasAttribute("morphTarget"+e)&&i.deleteAttribute("morphTarget"+e),d&&!0===i.hasAttribute("morphNormal"+e)&&i.deleteAttribute("morphNormal"+e),n[e]=0)}const f=i.morphTargetsRelative?1:1-p;o.getUniforms().setValue(e,"morphTargetBaseInfluence",f),o.getUniforms().setValue(e,"morphTargetInfluences",n)}}}function qi(e,t,n,r){let a=new WeakMap;function i(e){const t=e.target;t.removeEventListener("dispose",i),n.remove(t.instanceMatrix),null!==t.instanceColor&&n.remove(t.instanceColor)}return{update:function(e){const s=r.render.frame,o=e.geometry,c=t.get(e,o);return a.get(c)!==s&&(o.isGeometry&&c.updateFromObject(e),t.update(c),a.set(c,s)),e.isInstancedMesh&&(!1===e.hasEventListener("dispose",i)&&e.addEventListener("dispose",i),n.update(e.instanceMatrix,34962),null!==e.instanceColor&&n.update(e.instanceColor,34962)),c},dispose:function(){a=new WeakMap}}}function Yi(e=null,t=1,n=1,r=1){Vn.call(this,null),this.image={data:e,width:t,height:n,depth:r},this.magFilter=fe,this.minFilter=fe,this.wrapR=de,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}function Ki(e=null,t=1,n=1,r=1){Vn.call(this,null),this.image={data:e,width:t,height:n,depth:r},this.magFilter=fe,this.minFilter=fe,this.wrapR=de,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}Li.physical={uniforms:gi([Li.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Un(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new xa(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:Ri.meshphysical_vert,fragmentShader:Ri.meshphysical_frag},Yi.prototype=Object.create(Vn.prototype),Yi.prototype.constructor=Yi,Yi.prototype.isDataTexture2DArray=!0,Ki.prototype=Object.create(Vn.prototype),Ki.prototype.constructor=Ki,Ki.prototype.isDataTexture3D=!0;const Zi=new Vn,Ji=new Yi,Qi=new Ki,es=new Ti,ts=[],ns=[],rs=new Float32Array(16),as=new Float32Array(9),is=new Float32Array(4);function ss(e,t,n){const r=e[0];if(r<=0||r>0)return e;const a=t*n;let i=ts[a];if(void 0===i&&(i=new Float32Array(a),ts[a]=i),0!==t){r.toArray(i,0);for(let r=1,a=0;r!==t;++r)a+=n,e[r].toArray(i,a)}return i}function os(e,t){if(e.length!==t.length)return!1;for(let n=0,r=e.length;n<r;n++)if(e[n]!==t[n])return!1;return!0}function cs(e,t){for(let n=0,r=t.length;n<r;n++)e[n]=t[n]}function ls(e,t){let n=ns[t];void 0===n&&(n=new Int32Array(t),ns[t]=n);for(let r=0;r!==t;++r)n[r]=e.allocateTextureUnit();return n}function us(e,t){const n=this.cache;n[0]!==t&&(e.uniform1f(this.addr,t),n[0]=t)}function hs(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2f(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(os(n,t))return;e.uniform2fv(this.addr,t),cs(n,t)}}function ds(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3f(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else if(void 0!==t.r)n[0]===t.r&&n[1]===t.g&&n[2]===t.b||(e.uniform3f(this.addr,t.r,t.g,t.b),n[0]=t.r,n[1]=t.g,n[2]=t.b);else{if(os(n,t))return;e.uniform3fv(this.addr,t),cs(n,t)}}function ps(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(os(n,t))return;e.uniform4fv(this.addr,t),cs(n,t)}}function fs(e,t){const n=this.cache,r=t.elements;if(void 0===r){if(os(n,t))return;e.uniformMatrix2fv(this.addr,!1,t),cs(n,t)}else{if(os(n,r))return;is.set(r),e.uniformMatrix2fv(this.addr,!1,is),cs(n,r)}}function ms(e,t){const n=this.cache,r=t.elements;if(void 0===r){if(os(n,t))return;e.uniformMatrix3fv(this.addr,!1,t),cs(n,t)}else{if(os(n,r))return;as.set(r),e.uniformMatrix3fv(this.addr,!1,as),cs(n,r)}}function gs(e,t){const n=this.cache,r=t.elements;if(void 0===r){if(os(n,t))return;e.uniformMatrix4fv(this.addr,!1,t),cs(n,t)}else{if(os(n,r))return;rs.set(r),e.uniformMatrix4fv(this.addr,!1,rs),cs(n,r)}}function ys(e,t,n){const r=this.cache,a=n.allocateTextureUnit();r[0]!==a&&(e.uniform1i(this.addr,a),r[0]=a),n.safeSetTexture2D(t||Zi,a)}function xs(e,t,n){const r=this.cache,a=n.allocateTextureUnit();r[0]!==a&&(e.uniform1i(this.addr,a),r[0]=a),n.setTexture2DArray(t||Ji,a)}function vs(e,t,n){const r=this.cache,a=n.allocateTextureUnit();r[0]!==a&&(e.uniform1i(this.addr,a),r[0]=a),n.setTexture3D(t||Qi,a)}function bs(e,t,n){const r=this.cache,a=n.allocateTextureUnit();r[0]!==a&&(e.uniform1i(this.addr,a),r[0]=a),n.safeSetTextureCube(t||es,a)}function ws(e,t){const n=this.cache;n[0]!==t&&(e.uniform1i(this.addr,t),n[0]=t)}function _s(e,t){const n=this.cache;os(n,t)||(e.uniform2iv(this.addr,t),cs(n,t))}function Ts(e,t){const n=this.cache;os(n,t)||(e.uniform3iv(this.addr,t),cs(n,t))}function Ss(e,t){const n=this.cache;os(n,t)||(e.uniform4iv(this.addr,t),cs(n,t))}function Es(e,t){const n=this.cache;n[0]!==t&&(e.uniform1ui(this.addr,t),n[0]=t)}function Ms(e,t){e.uniform1fv(this.addr,t)}function Is(e,t){e.uniform1iv(this.addr,t)}function Ns(e,t){e.uniform2iv(this.addr,t)}function Cs(e,t){e.uniform3iv(this.addr,t)}function As(e,t){e.uniform4iv(this.addr,t)}function ks(e,t){const n=ss(t,this.size,2);e.uniform2fv(this.addr,n)}function Rs(e,t){const n=ss(t,this.size,3);e.uniform3fv(this.addr,n)}function Ds(e,t){const n=ss(t,this.size,4);e.uniform4fv(this.addr,n)}function Ls(e,t){const n=ss(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,n)}function Os(e,t){const n=ss(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,n)}function Ps(e,t){const n=ss(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,n)}function Fs(e,t,n){const r=t.length,a=ls(n,r);e.uniform1iv(this.addr,a);for(let e=0;e!==r;++e)n.safeSetTexture2D(t[e]||Zi,a[e])}function Bs(e,t,n){const r=t.length,a=ls(n,r);e.uniform1iv(this.addr,a);for(let e=0;e!==r;++e)n.safeSetTextureCube(t[e]||es,a[e])}function $s(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=function(e){switch(e){case 5126:return us;case 35664:return hs;case 35665:return ds;case 35666:return ps;case 35674:return fs;case 35675:return ms;case 35676:return gs;case 5124:case 35670:return ws;case 35667:case 35671:return _s;case 35668:case 35672:return Ts;case 35669:case 35673:return Ss;case 5125:return Es;case 35678:case 36198:case 36298:case 36306:case 35682:return ys;case 35679:case 36299:case 36307:return vs;case 35680:case 36300:case 36308:case 36293:return bs;case 36289:case 36303:case 36311:case 36292:return xs}}(t.type)}function Us(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=function(e){switch(e){case 5126:return Ms;case 35664:return ks;case 35665:return Rs;case 35666:return Ds;case 35674:return Ls;case 35675:return Os;case 35676:return Ps;case 5124:case 35670:return Is;case 35667:case 35671:return Ns;case 35668:case 35672:return Cs;case 35669:case 35673:return As;case 35678:case 36198:case 36298:case 36306:case 35682:return Fs;case 35680:case 36300:case 36308:case 36293:return Bs}}(t.type)}function zs(e){this.id=e,this.seq=[],this.map={}}Us.prototype.updateCache=function(e){const t=this.cache;e instanceof Float32Array&&t.length!==e.length&&(this.cache=new Float32Array(e.length)),cs(t,e)},zs.prototype.setValue=function(e,t,n){const r=this.seq;for(let a=0,i=r.length;a!==i;++a){const i=r[a];i.setValue(e,t[i.id],n)}};const Gs=/(\w+)(\])?(\[|\.)?/g;function Hs(e,t){e.seq.push(t),e.map[t.id]=t}function Ws(e,t,n){const r=e.name,a=r.length;for(Gs.lastIndex=0;;){const i=Gs.exec(r),s=Gs.lastIndex;let o=i[1];const c="]"===i[2],l=i[3];if(c&&(o|=0),void 0===l||"["===l&&s+2===a){Hs(n,void 0===l?new $s(o,e,t):new Us(o,e,t));break}{let e=n.map[o];void 0===e&&(e=new zs(o),Hs(n,e)),n=e}}}function Vs(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,35718);for(let r=0;r<n;++r){const n=e.getActiveUniform(t,r);Ws(n,e.getUniformLocation(t,n.name),this)}}function js(e,t,n){const r=e.createShader(t);return e.shaderSource(r,n),e.compileShader(r),r}Vs.prototype.setValue=function(e,t,n,r){const a=this.map[t];void 0!==a&&a.setValue(e,n,r)},Vs.prototype.setOptional=function(e,t,n){const r=t[n];void 0!==r&&this.setValue(e,n,r)},Vs.upload=function(e,t,n,r){for(let a=0,i=t.length;a!==i;++a){const i=t[a],s=n[i.id];!1!==s.needsUpdate&&i.setValue(e,s.value,r)}},Vs.seqWithValue=function(e,t){const n=[];for(let r=0,a=e.length;r!==a;++r){const a=e[r];a.id in t&&n.push(a)}return n};let Xs=0;function qs(e){switch(e){case Kt:return["Linear","( value )"];case Zt:return["sRGB","( value )"];case Qt:return["RGBE","( value )"];case tn:return["RGBM","( value, 7.0 )"];case nn:return["RGBM","( value, 16.0 )"];case rn:return["RGBD","( value, 256.0 )"];case Jt:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case en:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"]}}function Ys(e,t,n){const r=e.getShaderParameter(t,35713),a=e.getShaderInfoLog(t).trim();return r&&""===a?"":"THREE.WebGLShader: gl.getShaderInfoLog() "+n+"\n"+a+function(e){const t=e.split("\n");for(let e=0;e<t.length;e++)t[e]=e+1+": "+t[e];return t.join("\n")}(e.getShaderSource(t))}function Ks(e,t){const n=qs(t);return"vec4 "+e+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function Zs(e,t){const n=qs(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function Js(e,t){let n;switch(t){case Q:n="Linear";break;case ee:n="Reinhard";break;case te:n="OptimizedCineon";break;case ne:n="ACESFilmic";break;case re:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),n="Linear"}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function Qs(e){return""!==e}function eo(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function to(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const no=/^[ \t]*#include +<([\w\d./]+)>/gm;function ro(e){return e.replace(no,ao)}function ao(e,t){const n=Ri[t];if(void 0===n)throw new Error("Can not resolve #include <"+t+">");return ro(n)}const io=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,so=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function oo(e){return e.replace(so,lo).replace(io,co)}function co(e,t,n,r){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),lo(0,t,n,r)}function lo(e,t,n,r){let a="";for(let e=parseInt(t);e<parseInt(n);e++)a+=r.replace(/\[\s*i\s*\]/g,"[ "+e+" ]").replace(/UNROLLED_LOOP_INDEX/g,e);return a}function uo(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function ho(e,t,n,r){const a=e.getContext(),i=n.defines;let s=n.vertexShader,o=n.fragmentShader;const c=function(e){let t="SHADOWMAP_TYPE_BASIC";return e.shadowMapType===h?t="SHADOWMAP_TYPE_PCF":e.shadowMapType===d?t="SHADOWMAP_TYPE_PCF_SOFT":e.shadowMapType===p&&(t="SHADOWMAP_TYPE_VSM"),t}(n),l=function(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case ie:case se:t="ENVMAP_TYPE_CUBE";break;case le:case ue:t="ENVMAP_TYPE_CUBE_UV"}return t}(n),u=function(e){let t="ENVMAP_MODE_REFLECTION";if(e.envMap)switch(e.envMapMode){case se:case ue:t="ENVMAP_MODE_REFRACTION"}return t}(n),f=function(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case Y:t="ENVMAP_BLENDING_MULTIPLY";break;case K:t="ENVMAP_BLENDING_MIX";break;case Z:t="ENVMAP_BLENDING_ADD"}return t}(n),m=e.gammaFactor>0?e.gammaFactor:1,g=n.isWebGL2?"":function(e){return[e.extensionDerivatives||e.envMapCubeUV||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Qs).join("\n")}(n),y=function(e){const t=[];for(const n in e){const r=e[n];!1!==r&&t.push("#define "+n+" "+r)}return t.join("\n")}(i),x=a.createProgram();let v,b,w=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(v=[y].filter(Qs).join("\n"),v.length>0&&(v+="\n"),b=[g,y].filter(Qs).join("\n"),b.length>0&&(b+="\n")):(v=[uo(n),"#define SHADER_NAME "+n.shaderName,y,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+m,"#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+u:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Qs).join("\n"),b=[g,uo(n),"#define SHADER_NAME "+n.shaderName,y,n.alphaTest?"#define ALPHATEST "+n.alphaTest+(n.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+m,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+l:"",n.envMap?"#define "+u:"",n.envMap?"#define "+f:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.sheen?"#define USE_SHEEN":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==J?"#define TONE_MAPPING":"",n.toneMapping!==J?Ri.tonemapping_pars_fragment:"",n.toneMapping!==J?Js("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",Ri.encodings_pars_fragment,n.map?Ks("mapTexelToLinear",n.mapEncoding):"",n.matcap?Ks("matcapTexelToLinear",n.matcapEncoding):"",n.envMap?Ks("envMapTexelToLinear",n.envMapEncoding):"",n.emissiveMap?Ks("emissiveMapTexelToLinear",n.emissiveMapEncoding):"",n.lightMap?Ks("lightMapTexelToLinear",n.lightMapEncoding):"",Zs("linearToOutputTexel",n.outputEncoding),n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(Qs).join("\n")),s=ro(s),s=eo(s,n),s=to(s,n),o=ro(o),o=eo(o,n),o=to(o,n),s=oo(s),o=oo(o),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(w="#version 300 es\n",v=["#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+v,b=["#define varying in",n.glslVersion===On?"":"out highp vec4 pc_fragColor;",n.glslVersion===On?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+b);const _=w+b+o,T=js(a,35633,w+v+s),S=js(a,35632,_);if(a.attachShader(x,T),a.attachShader(x,S),void 0!==n.index0AttributeName?a.bindAttribLocation(x,0,n.index0AttributeName):!0===n.morphTargets&&a.bindAttribLocation(x,0,"position"),a.linkProgram(x),e.debug.checkShaderErrors){const e=a.getProgramInfoLog(x).trim(),t=a.getShaderInfoLog(T).trim(),n=a.getShaderInfoLog(S).trim();let r=!0,i=!0;if(!1===a.getProgramParameter(x,35714)){r=!1;const t=Ys(a,T,"vertex"),n=Ys(a,S,"fragment");console.error("THREE.WebGLProgram: shader error: ",a.getError(),"35715",a.getProgramParameter(x,35715),"gl.getProgramInfoLog",e,t,n)}else""!==e?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",e):""!==t&&""!==n||(i=!1);i&&(this.diagnostics={runnable:r,programLog:e,vertexShader:{log:t,prefix:v},fragmentShader:{log:n,prefix:b}})}let E,M;return a.deleteShader(T),a.deleteShader(S),this.getUniforms=function(){return void 0===E&&(E=new Vs(a,x)),E},this.getAttributes=function(){return void 0===M&&(M=function(e,t){const n={},r=e.getProgramParameter(t,35721);for(let a=0;a<r;a++){const r=e.getActiveAttrib(t,a).name;n[r]=e.getAttribLocation(t,r)}return n}(a,x)),M},this.destroy=function(){r.releaseStatesOfProgram(this),a.deleteProgram(x),this.program=void 0},this.name=n.shaderName,this.id=Xs++,this.cacheKey=t,this.usedTimes=1,this.program=x,this.vertexShader=T,this.fragmentShader=S,this}function po(e,t,n,r,a,i){const s=[],o=r.isWebGL2,c=r.logarithmicDepthBuffer,l=r.floatVertexTextures,u=r.maxVertexUniforms,h=r.vertexTextures;let d=r.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},f=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function y(e){let t;return e&&e.isTexture?t=e.encoding:e&&e.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),t=e.texture.encoding):t=Kt,t}return{getParameters:function(a,s,f,x,v){const b=x.fog,w=a.isMeshStandardMaterial?x.environment:null,_=t.get(a.envMap||w),T=p[a.type],S=v.isSkinnedMesh?function(e){const t=e.skeleton.bones;if(l)return 1024;{const e=u,n=Math.floor((e-20)/4),r=Math.min(n,t.length);return r<t.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+t.length+" bones. This GPU supports "+r+"."),0):r}}(v):0;let E,M;if(null!==a.precision&&(d=r.getMaxPrecision(a.precision),d!==a.precision&&console.warn("THREE.WebGLProgram.getParameters:",a.precision,"not supported, using",d,"instead.")),T){const e=Li[T];E=e.vertexShader,M=e.fragmentShader}else E=a.vertexShader,M=a.fragmentShader;const I=e.getRenderTarget();return{isWebGL2:o,shaderID:T,shaderName:a.type,vertexShader:E,fragmentShader:M,defines:a.defines,isRawShaderMaterial:!0===a.isRawShaderMaterial,glslVersion:a.glslVersion,precision:d,instancing:!0===v.isInstancedMesh,instancingColor:!0===v.isInstancedMesh&&null!==v.instanceColor,supportsVertexTextures:h,outputEncoding:null!==I?y(I.texture):e.outputEncoding,map:!!a.map,mapEncoding:y(a.map),matcap:!!a.matcap,matcapEncoding:y(a.matcap),envMap:!!_,envMapMode:_&&_.mapping,envMapEncoding:y(_),envMapCubeUV:!!_&&(_.mapping===le||_.mapping===ue),lightMap:!!a.lightMap,lightMapEncoding:y(a.lightMap),aoMap:!!a.aoMap,emissiveMap:!!a.emissiveMap,emissiveMapEncoding:y(a.emissiveMap),bumpMap:!!a.bumpMap,normalMap:!!a.normalMap,objectSpaceNormalMap:a.normalMapType===cn,tangentSpaceNormalMap:a.normalMapType===on,clearcoatMap:!!a.clearcoatMap,clearcoatRoughnessMap:!!a.clearcoatRoughnessMap,clearcoatNormalMap:!!a.clearcoatNormalMap,displacementMap:!!a.displacementMap,roughnessMap:!!a.roughnessMap,metalnessMap:!!a.metalnessMap,specularMap:!!a.specularMap,alphaMap:!!a.alphaMap,gradientMap:!!a.gradientMap,sheen:!!a.sheen,transmissionMap:!!a.transmissionMap,combine:a.combine,vertexTangents:a.normalMap&&a.vertexTangents,vertexColors:a.vertexColors,vertexUvs:!!(a.map||a.bumpMap||a.normalMap||a.specularMap||a.alphaMap||a.emissiveMap||a.roughnessMap||a.metalnessMap||a.clearcoatMap||a.clearcoatRoughnessMap||a.clearcoatNormalMap||a.displacementMap||a.transmissionMap),uvsVertexOnly:!(a.map||a.bumpMap||a.normalMap||a.specularMap||a.alphaMap||a.emissiveMap||a.roughnessMap||a.metalnessMap||a.clearcoatNormalMap||a.transmissionMap||!a.displacementMap),fog:!!b,useFog:a.fog,fogExp2:b&&b.isFogExp2,flatShading:a.flatShading,sizeAttenuation:a.sizeAttenuation,logarithmicDepthBuffer:c,skinning:a.skinning&&S>0,maxBones:S,useVertexTexture:l,morphTargets:a.morphTargets,morphNormals:a.morphNormals,maxMorphTargets:e.maxMorphTargets,maxMorphNormals:e.maxMorphNormals,numDirLights:s.directional.length,numPointLights:s.point.length,numSpotLights:s.spot.length,numRectAreaLights:s.rectArea.length,numHemiLights:s.hemi.length,numDirLightShadows:s.directionalShadowMap.length,numPointLightShadows:s.pointShadowMap.length,numSpotLightShadows:s.spotShadowMap.length,numClippingPlanes:i.numPlanes,numClipIntersection:i.numIntersection,dithering:a.dithering,shadowMapEnabled:e.shadowMap.enabled&&f.length>0,shadowMapType:e.shadowMap.type,toneMapping:a.toneMapped?e.toneMapping:J,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:a.premultipliedAlpha,alphaTest:a.alphaTest,doubleSided:a.side===g,flipSided:a.side===m,depthPacking:void 0!==a.depthPacking&&a.depthPacking,index0AttributeName:a.index0AttributeName,extensionDerivatives:a.extensions&&a.extensions.derivatives,extensionFragDepth:a.extensions&&a.extensions.fragDepth,extensionDrawBuffers:a.extensions&&a.extensions.drawBuffers,extensionShaderTextureLOD:a.extensions&&a.extensions.shaderTextureLOD,rendererExtensionFragDepth:o||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:o||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:o||n.has("EXT_shader_texture_lod"),customProgramCacheKey:a.customProgramCacheKey()}},getProgramCacheKey:function(t){const n=[];if(t.shaderID?n.push(t.shaderID):(n.push(t.fragmentShader),n.push(t.vertexShader)),void 0!==t.defines)for(const e in t.defines)n.push(e),n.push(t.defines[e]);if(!1===t.isRawShaderMaterial){for(let e=0;e<f.length;e++)n.push(t[f[e]]);n.push(e.outputEncoding),n.push(e.gammaFactor)}return n.push(t.customProgramCacheKey),n.join()},getUniforms:function(e){const t=p[e.type];let n;if(t){const e=Li[t];n=yi.clone(e.uniforms)}else n=e.uniforms;return n},acquireProgram:function(t,n){let r;for(let e=0,t=s.length;e<t;e++){const t=s[e];if(t.cacheKey===n){r=t,++r.usedTimes;break}}return void 0===r&&(r=new ho(e,n,t,a),s.push(r)),r},releaseProgram:function(e){if(0==--e.usedTimes){const t=s.indexOf(e);s[t]=s[s.length-1],s.pop(),e.destroy()}},programs:s}}function fo(){let e=new WeakMap;return{get:function(t){let n=e.get(t);return void 0===n&&(n={},e.set(t,n)),n},remove:function(t){e.delete(t)},update:function(t,n,r){e.get(t)[n]=r},dispose:function(){e=new WeakMap}}}function mo(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.program!==t.program?e.program.id-t.program.id:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function go(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function yo(e){const t=[];let n=0;const r=[],a=[],i={id:-1};function s(r,a,s,o,c,l){let u=t[n];const h=e.get(s);return void 0===u?(u={id:r.id,object:r,geometry:a,material:s,program:h.program||i,groupOrder:o,renderOrder:r.renderOrder,z:c,group:l},t[n]=u):(u.id=r.id,u.object=r,u.geometry=a,u.material=s,u.program=h.program||i,u.groupOrder=o,u.renderOrder=r.renderOrder,u.z=c,u.group=l),n++,u}return{opaque:r,transparent:a,init:function(){n=0,r.length=0,a.length=0},push:function(e,t,n,i,o,c){const l=s(e,t,n,i,o,c);(!0===n.transparent?a:r).push(l)},unshift:function(e,t,n,i,o,c){const l=s(e,t,n,i,o,c);(!0===n.transparent?a:r).unshift(l)},finish:function(){for(let e=n,r=t.length;e<r;e++){const n=t[e];if(null===n.id)break;n.id=null,n.object=null,n.geometry=null,n.material=null,n.program=null,n.group=null}},sort:function(e,t){r.length>1&&r.sort(e||mo),a.length>1&&a.sort(t||go)}}}function xo(e){let t=new WeakMap;return{get:function(n,r){const a=t.get(n);let i;return void 0===a?(i=new yo(e),t.set(n,new WeakMap),t.get(n).set(r,i)):(i=a.get(r),void 0===i&&(i=new yo(e),a.set(r,i))),i},dispose:function(){t=new WeakMap}}}function vo(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let n;switch(t.type){case"DirectionalLight":n={direction:new Zn,color:new xa};break;case"SpotLight":n={position:new Zn,direction:new Zn,color:new xa,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new Zn,color:new xa,distance:0,decay:0};break;case"HemisphereLight":n={direction:new Zn,skyColor:new xa,groundColor:new xa};break;case"RectAreaLight":n={color:new xa,position:new Zn,halfWidth:new Zn,halfHeight:new Zn}}return e[t.id]=n,n}}}let bo=0;function wo(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function _o(e,t){const n=new vo,r=function(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let n;switch(t.type){case"DirectionalLight":case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Un};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Un,shadowCameraNear:1,shadowCameraFar:1e3}}return e[t.id]=n,n}}}(),a={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let e=0;e<9;e++)a.probe.push(new Zn);const i=new Zn,s=new Er,o=new Er;return{setup:function(i){let s=0,o=0,c=0;for(let e=0;e<9;e++)a.probe[e].set(0,0,0);let l=0,u=0,h=0,d=0,p=0,f=0,m=0,g=0;i.sort(wo);for(let e=0,t=i.length;e<t;e++){const t=i[e],y=t.color,x=t.intensity,v=t.distance,b=t.shadow&&t.shadow.map?t.shadow.map.texture:null;if(t.isAmbientLight)s+=y.r*x,o+=y.g*x,c+=y.b*x;else if(t.isLightProbe)for(let e=0;e<9;e++)a.probe[e].addScaledVector(t.sh.coefficients[e],x);else if(t.isDirectionalLight){const e=n.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity),t.castShadow){const e=t.shadow,n=r.get(t);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,a.directionalShadow[l]=n,a.directionalShadowMap[l]=b,a.directionalShadowMatrix[l]=t.shadow.matrix,f++}a.directional[l]=e,l++}else if(t.isSpotLight){const e=n.get(t);if(e.position.setFromMatrixPosition(t.matrixWorld),e.color.copy(y).multiplyScalar(x),e.distance=v,e.coneCos=Math.cos(t.angle),e.penumbraCos=Math.cos(t.angle*(1-t.penumbra)),e.decay=t.decay,t.castShadow){const e=t.shadow,n=r.get(t);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,a.spotShadow[h]=n,a.spotShadowMap[h]=b,a.spotShadowMatrix[h]=t.shadow.matrix,g++}a.spot[h]=e,h++}else if(t.isRectAreaLight){const e=n.get(t);e.color.copy(y).multiplyScalar(x),e.halfWidth.set(.5*t.width,0,0),e.halfHeight.set(0,.5*t.height,0),a.rectArea[d]=e,d++}else if(t.isPointLight){const e=n.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity),e.distance=t.distance,e.decay=t.decay,t.castShadow){const e=t.shadow,n=r.get(t);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,n.shadowCameraNear=e.camera.near,n.shadowCameraFar=e.camera.far,a.pointShadow[u]=n,a.pointShadowMap[u]=b,a.pointShadowMatrix[u]=t.shadow.matrix,m++}a.point[u]=e,u++}else if(t.isHemisphereLight){const e=n.get(t);e.skyColor.copy(t.color).multiplyScalar(x),e.groundColor.copy(t.groundColor).multiplyScalar(x),a.hemi[p]=e,p++}}d>0&&(t.isWebGL2||!0===e.has("OES_texture_float_linear")?(a.rectAreaLTC1=Di.LTC_FLOAT_1,a.rectAreaLTC2=Di.LTC_FLOAT_2):!0===e.has("OES_texture_half_float_linear")?(a.rectAreaLTC1=Di.LTC_HALF_1,a.rectAreaLTC2=Di.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),a.ambient[0]=s,a.ambient[1]=o,a.ambient[2]=c;const y=a.hash;y.directionalLength===l&&y.pointLength===u&&y.spotLength===h&&y.rectAreaLength===d&&y.hemiLength===p&&y.numDirectionalShadows===f&&y.numPointShadows===m&&y.numSpotShadows===g||(a.directional.length=l,a.spot.length=h,a.rectArea.length=d,a.point.length=u,a.hemi.length=p,a.directionalShadow.length=f,a.directionalShadowMap.length=f,a.pointShadow.length=m,a.pointShadowMap.length=m,a.spotShadow.length=g,a.spotShadowMap.length=g,a.directionalShadowMatrix.length=f,a.pointShadowMatrix.length=m,a.spotShadowMatrix.length=g,y.directionalLength=l,y.pointLength=u,y.spotLength=h,y.rectAreaLength=d,y.hemiLength=p,y.numDirectionalShadows=f,y.numPointShadows=m,y.numSpotShadows=g,a.version=bo++)},setupView:function(e,t){let n=0,r=0,c=0,l=0,u=0;const h=t.matrixWorldInverse;for(let t=0,d=e.length;t<d;t++){const d=e[t];if(d.isDirectionalLight){const e=a.directional[n];e.direction.setFromMatrixPosition(d.matrixWorld),i.setFromMatrixPosition(d.target.matrixWorld),e.direction.sub(i),e.direction.transformDirection(h),n++}else if(d.isSpotLight){const e=a.spot[c];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(h),e.direction.setFromMatrixPosition(d.matrixWorld),i.setFromMatrixPosition(d.target.matrixWorld),e.direction.sub(i),e.direction.transformDirection(h),c++}else if(d.isRectAreaLight){const e=a.rectArea[l];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(h),o.identity(),s.copy(d.matrixWorld),s.premultiply(h),o.extractRotation(s),e.halfWidth.set(.5*d.width,0,0),e.halfHeight.set(0,.5*d.height,0),e.halfWidth.applyMatrix4(o),e.halfHeight.applyMatrix4(o),l++}else if(d.isPointLight){const e=a.point[r];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(h),r++}else if(d.isHemisphereLight){const e=a.hemi[u];e.direction.setFromMatrixPosition(d.matrixWorld),e.direction.transformDirection(h),e.direction.normalize(),u++}}},state:a}}function To(e,t){const n=new _o(e,t),r=[],a=[];return{init:function(){r.length=0,a.length=0},state:{lightsArray:r,shadowsArray:a,lights:n},setupLights:function(){n.setup(r)},setupLightsView:function(e){n.setupView(r,e)},pushLight:function(e){r.push(e)},pushShadow:function(e){a.push(e)}}}function So(e,t){let n=new WeakMap;return{get:function(r,a=0){let i;return!1===n.has(r)?(i=new To(e,t),n.set(r,[]),n.get(r).push(i)):a>=n.get(r).length?(i=new To(e,t),n.get(r).push(i)):i=n.get(r)[a],i},dispose:function(){n=new WeakMap}}}function Eo(e){wa.call(this),this.type="MeshDepthMaterial",this.depthPacking=an,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}function Mo(e){wa.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new Zn,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}function Io(e,t,n){let r=new Ni;const a=new Un,i=new Un,s=new Xn,o=[],c=[],l={},u={0:m,1:f,2:g},d=new xi({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new Un},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean * HALF_SAMPLE_RATE;\n\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),y=d.clone();y.defines.HORIZONTAL_PASS=1;const x=new Xa;x.setAttribute("position",new Ea(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const b=new hi(x,d),w=this;function _(n,r){const a=t.update(b);d.uniforms.shadow_pass.value=n.map.texture,d.uniforms.resolution.value=n.mapSize,d.uniforms.radius.value=n.radius,e.setRenderTarget(n.mapPass),e.clear(),e.renderBufferDirect(r,null,a,d,b,null),y.uniforms.shadow_pass.value=n.mapPass.texture,y.uniforms.resolution.value=n.mapSize,y.uniforms.radius.value=n.radius,e.setRenderTarget(n.map),e.clear(),e.renderBufferDirect(r,null,a,y,b,null)}function T(e,t,n){const r=e<<0|t<<1|n<<2;let a=o[r];return void 0===a&&(a=new Eo({depthPacking:sn,morphTargets:e,skinning:t}),o[r]=a),a}function S(e,t,n){const r=e<<0|t<<1|n<<2;let a=c[r];return void 0===a&&(a=new Mo({morphTargets:e,skinning:t}),c[r]=a),a}function E(t,n,r,a,i,s,o){let c=null,h=T,d=t.customDepthMaterial;if(!0===a.isPointLight&&(h=S,d=t.customDistanceMaterial),void 0===d){let e=!1;!0===r.morphTargets&&(e=n.morphAttributes&&n.morphAttributes.position&&n.morphAttributes.position.length>0);let a=!1;!0===t.isSkinnedMesh&&(!0===r.skinning?a=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",t)),c=h(e,a,!0===t.isInstancedMesh)}else c=d;if(e.localClippingEnabled&&!0===r.clipShadows&&0!==r.clippingPlanes.length){const e=c.uuid,t=r.uuid;let n=l[e];void 0===n&&(n={},l[e]=n);let a=n[t];void 0===a&&(a=c.clone(),n[t]=a),c=a}return c.visible=r.visible,c.wireframe=r.wireframe,c.side=o===p?null!==r.shadowSide?r.shadowSide:r.side:null!==r.shadowSide?r.shadowSide:u[r.side],c.clipShadows=r.clipShadows,c.clippingPlanes=r.clippingPlanes,c.clipIntersection=r.clipIntersection,c.wireframeLinewidth=r.wireframeLinewidth,c.linewidth=r.linewidth,!0===a.isPointLight&&!0===c.isMeshDistanceMaterial&&(c.referencePosition.setFromMatrixPosition(a.matrixWorld),c.nearDistance=i,c.farDistance=s),c}function M(n,a,i,s,o){if(!1===n.visible)return;if(n.layers.test(a.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&o===p)&&(!n.frustumCulled||r.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,n.matrixWorld);const r=t.update(n),a=n.material;if(Array.isArray(a)){const t=r.groups;for(let c=0,l=t.length;c<l;c++){const l=t[c],u=a[l.materialIndex];if(u&&u.visible){const t=E(n,r,u,s,i.near,i.far,o);e.renderBufferDirect(i,null,r,t,n,l)}}}else if(a.visible){const t=E(n,r,a,s,i.near,i.far,o);e.renderBufferDirect(i,null,r,t,n,null)}}const c=n.children;for(let e=0,t=c.length;e<t;e++)M(c[e],a,i,s,o)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=h,this.render=function(t,o,c){if(!1===w.enabled)return;if(!1===w.autoUpdate&&!1===w.needsUpdate)return;if(0===t.length)return;const l=e.getRenderTarget(),u=e.getActiveCubeFace(),h=e.getActiveMipmapLevel(),d=e.state;d.setBlending(v),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);for(let l=0,u=t.length;l<u;l++){const u=t[l],h=u.shadow;if(void 0===h){console.warn("THREE.WebGLShadowMap:",u,"has no shadow.");continue}if(!1===h.autoUpdate&&!1===h.needsUpdate)continue;a.copy(h.mapSize);const f=h.getFrameExtents();if(a.multiply(f),i.copy(h.mapSize),(a.x>n||a.y>n)&&(a.x>n&&(i.x=Math.floor(n/f.x),a.x=i.x*f.x,h.mapSize.x=i.x),a.y>n&&(i.y=Math.floor(n/f.y),a.y=i.y*f.y,h.mapSize.y=i.y)),null===h.map&&!h.isPointLightShadow&&this.type===p){const e={minFilter:ve,magFilter:ve,format:Be};h.map=new qn(a.x,a.y,e),h.map.texture.name=u.name+".shadowMap",h.mapPass=new qn(a.x,a.y,e),h.camera.updateProjectionMatrix()}if(null===h.map){const e={minFilter:fe,magFilter:fe,format:Be};h.map=new qn(a.x,a.y,e),h.map.texture.name=u.name+".shadowMap",h.camera.updateProjectionMatrix()}e.setRenderTarget(h.map),e.clear();const m=h.getViewportCount();for(let e=0;e<m;e++){const t=h.getViewport(e);s.set(i.x*t.x,i.y*t.y,i.x*t.z,i.y*t.w),d.viewport(s),h.updateMatrices(u,e),r=h.getFrustum(),M(o,c,h.camera,u,this.type)}h.isPointLightShadow||this.type!==p||_(h,c),h.needsUpdate=!1}w.needsUpdate=!1,e.setRenderTarget(l,u,h)}}function No(e,t,n){const r=n.isWebGL2,a=new function(){let t=!1;const n=new Xn;let r=null;const a=new Xn(0,0,0,0);return{setMask:function(n){r===n||t||(e.colorMask(n,n,n,n),r=n)},setLocked:function(e){t=e},setClear:function(t,r,i,s,o){!0===o&&(t*=s,r*=s,i*=s),n.set(t,r,i,s),!1===a.equals(n)&&(e.clearColor(t,r,i,s),a.copy(n))},reset:function(){t=!1,r=null,a.set(-1,0,0,0)}}},i=new function(){let t=!1,n=null,r=null,a=null;return{setTest:function(e){e?fe(2929):me(2929)},setMask:function(r){n===r||t||(e.depthMask(r),n=r)},setFunc:function(t){if(r!==t){if(t)switch(t){case z:e.depthFunc(512);break;case G:e.depthFunc(519);break;case H:e.depthFunc(513);break;case W:e.depthFunc(515);break;case V:e.depthFunc(514);break;case j:e.depthFunc(518);break;case X:e.depthFunc(516);break;case q:e.depthFunc(517);break;default:e.depthFunc(515)}else e.depthFunc(515);r=t}},setLocked:function(e){t=e},setClear:function(t){a!==t&&(e.clearDepth(t),a=t)},reset:function(){t=!1,n=null,r=null,a=null}}},l=new function(){let t=!1,n=null,r=null,a=null,i=null,s=null,o=null,c=null,l=null;return{setTest:function(e){t||(e?fe(2960):me(2960))},setMask:function(r){n===r||t||(e.stencilMask(r),n=r)},setFunc:function(t,n,s){r===t&&a===n&&i===s||(e.stencilFunc(t,n,s),r=t,a=n,i=s)},setOp:function(t,n,r){s===t&&o===n&&c===r||(e.stencilOp(t,n,r),s=t,o=n,c=r)},setLocked:function(e){t=e},setClear:function(t){l!==t&&(e.clearStencil(t),l=t)},reset:function(){t=!1,n=null,r=null,a=null,i=null,s=null,o=null,c=null,l=null}}};let u={},h=null,d=null,p=null,f=null,y=null,x=null,Y=null,K=null,Z=null,J=!1,Q=null,ee=null,te=null,ne=null,re=null;const ae=e.getParameter(35661);let ie=!1,se=0;const oe=e.getParameter(7938);-1!==oe.indexOf("WebGL")?(se=parseFloat(/^WebGL (\d)/.exec(oe)[1]),ie=se>=1):-1!==oe.indexOf("OpenGL ES")&&(se=parseFloat(/^OpenGL ES (\d)/.exec(oe)[1]),ie=se>=2);let ce=null,le={};const ue=new Xn,he=new Xn;function de(t,n,r){const a=new Uint8Array(4),i=e.createTexture();e.bindTexture(t,i),e.texParameteri(t,10241,9728),e.texParameteri(t,10240,9728);for(let t=0;t<r;t++)e.texImage2D(n+t,0,6408,1,1,0,6408,5121,a);return i}const pe={};function fe(t){!0!==u[t]&&(e.enable(t),u[t]=!0)}function me(t){!1!==u[t]&&(e.disable(t),u[t]=!1)}pe[3553]=de(3553,3553,1),pe[34067]=de(34067,34069,6),a.setClear(0,0,0,1),i.setClear(1),l.setClear(0),fe(2929),i.setFunc(W),ve(!1),be(o),fe(2884),xe(v);const ge={[E]:32774,[M]:32778,[I]:32779};if(r)ge[N]=32775,ge[C]=32776;else{const e=t.get("EXT_blend_minmax");null!==e&&(ge[N]=e.MIN_EXT,ge[C]=e.MAX_EXT)}const ye={[A]:0,[k]:1,[R]:768,[L]:770,[U]:776,[B]:774,[P]:772,[D]:769,[O]:771,[$]:775,[F]:773};function xe(t,n,r,a,i,s,o,c){if(t!==v){if(d||(fe(3042),d=!0),t===S)i=i||n,s=s||r,o=o||a,n===f&&i===Y||(e.blendEquationSeparate(ge[n],ge[i]),f=n,Y=i),r===y&&a===x&&s===K&&o===Z||(e.blendFuncSeparate(ye[r],ye[a],ye[s],ye[o]),y=r,x=a,K=s,Z=o),p=t,J=null;else if(t!==p||c!==J){if(f===E&&Y===E||(e.blendEquation(32774),f=E,Y=E),c)switch(t){case b:e.blendFuncSeparate(1,771,1,771);break;case w:e.blendFunc(1,1);break;case _:e.blendFuncSeparate(0,0,769,771);break;case T:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case b:e.blendFuncSeparate(770,771,1,771);break;case w:e.blendFunc(770,1);break;case _:e.blendFunc(0,769);break;case T:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}y=null,x=null,K=null,Z=null,p=t,J=c}}else d&&(me(3042),d=!1)}function ve(t){Q!==t&&(t?e.frontFace(2304):e.frontFace(2305),Q=t)}function be(t){t!==s?(fe(2884),t!==ee&&(t===o?e.cullFace(1029):t===c?e.cullFace(1028):e.cullFace(1032))):me(2884),ee=t}function we(t,n,r){t?(fe(32823),ne===n&&re===r||(e.polygonOffset(n,r),ne=n,re=r)):me(32823)}function _e(t){void 0===t&&(t=33984+ae-1),ce!==t&&(e.activeTexture(t),ce=t)}return{buffers:{color:a,depth:i,stencil:l},enable:fe,disable:me,useProgram:function(t){return h!==t&&(e.useProgram(t),h=t,!0)},setBlending:xe,setMaterial:function(e,t){e.side===g?me(2884):fe(2884);let n=e.side===m;t&&(n=!n),ve(n),e.blending===b&&!1===e.transparent?xe(v):xe(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),i.setFunc(e.depthFunc),i.setTest(e.depthTest),i.setMask(e.depthWrite),a.setMask(e.colorWrite);const r=e.stencilWrite;l.setTest(r),r&&(l.setMask(e.stencilWriteMask),l.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),l.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),we(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits)},setFlipSided:ve,setCullFace:be,setLineWidth:function(t){t!==te&&(ie&&e.lineWidth(t),te=t)},setPolygonOffset:we,setScissorTest:function(e){e?fe(3089):me(3089)},activeTexture:_e,bindTexture:function(t,n){null===ce&&_e();let r=le[ce];void 0===r&&(r={type:void 0,texture:void 0},le[ce]=r),r.type===t&&r.texture===n||(e.bindTexture(t,n||pe[t]),r.type=t,r.texture=n)},unbindTexture:function(){const t=le[ce];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:function(t){!1===ue.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),ue.copy(t))},viewport:function(t){!1===he.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),he.copy(t))},reset:function(){u={},ce=null,le={},h=null,d=null,p=null,f=null,y=null,x=null,Y=null,K=null,Z=null,J=!1,Q=null,ee=null,te=null,ne=null,re=null,a.reset(),i.reset(),l.reset()}}}function Co(e,t,n,r,a,i,s){const o=a.isWebGL2,c=a.maxTextures,l=a.maxCubemapSize,u=a.maxTextureSize,h=a.maxSamples,d=new WeakMap;let p,f=!1;try{f="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(e){}function m(e,t){return f?new OffscreenCanvas(e,t):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function g(e,t,n,r){let a=1;if((e.width>r||e.height>r)&&(a=r/Math.max(e.width,e.height)),a<1||!0===t){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const r=t?$n.floorPowerOfTwo:Math.floor,i=r(a*e.width),s=r(a*e.height);void 0===p&&(p=m(i,s));const o=n?m(i,s):p;return o.width=i,o.height=s,o.getContext("2d").drawImage(e,0,0,i,s),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+i+"x"+s+")."),o}return"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+")."),e}return e}function y(e){return $n.isPowerOfTwo(e.width)&&$n.isPowerOfTwo(e.height)}function x(e,t){return e.generateMipmaps&&t&&e.minFilter!==fe&&e.minFilter!==ve}function v(t,n,a,i){e.generateMipmap(t),r.get(n).__maxMipLevel=Math.log(Math.max(a,i))*Math.LOG2E}function b(n,r,a){if(!1===o)return r;if(null!==n){if(void 0!==e[n])return e[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let i=r;return 6403===r&&(5126===a&&(i=33326),5131===a&&(i=33325),5121===a&&(i=33321)),6407===r&&(5126===a&&(i=34837),5131===a&&(i=34843),5121===a&&(i=32849)),6408===r&&(5126===a&&(i=34836),5131===a&&(i=34842),5121===a&&(i=32856)),33325!==i&&33326!==i&&34842!==i&&34836!==i||t.get("EXT_color_buffer_float"),i}function w(e){return e===fe||e===me||e===ye?9728:9729}function _(t){const n=t.target;n.removeEventListener("dispose",_),function(t){const n=r.get(t);void 0!==n.__webglInit&&(e.deleteTexture(n.__webglTexture),r.remove(t))}(n),n.isVideoTexture&&d.delete(n),s.memory.textures--}function T(t){const n=t.target;n.removeEventListener("dispose",T),function(t){const n=r.get(t),a=r.get(t.texture);if(t){if(void 0!==a.__webglTexture&&e.deleteTexture(a.__webglTexture),t.depthTexture&&t.depthTexture.dispose(),t.isWebGLCubeRenderTarget)for(let t=0;t<6;t++)e.deleteFramebuffer(n.__webglFramebuffer[t]),n.__webglDepthbuffer&&e.deleteRenderbuffer(n.__webglDepthbuffer[t]);else e.deleteFramebuffer(n.__webglFramebuffer),n.__webglDepthbuffer&&e.deleteRenderbuffer(n.__webglDepthbuffer),n.__webglMultisampledFramebuffer&&e.deleteFramebuffer(n.__webglMultisampledFramebuffer),n.__webglColorRenderbuffer&&e.deleteRenderbuffer(n.__webglColorRenderbuffer),n.__webglDepthRenderbuffer&&e.deleteRenderbuffer(n.__webglDepthRenderbuffer);r.remove(t.texture),r.remove(t)}}(n),s.memory.textures--}let S=0;function E(e,t){const a=r.get(e);if(e.isVideoTexture&&function(e){const t=s.render.frame;d.get(e)!==t&&(d.set(e,t),e.update())}(e),e.version>0&&a.__version!==e.version){const n=e.image;if(void 0===n)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==n.complete)return void k(a,e,t);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.activeTexture(33984+t),n.bindTexture(3553,a.__webglTexture)}function M(t,a){const s=r.get(t);t.version>0&&s.__version!==t.version?function(t,r,a){if(6!==r.image.length)return;A(t,r),n.activeTexture(33984+a),n.bindTexture(34067,t.__webglTexture),e.pixelStorei(37440,r.flipY);const s=r&&(r.isCompressedTexture||r.image[0].isCompressedTexture),c=r.image[0]&&r.image[0].isDataTexture,u=[];for(let e=0;e<6;e++)u[e]=s||c?c?r.image[e].image:r.image[e]:g(r.image[e],!1,!0,l);const h=u[0],d=y(h)||o,p=i.convert(r.format),f=i.convert(r.type),m=b(r.internalFormat,p,f);let w;if(C(34067,r,d),s){for(let e=0;e<6;e++){w=u[e].mipmaps;for(let t=0;t<w.length;t++){const a=w[t];r.format!==Be&&r.format!==Fe?null!==p?n.compressedTexImage2D(34069+e,t,m,a.width,a.height,0,a.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(34069+e,t,m,a.width,a.height,0,p,f,a.data)}}t.__maxMipLevel=w.length-1}else{w=r.mipmaps;for(let e=0;e<6;e++)if(c){n.texImage2D(34069+e,0,m,u[e].width,u[e].height,0,p,f,u[e].data);for(let t=0;t<w.length;t++){const r=w[t].image[e].image;n.texImage2D(34069+e,t+1,m,r.width,r.height,0,p,f,r.data)}}else{n.texImage2D(34069+e,0,m,p,f,u[e]);for(let t=0;t<w.length;t++){const r=w[t];n.texImage2D(34069+e,t+1,m,p,f,r.image[e])}}t.__maxMipLevel=w.length}x(r,d)&&v(34067,r,h.width,h.height),t.__version=r.version,r.onUpdate&&r.onUpdate(r)}(s,t,a):(n.activeTexture(33984+a),n.bindTexture(34067,s.__webglTexture))}const I={[he]:10497,[de]:33071,[pe]:33648},N={[fe]:9728,[me]:9984,[ye]:9986,[ve]:9729,[be]:9985,[_e]:9987};function C(n,i,s){s?(e.texParameteri(n,10242,I[i.wrapS]),e.texParameteri(n,10243,I[i.wrapT]),32879!==n&&35866!==n||e.texParameteri(n,32882,I[i.wrapR]),e.texParameteri(n,10240,N[i.magFilter]),e.texParameteri(n,10241,N[i.minFilter])):(e.texParameteri(n,10242,33071),e.texParameteri(n,10243,33071),32879!==n&&35866!==n||e.texParameteri(n,32882,33071),i.wrapS===de&&i.wrapT===de||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(n,10240,w(i.magFilter)),e.texParameteri(n,10241,w(i.minFilter)),i.minFilter!==fe&&i.minFilter!==ve&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));const c=t.get("EXT_texture_filter_anisotropic");if(c){if(i.type===Ae&&null===t.get("OES_texture_float_linear"))return;if(i.type===ke&&null===(o||t.get("OES_texture_half_float_linear")))return;(i.anisotropy>1||r.get(i).__currentAnisotropy)&&(e.texParameterf(n,c.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(i.anisotropy,a.getMaxAnisotropy())),r.get(i).__currentAnisotropy=i.anisotropy)}}function A(t,n){void 0===t.__webglInit&&(t.__webglInit=!0,n.addEventListener("dispose",_),t.__webglTexture=e.createTexture(),s.memory.textures++)}function k(t,r,a){let s=3553;r.isDataTexture2DArray&&(s=35866),r.isDataTexture3D&&(s=32879),A(t,r),n.activeTexture(33984+a),n.bindTexture(s,t.__webglTexture),e.pixelStorei(37440,r.flipY),e.pixelStorei(37441,r.premultiplyAlpha),e.pixelStorei(3317,r.unpackAlignment);const c=function(e){return!o&&(e.wrapS!==de||e.wrapT!==de||e.minFilter!==fe&&e.minFilter!==ve)}(r)&&!1===y(r.image),l=g(r.image,c,!1,u),h=y(l)||o,d=i.convert(r.format);let p,f=i.convert(r.type),m=b(r.internalFormat,d,f);C(s,r,h);const w=r.mipmaps;if(r.isDepthTexture)m=6402,o?m=r.type===Ae?36012:r.type===Ce?33190:r.type===Oe?35056:33189:r.type===Ae&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),r.format===Ge&&6402===m&&r.type!==Ie&&r.type!==Ce&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),r.type=Ie,f=i.convert(r.type)),r.format===He&&6402===m&&(m=34041,r.type!==Oe&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),r.type=Oe,f=i.convert(r.type))),n.texImage2D(3553,0,m,l.width,l.height,0,d,f,null);else if(r.isDataTexture)if(w.length>0&&h){for(let e=0,t=w.length;e<t;e++)p=w[e],n.texImage2D(3553,e,m,p.width,p.height,0,d,f,p.data);r.generateMipmaps=!1,t.__maxMipLevel=w.length-1}else n.texImage2D(3553,0,m,l.width,l.height,0,d,f,l.data),t.__maxMipLevel=0;else if(r.isCompressedTexture){for(let e=0,t=w.length;e<t;e++)p=w[e],r.format!==Be&&r.format!==Fe?null!==d?n.compressedTexImage2D(3553,e,m,p.width,p.height,0,p.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(3553,e,m,p.width,p.height,0,d,f,p.data);t.__maxMipLevel=w.length-1}else if(r.isDataTexture2DArray)n.texImage3D(35866,0,m,l.width,l.height,l.depth,0,d,f,l.data),t.__maxMipLevel=0;else if(r.isDataTexture3D)n.texImage3D(32879,0,m,l.width,l.height,l.depth,0,d,f,l.data),t.__maxMipLevel=0;else if(w.length>0&&h){for(let e=0,t=w.length;e<t;e++)p=w[e],n.texImage2D(3553,e,m,d,f,p);r.generateMipmaps=!1,t.__maxMipLevel=w.length-1}else n.texImage2D(3553,0,m,d,f,l),t.__maxMipLevel=0;x(r,h)&&v(s,r,l.width,l.height),t.__version=r.version,r.onUpdate&&r.onUpdate(r)}function R(t,a,s,o){const c=i.convert(a.texture.format),l=i.convert(a.texture.type),u=b(a.texture.internalFormat,c,l);n.texImage2D(o,0,u,a.width,a.height,0,c,l,null),e.bindFramebuffer(36160,t),e.framebufferTexture2D(36160,s,o,r.get(a.texture).__webglTexture,0),e.bindFramebuffer(36160,null)}function D(t,n,r){if(e.bindRenderbuffer(36161,t),n.depthBuffer&&!n.stencilBuffer){let a=33189;if(r){const t=n.depthTexture;t&&t.isDepthTexture&&(t.type===Ae?a=36012:t.type===Ce&&(a=33190));const r=L(n);e.renderbufferStorageMultisample(36161,r,a,n.width,n.height)}else e.renderbufferStorage(36161,a,n.width,n.height);e.framebufferRenderbuffer(36160,36096,36161,t)}else if(n.depthBuffer&&n.stencilBuffer){if(r){const t=L(n);e.renderbufferStorageMultisample(36161,t,35056,n.width,n.height)}else e.renderbufferStorage(36161,34041,n.width,n.height);e.framebufferRenderbuffer(36160,33306,36161,t)}else{const t=i.convert(n.texture.format),a=i.convert(n.texture.type),s=b(n.texture.internalFormat,t,a);if(r){const t=L(n);e.renderbufferStorageMultisample(36161,t,s,n.width,n.height)}else e.renderbufferStorage(36161,s,n.width,n.height)}e.bindRenderbuffer(36161,null)}function L(e){return o&&e.isWebGLMultisampleRenderTarget?Math.min(h,e.samples):0}let O=!1,P=!1;this.allocateTextureUnit=function(){const e=S;return e>=c&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+c),S+=1,e},this.resetTextureUnits=function(){S=0},this.setTexture2D=E,this.setTexture2DArray=function(e,t){const a=r.get(e);e.version>0&&a.__version!==e.version?k(a,e,t):(n.activeTexture(33984+t),n.bindTexture(35866,a.__webglTexture))},this.setTexture3D=function(e,t){const a=r.get(e);e.version>0&&a.__version!==e.version?k(a,e,t):(n.activeTexture(33984+t),n.bindTexture(32879,a.__webglTexture))},this.setTextureCube=M,this.setupRenderTarget=function(t){const a=r.get(t),c=r.get(t.texture);t.addEventListener("dispose",T),c.__webglTexture=e.createTexture(),s.memory.textures++;const l=!0===t.isWebGLCubeRenderTarget,u=!0===t.isWebGLMultisampleRenderTarget,h=y(t)||o;if(!o||t.texture.format!==Fe||t.texture.type!==Ae&&t.texture.type!==ke||(t.texture.format=Be,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),l){a.__webglFramebuffer=[];for(let t=0;t<6;t++)a.__webglFramebuffer[t]=e.createFramebuffer()}else if(a.__webglFramebuffer=e.createFramebuffer(),u)if(o){a.__webglMultisampledFramebuffer=e.createFramebuffer(),a.__webglColorRenderbuffer=e.createRenderbuffer(),e.bindRenderbuffer(36161,a.__webglColorRenderbuffer);const n=i.convert(t.texture.format),r=i.convert(t.texture.type),s=b(t.texture.internalFormat,n,r),o=L(t);e.renderbufferStorageMultisample(36161,o,s,t.width,t.height),e.bindFramebuffer(36160,a.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064,36161,a.__webglColorRenderbuffer),e.bindRenderbuffer(36161,null),t.depthBuffer&&(a.__webglDepthRenderbuffer=e.createRenderbuffer(),D(a.__webglDepthRenderbuffer,t,!0)),e.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(l){n.bindTexture(34067,c.__webglTexture),C(34067,t.texture,h);for(let e=0;e<6;e++)R(a.__webglFramebuffer[e],t,36064,34069+e);x(t.texture,h)&&v(34067,t.texture,t.width,t.height),n.bindTexture(34067,null)}else n.bindTexture(3553,c.__webglTexture),C(3553,t.texture,h),R(a.__webglFramebuffer,t,36064,3553),x(t.texture,h)&&v(3553,t.texture,t.width,t.height),n.bindTexture(3553,null);t.depthBuffer&&function(t){const n=r.get(t),a=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture){if(a)throw new Error("target.depthTexture not supported in Cube render targets");!function(t,n){if(n&&n.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(36160,t),!n.depthTexture||!n.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");r.get(n.depthTexture).__webglTexture&&n.depthTexture.image.width===n.width&&n.depthTexture.image.height===n.height||(n.depthTexture.image.width=n.width,n.depthTexture.image.height=n.height,n.depthTexture.needsUpdate=!0),E(n.depthTexture,0);const a=r.get(n.depthTexture).__webglTexture;if(n.depthTexture.format===Ge)e.framebufferTexture2D(36160,36096,3553,a,0);else{if(n.depthTexture.format!==He)throw new Error("Unknown depthTexture format");e.framebufferTexture2D(36160,33306,3553,a,0)}}(n.__webglFramebuffer,t)}else if(a){n.__webglDepthbuffer=[];for(let r=0;r<6;r++)e.bindFramebuffer(36160,n.__webglFramebuffer[r]),n.__webglDepthbuffer[r]=e.createRenderbuffer(),D(n.__webglDepthbuffer[r],t,!1)}else e.bindFramebuffer(36160,n.__webglFramebuffer),n.__webglDepthbuffer=e.createRenderbuffer(),D(n.__webglDepthbuffer,t,!1);e.bindFramebuffer(36160,null)}(t)},this.updateRenderTargetMipmap=function(e){const t=e.texture;if(x(t,y(e)||o)){const a=e.isWebGLCubeRenderTarget?34067:3553,i=r.get(t).__webglTexture;n.bindTexture(a,i),v(a,t,e.width,e.height),n.bindTexture(a,null)}},this.updateMultisampleRenderTarget=function(t){if(t.isWebGLMultisampleRenderTarget)if(o){const n=r.get(t);e.bindFramebuffer(36008,n.__webglMultisampledFramebuffer),e.bindFramebuffer(36009,n.__webglFramebuffer);const a=t.width,i=t.height;let s=16384;t.depthBuffer&&(s|=256),t.stencilBuffer&&(s|=1024),e.blitFramebuffer(0,0,a,i,0,0,a,i,s,9728),e.bindFramebuffer(36160,n.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(e,t){e&&e.isWebGLRenderTarget&&(!1===O&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),O=!0),e=e.texture),E(e,t)},this.safeSetTextureCube=function(e,t){e&&e.isWebGLCubeRenderTarget&&(!1===P&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),P=!0),e=e.texture),M(e,t)}}function Ao(e,t,n){const r=n.isWebGL2;return{convert:function(e){let n;if(e===Se)return 5121;if(e===Re)return 32819;if(e===De)return 32820;if(e===Le)return 33635;if(e===Ee)return 5120;if(e===Me)return 5122;if(e===Ie)return 5123;if(e===Ne)return 5124;if(e===Ce)return 5125;if(e===Ae)return 5126;if(e===ke)return r?5131:(n=t.get("OES_texture_half_float"),null!==n?n.HALF_FLOAT_OES:null);if(e===Pe)return 6406;if(e===Fe)return 6407;if(e===Be)return 6408;if(e===$e)return 6409;if(e===Ue)return 6410;if(e===Ge)return 6402;if(e===He)return 34041;if(e===We)return 6403;if(e===Ve)return 36244;if(e===je)return 33319;if(e===Xe)return 33320;if(e===qe)return 36248;if(e===Ye)return 36249;if(e===Ke||e===Ze||e===Je||e===Qe){if(n=t.get("WEBGL_compressed_texture_s3tc"),null===n)return null;if(e===Ke)return n.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===Ze)return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===Je)return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===Qe)return n.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(e===et||e===tt||e===nt||e===rt){if(n=t.get("WEBGL_compressed_texture_pvrtc"),null===n)return null;if(e===et)return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===tt)return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===nt)return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===rt)return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(e===at)return n=t.get("WEBGL_compressed_texture_etc1"),null!==n?n.COMPRESSED_RGB_ETC1_WEBGL:null;if((e===it||e===st)&&(n=t.get("WEBGL_compressed_texture_etc"),null!==n)){if(e===it)return n.COMPRESSED_RGB8_ETC2;if(e===st)return n.COMPRESSED_RGBA8_ETC2_EAC}return e===ot||e===ct||e===lt||e===ut||e===ht||e===dt||e===pt||e===ft||e===mt||e===gt||e===yt||e===xt||e===vt||e===bt||e===_t||e===Tt||e===St||e===Et||e===Mt||e===It||e===Nt||e===Ct||e===At||e===kt||e===Rt||e===Dt||e===Lt||e===Ot?(n=t.get("WEBGL_compressed_texture_astc"),null!==n?e:null):e===wt?(n=t.get("EXT_texture_compression_bptc"),null!==n?e:null):e===Oe?r?34042:(n=t.get("WEBGL_depth_texture"),null!==n?n.UNSIGNED_INT_24_8_WEBGL:null):void 0}}}function ko(e=[]){bi.call(this),this.cameras=e}function Ro(){Kr.call(this),this.type="Group"}function Do(){this._targetRay=null,this._grip=null,this._hand=null}function Lo(e,t){const n=this;let r=null,a=1,i=null,s="local-floor",o=null;const c=[],l=new Map,u=new bi;u.layers.enable(1),u.viewport=new Xn;const h=new bi;h.layers.enable(2),h.viewport=new Xn;const d=[u,h],p=new ko;p.layers.enable(1),p.layers.enable(2);let f=null,m=null;function g(e){const t=l.get(e.inputSource);t&&t.dispatchEvent({type:e.type,data:e.inputSource})}function y(){l.forEach((function(e,t){e.disconnect(t)})),l.clear(),e.setFramebuffer(null),e.setRenderTarget(e.getRenderTarget()),S.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function x(e){i=e,S.setContext(r),S.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}function v(e){const t=r.inputSources;for(let e=0;e<c.length;e++)l.set(t[e],c[e]);for(let t=0;t<e.removed.length;t++){const n=e.removed[t],r=l.get(n);r&&(r.dispatchEvent({type:"disconnected",data:n}),l.delete(n))}for(let t=0;t<e.added.length;t++){const n=e.added[t],r=l.get(n);r&&r.dispatchEvent({type:"connected",data:n})}}this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=c[e];return void 0===t&&(t=new Do,c[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=c[e];return void 0===t&&(t=new Do,c[e]=t),t.getGripSpace()},this.getHand=function(e){let t=c[e];return void 0===t&&(t=new Do,c[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){a=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){s=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return i},this.getSession=function(){return r},this.setSession=function(e){if(r=e,null!==r){r.addEventListener("select",g),r.addEventListener("selectstart",g),r.addEventListener("selectend",g),r.addEventListener("squeeze",g),r.addEventListener("squeezestart",g),r.addEventListener("squeezeend",g),r.addEventListener("end",y);const e=t.getContextAttributes();!0!==e.xrCompatible&&t.makeXRCompatible();const n={antialias:e.antialias,alpha:e.alpha,depth:e.depth,stencil:e.stencil,framebufferScaleFactor:a},i=new XRWebGLLayer(r,t,n);r.updateRenderState({baseLayer:i}),r.requestReferenceSpace(s).then(x),r.addEventListener("inputsourceschange",v)}};const b=new Zn,w=new Zn;function _(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.getCamera=function(e){p.near=h.near=u.near=e.near,p.far=h.far=u.far=e.far,f===p.near&&m===p.far||(r.updateRenderState({depthNear:p.near,depthFar:p.far}),f=p.near,m=p.far);const t=e.parent,n=p.cameras;_(p,t);for(let e=0;e<n.length;e++)_(n[e],t);e.matrixWorld.copy(p.matrixWorld);const a=e.children;for(let e=0,t=a.length;e<t;e++)a[e].updateMatrixWorld(!0);return 2===n.length?function(e,t,n){b.setFromMatrixPosition(t.matrixWorld),w.setFromMatrixPosition(n.matrixWorld);const r=b.distanceTo(w),a=t.projectionMatrix.elements,i=n.projectionMatrix.elements,s=a[14]/(a[10]-1),o=a[14]/(a[10]+1),c=(a[9]+1)/a[5],l=(a[9]-1)/a[5],u=(a[8]-1)/a[0],h=(i[8]+1)/i[0],d=s*u,p=s*h,f=r/(-u+h),m=f*-u;t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(m),e.translateZ(f),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert();const g=s+f,y=o+f,x=d-m,v=p+(r-m),_=c*o/y*g,T=l*o/y*g;e.projectionMatrix.makePerspective(x,v,_,T,g,y)}(p,u,h):p.projectionMatrix.copy(u.projectionMatrix),p};let T=null;const S=new Ci;S.setAnimationLoop((function(t,n){if(o=n.getViewerPose(i),null!==o){const t=o.views,n=r.renderState.baseLayer;e.setFramebuffer(n.framebuffer);let a=!1;t.length!==p.cameras.length&&(p.cameras.length=0,a=!0);for(let e=0;e<t.length;e++){const r=t[e],i=n.getViewport(r),s=d[e];s.matrix.fromArray(r.transform.matrix),s.projectionMatrix.fromArray(r.projectionMatrix),s.viewport.set(i.x,i.y,i.width,i.height),0===e&&p.matrix.copy(s.matrix),!0===a&&p.cameras.push(s)}}const a=r.inputSources;for(let e=0;e<c.length;e++){const t=c[e],r=a[e];t.update(r,n,i)}T&&T(t,n)})),this.setAnimationLoop=function(e){T=e},this.dispose=function(){}}function Oo(e){function t(t,n){t.opacity.value=n.opacity,n.color&&t.diffuse.value.copy(n.color),n.emissive&&t.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),n.map&&(t.map.value=n.map),n.alphaMap&&(t.alphaMap.value=n.alphaMap),n.specularMap&&(t.specularMap.value=n.specularMap);const r=e.get(n).envMap;if(r){t.envMap.value=r,t.flipEnvMap.value=r.isCubeTexture&&r._needsFlipEnvMap?-1:1,t.reflectivity.value=n.reflectivity,t.refractionRatio.value=n.refractionRatio;const a=e.get(r).__maxMipLevel;void 0!==a&&(t.maxMipLevel.value=a)}let a,i;n.lightMap&&(t.lightMap.value=n.lightMap,t.lightMapIntensity.value=n.lightMapIntensity),n.aoMap&&(t.aoMap.value=n.aoMap,t.aoMapIntensity.value=n.aoMapIntensity),n.map?a=n.map:n.specularMap?a=n.specularMap:n.displacementMap?a=n.displacementMap:n.normalMap?a=n.normalMap:n.bumpMap?a=n.bumpMap:n.roughnessMap?a=n.roughnessMap:n.metalnessMap?a=n.metalnessMap:n.alphaMap?a=n.alphaMap:n.emissiveMap?a=n.emissiveMap:n.clearcoatMap?a=n.clearcoatMap:n.clearcoatNormalMap?a=n.clearcoatNormalMap:n.clearcoatRoughnessMap&&(a=n.clearcoatRoughnessMap),void 0!==a&&(a.isWebGLRenderTarget&&(a=a.texture),!0===a.matrixAutoUpdate&&a.updateMatrix(),t.uvTransform.value.copy(a.matrix)),n.aoMap?i=n.aoMap:n.lightMap&&(i=n.lightMap),void 0!==i&&(i.isWebGLRenderTarget&&(i=i.texture),!0===i.matrixAutoUpdate&&i.updateMatrix(),t.uv2Transform.value.copy(i.matrix))}function n(t,n){t.roughness.value=n.roughness,t.metalness.value=n.metalness,n.roughnessMap&&(t.roughnessMap.value=n.roughnessMap),n.metalnessMap&&(t.metalnessMap.value=n.metalnessMap),n.emissiveMap&&(t.emissiveMap.value=n.emissiveMap),n.bumpMap&&(t.bumpMap.value=n.bumpMap,t.bumpScale.value=n.bumpScale,n.side===m&&(t.bumpScale.value*=-1)),n.normalMap&&(t.normalMap.value=n.normalMap,t.normalScale.value.copy(n.normalScale),n.side===m&&t.normalScale.value.negate()),n.displacementMap&&(t.displacementMap.value=n.displacementMap,t.displacementScale.value=n.displacementScale,t.displacementBias.value=n.displacementBias),e.get(n).envMap&&(t.envMapIntensity.value=n.envMapIntensity)}return{refreshFogUniforms:function(e,t){e.fogColor.value.copy(t.color),t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)},refreshMaterialUniforms:function(e,r,a,i){r.isMeshBasicMaterial?t(e,r):r.isMeshLambertMaterial?(t(e,r),function(e,t){t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap)}(e,r)):r.isMeshToonMaterial?(t(e,r),function(e,t){t.gradientMap&&(e.gradientMap.value=t.gradientMap),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===m&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===m&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,r)):r.isMeshPhongMaterial?(t(e,r),function(e,t){e.specular.value.copy(t.specular),e.shininess.value=Math.max(t.shininess,1e-4),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===m&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===m&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,r)):r.isMeshStandardMaterial?(t(e,r),r.isMeshPhysicalMaterial?function(e,t){n(e,t),e.reflectivity.value=t.reflectivity,e.clearcoat.value=t.clearcoat,e.clearcoatRoughness.value=t.clearcoatRoughness,t.sheen&&e.sheen.value.copy(t.sheen),t.clearcoatMap&&(e.clearcoatMap.value=t.clearcoatMap),t.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=t.clearcoatRoughnessMap),t.clearcoatNormalMap&&(e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),e.clearcoatNormalMap.value=t.clearcoatNormalMap,t.side===m&&e.clearcoatNormalScale.value.negate()),e.transmission.value=t.transmission,t.transmissionMap&&(e.transmissionMap.value=t.transmissionMap)}(e,r):n(e,r)):r.isMeshMatcapMaterial?(t(e,r),function(e,t){t.matcap&&(e.matcap.value=t.matcap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===m&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===m&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,r)):r.isMeshDepthMaterial?(t(e,r),function(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,r)):r.isMeshDistanceMaterial?(t(e,r),function(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias),e.referencePosition.value.copy(t.referencePosition),e.nearDistance.value=t.nearDistance,e.farDistance.value=t.farDistance}(e,r)):r.isMeshNormalMaterial?(t(e,r),function(e,t){t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===m&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===m&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,r)):r.isLineBasicMaterial?(function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity}(e,r),r.isLineDashedMaterial&&function(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}(e,r)):r.isPointsMaterial?function(e,t,n,r){let a;e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.size.value=t.size*n,e.scale.value=.5*r,t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap),t.map?a=t.map:t.alphaMap&&(a=t.alphaMap),void 0!==a&&(!0===a.matrixAutoUpdate&&a.updateMatrix(),e.uvTransform.value.copy(a.matrix))}(e,r,a,i):r.isSpriteMaterial?function(e,t){let n;e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.rotation.value=t.rotation,t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap),t.map?n=t.map:t.alphaMap&&(n=t.alphaMap),void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),e.uvTransform.value.copy(n.matrix))}(e,r):r.isShadowMaterial?(e.color.value.copy(r.color),e.opacity.value=r.opacity):r.isShaderMaterial&&(r.uniformsNeedUpdate=!1)}}}function Po(e){const t=void 0!==(e=e||{}).canvas?e.canvas:function(){const e=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return e.style.display="block",e}(),n=void 0!==e.context?e.context:null,r=void 0!==e.alpha&&e.alpha,a=void 0===e.depth||e.depth,i=void 0===e.stencil||e.stencil,s=void 0!==e.antialias&&e.antialias,o=void 0===e.premultipliedAlpha||e.premultipliedAlpha,c=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,l=void 0!==e.powerPreference?e.powerPreference:"default",u=void 0!==e.failIfMajorPerformanceCaveat&&e.failIfMajorPerformanceCaveat;let h=null,d=null;const p=[];this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=Kt,this.physicallyCorrectLights=!1,this.toneMapping=J,this.toneMappingExposure=1,this.maxMorphTargets=8,this.maxMorphNormals=4;const f=this;let m=!1,g=null,y=0,x=0,v=null,b=null,w=-1,_=null;const T=new Xn,S=new Xn;let E=null,M=t.width,I=t.height,N=1,C=null,A=null;const k=new Xn(0,0,M,I),R=new Xn(0,0,M,I);let D=!1;const L=new Ni;let O=!1,P=!1;const F=new Er,B=new Zn,$={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function U(){return null===v?N:1}let z,G,H,W,V,j,X,q,Y,K,Z,Q,ee,te,ne,re,ae,ie,se,oe,ce,le=n;function ue(e,n){for(let r=0;r<e.length;r++){const a=e[r],i=t.getContext(a,n);if(null!==i)return i}return null}try{const e={alpha:r,depth:a,stencil:i,antialias:s,premultipliedAlpha:o,preserveDrawingBuffer:c,powerPreference:l,failIfMajorPerformanceCaveat:u};if(t.addEventListener("webglcontextlost",fe,!1),t.addEventListener("webglcontextrestored",me,!1),null===le){const t=["webgl2","webgl","experimental-webgl"];if(!0===f.isWebGL1Renderer&&t.shift(),le=ue(t,e),null===le)throw ue(t)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===le.getShaderPrecisionFormat&&(le.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}function he(){z=new zi(le),G=new Bi(le,z,e),!1===G.isWebGL2&&(z.get("WEBGL_depth_texture"),z.get("OES_texture_float"),z.get("OES_texture_half_float"),z.get("OES_texture_half_float_linear"),z.get("OES_standard_derivatives"),z.get("OES_element_index_uint"),z.get("OES_vertex_array_object"),z.get("ANGLE_instanced_arrays")),z.get("OES_texture_float_linear"),oe=new Ao(le,z,G),H=new No(le,z,G),H.scissor(S.copy(R).multiplyScalar(N).floor()),H.viewport(T.copy(k).multiplyScalar(N).floor()),W=new Wi(le),V=new fo,j=new Co(le,z,H,V,G,oe,W),X=new Ui(f),q=new Ai(le,G),ce=new Pi(le,z,q,G),Y=new Gi(le,q,W,ce),K=new qi(le,Y,q,W),ae=new Xi(le),ne=new $i(V),Z=new po(f,X,z,G,ce,ne),Q=new Oo(V),ee=new xo(V),te=new So(z,G),re=new Oi(f,X,H,K,o),ie=new Fi(le,z,W,G),se=new Hi(le,z,W,G),W.programs=Z.programs,f.capabilities=G,f.extensions=z,f.properties=V,f.renderLists=ee,f.state=H,f.info=W}he();const de=new Lo(f,le);this.xr=de;const pe=new Io(f,K,G.maxTextureSize);function fe(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),m=!0}function me(){console.log("THREE.WebGLRenderer: Context Restored."),m=!1,he()}function ge(e){const t=e.target;t.removeEventListener("dispose",ge),function(e){ye(e),V.remove(e)}(t)}function ye(e){const t=V.get(e).program;void 0!==t&&Z.releaseProgram(t)}this.shadowMap=pe,this.getContext=function(){return le},this.getContextAttributes=function(){return le.getContextAttributes()},this.forceContextLoss=function(){const e=z.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){const e=z.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return N},this.setPixelRatio=function(e){void 0!==e&&(N=e,this.setSize(M,I,!1))},this.getSize=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),e=new Un),e.set(M,I)},this.setSize=function(e,n,r){de.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(M=e,I=n,t.width=Math.floor(e*N),t.height=Math.floor(n*N),!1!==r&&(t.style.width=e+"px",t.style.height=n+"px"),this.setViewport(0,0,e,n))},this.getDrawingBufferSize=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),e=new Un),e.set(M*N,I*N).floor()},this.setDrawingBufferSize=function(e,n,r){M=e,I=n,N=r,t.width=Math.floor(e*r),t.height=Math.floor(n*r),this.setViewport(0,0,e,n)},this.getCurrentViewport=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),e=new Xn),e.copy(T)},this.getViewport=function(e){return e.copy(k)},this.setViewport=function(e,t,n,r){e.isVector4?k.set(e.x,e.y,e.z,e.w):k.set(e,t,n,r),H.viewport(T.copy(k).multiplyScalar(N).floor())},this.getScissor=function(e){return e.copy(R)},this.setScissor=function(e,t,n,r){e.isVector4?R.set(e.x,e.y,e.z,e.w):R.set(e,t,n,r),H.scissor(S.copy(R).multiplyScalar(N).floor())},this.getScissorTest=function(){return D},this.setScissorTest=function(e){H.setScissorTest(D=e)},this.setOpaqueSort=function(e){C=e},this.setTransparentSort=function(e){A=e},this.getClearColor=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getClearColor() now requires a Color as an argument"),e=new xa),e.copy(re.getClearColor())},this.setClearColor=function(){re.setClearColor.apply(re,arguments)},this.getClearAlpha=function(){return re.getClearAlpha()},this.setClearAlpha=function(){re.setClearAlpha.apply(re,arguments)},this.clear=function(e,t,n){let r=0;(void 0===e||e)&&(r|=16384),(void 0===t||t)&&(r|=256),(void 0===n||n)&&(r|=1024),le.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",fe,!1),t.removeEventListener("webglcontextrestored",me,!1),ee.dispose(),te.dispose(),V.dispose(),X.dispose(),K.dispose(),ce.dispose(),de.dispose(),ve.stop()},this.renderBufferImmediate=function(e,t){ce.initAttributes();const n=V.get(e);e.hasPositions&&!n.position&&(n.position=le.createBuffer()),e.hasNormals&&!n.normal&&(n.normal=le.createBuffer()),e.hasUvs&&!n.uv&&(n.uv=le.createBuffer()),e.hasColors&&!n.color&&(n.color=le.createBuffer());const r=t.getAttributes();e.hasPositions&&(le.bindBuffer(34962,n.position),le.bufferData(34962,e.positionArray,35048),ce.enableAttribute(r.position),le.vertexAttribPointer(r.position,3,5126,!1,0,0)),e.hasNormals&&(le.bindBuffer(34962,n.normal),le.bufferData(34962,e.normalArray,35048),ce.enableAttribute(r.normal),le.vertexAttribPointer(r.normal,3,5126,!1,0,0)),e.hasUvs&&(le.bindBuffer(34962,n.uv),le.bufferData(34962,e.uvArray,35048),ce.enableAttribute(r.uv),le.vertexAttribPointer(r.uv,2,5126,!1,0,0)),e.hasColors&&(le.bindBuffer(34962,n.color),le.bufferData(34962,e.colorArray,35048),ce.enableAttribute(r.color),le.vertexAttribPointer(r.color,3,5126,!1,0,0)),ce.disableUnusedAttributes(),le.drawArrays(4,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,n,r,a,i){null===t&&(t=$);const s=a.isMesh&&a.matrixWorld.determinant()<0,o=Ee(e,t,r,a);H.setMaterial(r,s);let c=n.index;const l=n.attributes.position;if(null===c){if(void 0===l||0===l.count)return}else if(0===c.count)return;let u,h=1;!0===r.wireframe&&(c=Y.getWireframeAttribute(n),h=2),(r.morphTargets||r.morphNormals)&&ae.update(a,n,r,o),ce.setup(a,r,o,n,c);let d=ie;null!==c&&(u=q.get(c),d=se,d.setIndex(u));const p=null!==c?c.count:l.count,f=n.drawRange.start*h,m=n.drawRange.count*h,g=null!==i?i.start*h:0,y=null!==i?i.count*h:1/0,x=Math.max(f,g),v=Math.min(p,f+m,g+y)-1,b=Math.max(0,v-x+1);if(0!==b){if(a.isMesh)!0===r.wireframe?(H.setLineWidth(r.wireframeLinewidth*U()),d.setMode(1)):d.setMode(4);else if(a.isLine){let e=r.linewidth;void 0===e&&(e=1),H.setLineWidth(e*U()),a.isLineSegments?d.setMode(1):a.isLineLoop?d.setMode(2):d.setMode(3)}else a.isPoints?d.setMode(0):a.isSprite&&d.setMode(4);if(a.isInstancedMesh)d.renderInstances(x,b,a.count);else if(n.isInstancedBufferGeometry){const e=Math.min(n.instanceCount,n._maxInstanceCount);d.renderInstances(x,b,e)}else d.render(x,b)}},this.compile=function(e,t){d=te.get(e),d.init(),e.traverseVisible((function(e){e.isLight&&e.layers.test(t.layers)&&(d.pushLight(e),e.castShadow&&d.pushShadow(e))})),d.setupLights();const n=new WeakMap;e.traverse((function(t){const r=t.material;if(r)if(Array.isArray(r))for(let a=0;a<r.length;a++){const i=r[a];!1===n.has(i)&&(Te(i,e,t),n.set(i))}else!1===n.has(r)&&(Te(r,e,t),n.set(r))}))};let xe=null;const ve=new Ci;function be(e,t,n,r){if(!1===e.visible)return;if(e.layers.test(t.layers))if(e.isGroup)n=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)d.pushLight(e),e.castShadow&&d.pushShadow(e);else if(e.isSprite){if(!e.frustumCulled||L.intersectsSprite(e)){r&&B.setFromMatrixPosition(e.matrixWorld).applyMatrix4(F);const t=K.update(e),a=e.material;a.visible&&h.push(e,t,a,n,B.z,null)}}else if(e.isImmediateRenderObject)r&&B.setFromMatrixPosition(e.matrixWorld).applyMatrix4(F),h.push(e,null,e.material,n,B.z,null);else if((e.isMesh||e.isLine||e.isPoints)&&(e.isSkinnedMesh&&e.skeleton.frame!==W.render.frame&&(e.skeleton.update(),e.skeleton.frame=W.render.frame),!e.frustumCulled||L.intersectsObject(e))){r&&B.setFromMatrixPosition(e.matrixWorld).applyMatrix4(F);const t=K.update(e),a=e.material;if(Array.isArray(a)){const r=t.groups;for(let i=0,s=r.length;i<s;i++){const s=r[i],o=a[s.materialIndex];o&&o.visible&&h.push(e,t,o,n,B.z,s)}}else a.visible&&h.push(e,t,a,n,B.z,null)}const a=e.children;for(let e=0,i=a.length;e<i;e++)be(a[e],t,n,r)}function we(e,t,n){const r=!0===t.isScene?t.overrideMaterial:null;for(let a=0,i=e.length;a<i;a++){const i=e[a],s=i.object,o=i.geometry,c=null===r?i.material:r,l=i.group;if(n.isArrayCamera){const e=n.cameras;for(let n=0,r=e.length;n<r;n++){const r=e[n];s.layers.test(r.layers)&&(H.viewport(T.copy(r.viewport)),d.setupLightsView(r),_e(s,t,r,o,c,l))}}else _e(s,t,n,o,c,l)}}function _e(e,t,n,r,a,i){if(e.onBeforeRender(f,t,n,r,a,i),e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),e.isImmediateRenderObject){const r=Ee(n,t,a,e);H.setMaterial(a),ce.reset(),function(e,t){e.render((function(e){f.renderBufferImmediate(e,t)}))}(e,r)}else f.renderBufferDirect(n,t,r,a,e,i);e.onAfterRender(f,t,n,r,a,i)}function Te(e,t,n){!0!==t.isScene&&(t=$);const r=V.get(e),a=d.state.lights,i=d.state.shadowsArray,s=a.state.version,o=Z.getParameters(e,a.state,i,t,n),c=Z.getProgramCacheKey(o);let l=r.program,u=!0;if(void 0===l)e.addEventListener("dispose",ge);else if(l.cacheKey!==c)ye(e);else if(r.lightsStateVersion!==s)u=!1;else{if(void 0!==o.shaderID){const n=e.isMeshStandardMaterial?t.environment:null;return void(r.envMap=X.get(e.envMap||n))}u=!1}u&&(o.uniforms=Z.getUniforms(e),e.onBeforeCompile(o,f),l=Z.acquireProgram(o,c),r.program=l,r.uniforms=o.uniforms,r.outputEncoding=o.outputEncoding);const h=r.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(r.numClippingPlanes=ne.numPlanes,r.numIntersection=ne.numIntersection,h.clippingPlanes=ne.uniform),r.environment=e.isMeshStandardMaterial?t.environment:null,r.fog=t.fog,r.envMap=X.get(e.envMap||r.environment),r.needsLights=function(e){return e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights}(e),r.lightsStateVersion=s,r.needsLights&&(h.ambientLightColor.value=a.state.ambient,h.lightProbe.value=a.state.probe,h.directionalLights.value=a.state.directional,h.directionalLightShadows.value=a.state.directionalShadow,h.spotLights.value=a.state.spot,h.spotLightShadows.value=a.state.spotShadow,h.rectAreaLights.value=a.state.rectArea,h.ltc_1.value=a.state.rectAreaLTC1,h.ltc_2.value=a.state.rectAreaLTC2,h.pointLights.value=a.state.point,h.pointLightShadows.value=a.state.pointShadow,h.hemisphereLights.value=a.state.hemi,h.directionalShadowMap.value=a.state.directionalShadowMap,h.directionalShadowMatrix.value=a.state.directionalShadowMatrix,h.spotShadowMap.value=a.state.spotShadowMap,h.spotShadowMatrix.value=a.state.spotShadowMatrix,h.pointShadowMap.value=a.state.pointShadowMap,h.pointShadowMatrix.value=a.state.pointShadowMatrix);const p=r.program.getUniforms(),m=Vs.seqWithValue(p.seq,h);r.uniformsList=m}function Ee(e,t,n,r){!0!==t.isScene&&(t=$),j.resetTextureUnits();const a=t.fog,i=n.isMeshStandardMaterial?t.environment:null,s=null===v?f.outputEncoding:v.texture.encoding,o=X.get(n.envMap||i),c=V.get(n),l=d.state.lights;if(!0===O&&(!0===P||e!==_)){const t=e===_&&n.id===w;ne.setState(n,e,t)}n.version===c.__version?n.fog&&c.fog!==a||c.environment!==i||c.needsLights&&c.lightsStateVersion!==l.state.version?Te(n,t,r):void 0===c.numClippingPlanes||c.numClippingPlanes===ne.numPlanes&&c.numIntersection===ne.numIntersection?(c.outputEncoding!==s||c.envMap!==o)&&Te(n,t,r):Te(n,t,r):(Te(n,t,r),c.__version=n.version);let u=!1,h=!1,p=!1;const m=c.program,g=m.getUniforms(),y=c.uniforms;if(H.useProgram(m.program)&&(u=!0,h=!0,p=!0),n.id!==w&&(w=n.id,h=!0),u||_!==e){if(g.setValue(le,"projectionMatrix",e.projectionMatrix),G.logarithmicDepthBuffer&&g.setValue(le,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),_!==e&&(_=e,h=!0,p=!0),n.isShaderMaterial||n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshStandardMaterial||n.envMap){const t=g.map.cameraPosition;void 0!==t&&t.setValue(le,B.setFromMatrixPosition(e.matrixWorld))}(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial)&&g.setValue(le,"isOrthographic",!0===e.isOrthographicCamera),(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial||n.isShadowMaterial||n.skinning)&&g.setValue(le,"viewMatrix",e.matrixWorldInverse)}if(n.skinning){g.setOptional(le,r,"bindMatrix"),g.setOptional(le,r,"bindMatrixInverse");const e=r.skeleton;if(e){const t=e.bones;if(G.floatVertexTextures){if(null===e.boneTexture){let n=Math.sqrt(4*t.length);n=$n.ceilPowerOfTwo(n),n=Math.max(n,4);const r=new Float32Array(n*n*4);r.set(e.boneMatrices);const a=new Ei(r,n,n,Be,Ae);e.boneMatrices=r,e.boneTexture=a,e.boneTextureSize=n}g.setValue(le,"boneTexture",e.boneTexture,j),g.setValue(le,"boneTextureSize",e.boneTextureSize)}else g.setOptional(le,e,"boneMatrices")}}var x,b;return(h||c.receiveShadow!==r.receiveShadow)&&(c.receiveShadow=r.receiveShadow,g.setValue(le,"receiveShadow",r.receiveShadow)),h&&(g.setValue(le,"toneMappingExposure",f.toneMappingExposure),c.needsLights&&(b=p,(x=y).ambientLightColor.needsUpdate=b,x.lightProbe.needsUpdate=b,x.directionalLights.needsUpdate=b,x.directionalLightShadows.needsUpdate=b,x.pointLights.needsUpdate=b,x.pointLightShadows.needsUpdate=b,x.spotLights.needsUpdate=b,x.spotLightShadows.needsUpdate=b,x.rectAreaLights.needsUpdate=b,x.hemisphereLights.needsUpdate=b),a&&n.fog&&Q.refreshFogUniforms(y,a),Q.refreshMaterialUniforms(y,n,N,I),Vs.upload(le,c.uniformsList,y,j)),n.isShaderMaterial&&!0===n.uniformsNeedUpdate&&(Vs.upload(le,c.uniformsList,y,j),n.uniformsNeedUpdate=!1),n.isSpriteMaterial&&g.setValue(le,"center",r.center),g.setValue(le,"modelViewMatrix",r.modelViewMatrix),g.setValue(le,"normalMatrix",r.normalMatrix),g.setValue(le,"modelMatrix",r.matrixWorld),m}ve.setAnimationLoop((function(e){de.isPresenting||xe&&xe(e)})),"undefined"!=typeof window&&ve.setContext(window),this.setAnimationLoop=function(e){xe=e,de.setAnimationLoop(e),null===e?ve.stop():ve.start()},this.render=function(e,t){let n,r;if(void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),n=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),r=arguments[3]),void 0!==t&&!0!==t.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===m)return;ce.resetDefaultState(),w=-1,_=null,!0===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),!0===de.enabled&&!0===de.isPresenting&&(t=de.getCamera(t)),!0===e.isScene&&e.onBeforeRender(f,e,t,n||v),d=te.get(e,p.length),d.init(),p.push(d),F.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),L.setFromProjectionMatrix(F),P=this.localClippingEnabled,O=ne.init(this.clippingPlanes,P,t),h=ee.get(e,t),h.init(),be(e,t,0,f.sortObjects),h.finish(),!0===f.sortObjects&&h.sort(C,A),!0===O&&ne.beginShadows();const a=d.state.shadowsArray;pe.render(a,e,t),d.setupLights(),d.setupLightsView(t),!0===O&&ne.endShadows(),!0===this.info.autoReset&&this.info.reset(),void 0!==n&&this.setRenderTarget(n),re.render(h,e,t,r);const i=h.opaque,s=h.transparent;i.length>0&&we(i,e,t),s.length>0&&we(s,e,t),!0===e.isScene&&e.onAfterRender(f,e,t),null!==v&&(j.updateRenderTargetMipmap(v),j.updateMultisampleRenderTarget(v)),H.buffers.depth.setTest(!0),H.buffers.depth.setMask(!0),H.buffers.color.setMask(!0),H.setPolygonOffset(!1),p.pop(),d=p.length>0?p[p.length-1]:null,h=null},this.setFramebuffer=function(e){g!==e&&null===v&&le.bindFramebuffer(36160,e),g=e},this.getActiveCubeFace=function(){return y},this.getActiveMipmapLevel=function(){return x},this.getRenderList=function(){return h},this.setRenderList=function(e){h=e},this.getRenderTarget=function(){return v},this.setRenderTarget=function(e,t=0,n=0){v=e,y=t,x=n,e&&void 0===V.get(e).__webglFramebuffer&&j.setupRenderTarget(e);let r=g,a=!1;if(e){const n=V.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(r=n[t],a=!0):r=e.isWebGLMultisampleRenderTarget?V.get(e).__webglMultisampledFramebuffer:n,T.copy(e.viewport),S.copy(e.scissor),E=e.scissorTest}else T.copy(k).multiplyScalar(N).floor(),S.copy(R).multiplyScalar(N).floor(),E=D;if(b!==r&&(le.bindFramebuffer(36160,r),b=r),H.viewport(T),H.scissor(S),H.setScissorTest(E),a){const r=V.get(e.texture);le.framebufferTexture2D(36160,36064,34069+t,r.__webglTexture,n)}},this.readRenderTargetPixels=function(e,t,n,r,a,i,s){if(!e||!e.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let o=V.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==s&&(o=o[s]),o){let s=!1;o!==b&&(le.bindFramebuffer(36160,o),s=!0);try{const o=e.texture,c=o.format,l=o.type;if(c!==Be&&oe.convert(c)!==le.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!(l===Se||oe.convert(l)===le.getParameter(35738)||l===Ae&&(G.isWebGL2||z.get("OES_texture_float")||z.get("WEBGL_color_buffer_float"))||l===ke&&(G.isWebGL2?z.get("EXT_color_buffer_float"):z.get("EXT_color_buffer_half_float"))))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===le.checkFramebufferStatus(36160)?t>=0&&t<=e.width-r&&n>=0&&n<=e.height-a&&le.readPixels(t,n,r,a,oe.convert(c),oe.convert(l),i):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{s&&le.bindFramebuffer(36160,b)}}},this.copyFramebufferToTexture=function(e,t,n=0){const r=Math.pow(2,-n),a=Math.floor(t.image.width*r),i=Math.floor(t.image.height*r),s=oe.convert(t.format);j.setTexture2D(t,0),le.copyTexImage2D(3553,n,s,e.x,e.y,a,i,0),H.unbindTexture()},this.copyTextureToTexture=function(e,t,n,r=0){const a=t.image.width,i=t.image.height,s=oe.convert(n.format),o=oe.convert(n.type);j.setTexture2D(n,0),le.pixelStorei(37440,n.flipY),le.pixelStorei(37441,n.premultiplyAlpha),le.pixelStorei(3317,n.unpackAlignment),t.isDataTexture?le.texSubImage2D(3553,r,e.x,e.y,a,i,s,o,t.image.data):t.isCompressedTexture?le.compressedTexSubImage2D(3553,r,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,s,t.mipmaps[0].data):le.texSubImage2D(3553,r,e.x,e.y,s,o,t.image),0===r&&n.generateMipmaps&&le.generateMipmap(3553),H.unbindTexture()},this.initTexture=function(e){j.setTexture2D(e,0),H.unbindTexture()},this.resetState=function(){H.reset(),ce.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}function Fo(e){Po.call(this,e)}Eo.prototype=Object.create(wa.prototype),Eo.prototype.constructor=Eo,Eo.prototype.isMeshDepthMaterial=!0,Eo.prototype.copy=function(e){return wa.prototype.copy.call(this,e),this.depthPacking=e.depthPacking,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this},Mo.prototype=Object.create(wa.prototype),Mo.prototype.constructor=Mo,Mo.prototype.isMeshDistanceMaterial=!0,Mo.prototype.copy=function(e){return wa.prototype.copy.call(this,e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this},ko.prototype=Object.assign(Object.create(bi.prototype),{constructor:ko,isArrayCamera:!0}),Ro.prototype=Object.assign(Object.create(Kr.prototype),{constructor:Ro,isGroup:!0}),Object.assign(Do.prototype,{constructor:Do,getHandSpace:function(){if(null===this._hand&&(this._hand=new Ro,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints=[],this._hand.inputState={pinching:!1},window.XRHand))for(let e=0;e<=window.XRHand.LITTLE_PHALANX_TIP;e++){const e=new Ro;e.matrixAutoUpdate=!1,e.visible=!1,this._hand.joints.push(e),this._hand.add(e)}return this._hand},getTargetRaySpace:function(){return null===this._targetRay&&(this._targetRay=new Ro,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1),this._targetRay},getGripSpace:function(){return null===this._grip&&(this._grip=new Ro,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1),this._grip},dispatchEvent:function(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this},disconnect:function(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this},update:function(e,t,n){let r=null,a=null,i=null;const s=this._targetRay,o=this._grip,c=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState)if(c&&e.hand){i=!0;for(let r=0;r<=window.XRHand.LITTLE_PHALANX_TIP;r++)if(e.hand[r]){const a=t.getJointPose(e.hand[r],n),i=c.joints[r];null!==a&&(i.matrix.fromArray(a.transform.matrix),i.matrix.decompose(i.position,i.rotation,i.scale),i.jointRadius=a.radius),i.visible=null!==a;const s=c.joints[window.XRHand.INDEX_PHALANX_TIP],o=c.joints[window.XRHand.THUMB_PHALANX_TIP],l=s.position.distanceTo(o.position),u=.02,h=.005;c.inputState.pinching&&l>u+h?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&l<=u-h&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}}else null!==s&&(r=t.getPose(e.targetRaySpace,n),null!==r&&(s.matrix.fromArray(r.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale))),null!==o&&e.gripSpace&&(a=t.getPose(e.gripSpace,n),null!==a&&(o.matrix.fromArray(a.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale)));return null!==s&&(s.visible=null!==r),null!==o&&(o.visible=null!==a),null!==c&&(c.visible=null!==i),this}}),Object.assign(Lo.prototype,Pn.prototype),Fo.prototype=Object.assign(Object.create(Po.prototype),{constructor:Fo,isWebGL1Renderer:!0});class Bo{constructor(e,t){Object.defineProperty(this,"isFogExp2",{value:!0}),this.name="",this.color=new xa(e),this.density=void 0!==t?t:25e-5}clone(){return new Bo(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class $o{constructor(e,t,n){Object.defineProperty(this,"isFog",{value:!0}),this.name="",this.color=new xa(e),this.near=void 0!==t?t:1,this.far=void 0!==n?n:1e3}clone(){return new $o(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class Uo extends Kr{constructor(){super(),Object.defineProperty(this,"isScene",{value:!0}),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return null!==this.background&&(t.object.background=this.background.toJSON(e)),null!==this.environment&&(t.object.environment=this.environment.toJSON(e)),null!==this.fog&&(t.object.fog=this.fog.toJSON()),t}}function zo(e,t){this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=En,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=$n.generateUUID()}Object.defineProperty(zo.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.assign(zo.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(e){return this.usage=e,this},copy:function(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this},copyAt:function(e,t,n){e*=this.stride,n*=t.stride;for(let r=0,a=this.stride;r<a;r++)this.array[e+r]=t.array[n+r];return this},set:function(e,t=0){return this.array.set(e,t),this},clone:function(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=$n.generateUUID()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new zo(new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),this.stride);return t.setUsage(this.usage),t},onUpload:function(e){return this.onUploadCallback=e,this},toJSON:function(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=$n.generateUUID()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}});const Go=new Zn;function Ho(e,t,n,r){this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=!0===r}function Wo(e){wa.call(this),this.type="SpriteMaterial",this.color=new xa(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}let Vo;Object.defineProperties(Ho.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}},needsUpdate:{set:function(e){this.data.needsUpdate=e}}}),Object.assign(Ho.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(e){for(let t=0,n=this.data.count;t<n;t++)Go.x=this.getX(t),Go.y=this.getY(t),Go.z=this.getZ(t),Go.applyMatrix4(e),this.setXYZ(t,Go.x,Go.y,Go.z);return this},setX:function(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this},setY:function(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this},setZ:function(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this},setW:function(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this},getX:function(e){return this.data.array[e*this.data.stride+this.offset]},getY:function(e){return this.data.array[e*this.data.stride+this.offset+1]},getZ:function(e){return this.data.array[e*this.data.stride+this.offset+2]},getW:function(e){return this.data.array[e*this.data.stride+this.offset+3]},setXY:function(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this},setXYZ:function(e,t,n,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this},setXYZW:function(e,t,n,r,a){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this.data.array[e+3]=a,this},clone:function(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const n=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[n+t])}return new Ea(new this.array.constructor(e),this.itemSize,this.normalized)}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Ho(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)},toJSON:function(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const n=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[n+t])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}),Wo.prototype=Object.create(wa.prototype),Wo.prototype.constructor=Wo,Wo.prototype.isSpriteMaterial=!0,Wo.prototype.copy=function(e){return wa.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this};const jo=new Zn,Xo=new Zn,qo=new Zn,Yo=new Un,Ko=new Un,Zo=new Er,Jo=new Zn,Qo=new Zn,ec=new Zn,tc=new Un,nc=new Un,rc=new Un;function ac(e){if(Kr.call(this),this.type="Sprite",void 0===Vo){Vo=new Xa;const e=new zo(new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),5);Vo.setIndex([0,1,2,0,2,3]),Vo.setAttribute("position",new Ho(e,3,0,!1)),Vo.setAttribute("uv",new Ho(e,2,3,!1))}this.geometry=Vo,this.material=void 0!==e?e:new Wo,this.center=new Un(.5,.5)}function ic(e,t,n,r,a,i){Yo.subVectors(e,n).addScalar(.5).multiply(r),void 0!==a?(Ko.x=i*Yo.x-a*Yo.y,Ko.y=a*Yo.x+i*Yo.y):Ko.copy(Yo),e.copy(t),e.x+=Ko.x,e.y+=Ko.y,e.applyMatrix4(Zo)}ac.prototype=Object.assign(Object.create(Kr.prototype),{constructor:ac,isSprite:!0,raycast:function(e,t){null===e.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Xo.setFromMatrixScale(this.matrixWorld),Zo.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),qo.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&Xo.multiplyScalar(-qo.z);const n=this.material.rotation;let r,a;0!==n&&(a=Math.cos(n),r=Math.sin(n));const i=this.center;ic(Jo.set(-.5,-.5,0),qo,i,Xo,r,a),ic(Qo.set(.5,-.5,0),qo,i,Xo,r,a),ic(ec.set(.5,.5,0),qo,i,Xo,r,a),tc.set(0,0),nc.set(1,0),rc.set(1,1);let s=e.ray.intersectTriangle(Jo,Qo,ec,!1,jo);if(null===s&&(ic(Qo.set(-.5,.5,0),qo,i,Xo,r,a),nc.set(0,1),s=e.ray.intersectTriangle(Jo,ec,Qo,!1,jo),null===s))return;const o=e.ray.origin.distanceTo(jo);o<e.near||o>e.far||t.push({distance:o,point:jo.clone(),uv:ha.getUV(jo,Jo,Qo,ec,tc,nc,rc,new Un),face:null,object:this})},copy:function(e){return Kr.prototype.copy.call(this,e),void 0!==e.center&&this.center.copy(e.center),this.material=e.material,this}});const sc=new Zn,oc=new Zn;function cc(){Kr.call(this),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}cc.prototype=Object.assign(Object.create(Kr.prototype),{constructor:cc,isLOD:!0,copy:function(e){Kr.prototype.copy.call(this,e,!1);const t=e.levels;for(let e=0,n=t.length;e<n;e++){const n=t[e];this.addLevel(n.object.clone(),n.distance)}return this.autoUpdate=e.autoUpdate,this},addLevel:function(e,t=0){t=Math.abs(t);const n=this.levels;let r;for(r=0;r<n.length&&!(t<n[r].distance);r++);return n.splice(r,0,{distance:t,object:e}),this.add(e),this},getCurrentLevel:function(){return this._currentLevel},getObjectForDistance:function(e){const t=this.levels;if(t.length>0){let n,r;for(n=1,r=t.length;n<r&&!(e<t[n].distance);n++);return t[n-1].object}return null},raycast:function(e,t){if(this.levels.length>0){sc.setFromMatrixPosition(this.matrixWorld);const n=e.ray.origin.distanceTo(sc);this.getObjectForDistance(n).raycast(e,t)}},update:function(e){const t=this.levels;if(t.length>1){sc.setFromMatrixPosition(e.matrixWorld),oc.setFromMatrixPosition(this.matrixWorld);const n=sc.distanceTo(oc)/e.zoom;let r,a;for(t[0].object.visible=!0,r=1,a=t.length;r<a&&n>=t[r].distance;r++)t[r-1].object.visible=!1,t[r].object.visible=!0;for(this._currentLevel=r-1;r<a;r++)t[r].object.visible=!1}},toJSON:function(e){const t=Kr.prototype.toJSON.call(this,e);!1===this.autoUpdate&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let e=0,r=n.length;e<r;e++){const r=n[e];t.object.levels.push({object:r.object.uuid,distance:r.distance})}return t}});const lc=new Zn,uc=new Xn,hc=new Xn,dc=new Zn,pc=new Er;function fc(e,t){e&&e.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),hi.call(this,e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Er,this.bindMatrixInverse=new Er}function mc(){Kr.call(this),this.type="Bone"}fc.prototype=Object.assign(Object.create(hi.prototype),{constructor:fc,isSkinnedMesh:!0,copy:function(e){return hi.prototype.copy.call(this,e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this},bind:function(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){const e=new Xn,t=this.geometry.attributes.skinWeight;for(let n=0,r=t.count;n<r;n++){e.x=t.getX(n),e.y=t.getY(n),e.z=t.getZ(n),e.w=t.getW(n);const r=1/e.manhattanLength();r!==1/0?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}},updateMatrixWorld:function(e){hi.prototype.updateMatrixWorld.call(this,e),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},boneTransform:function(e,t){const n=this.skeleton,r=this.geometry;uc.fromBufferAttribute(r.attributes.skinIndex,e),hc.fromBufferAttribute(r.attributes.skinWeight,e),lc.fromBufferAttribute(r.attributes.position,e).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let e=0;e<4;e++){const r=hc.getComponent(e);if(0!==r){const a=uc.getComponent(e);pc.multiplyMatrices(n.bones[a].matrixWorld,n.boneInverses[a]),t.addScaledVector(dc.copy(lc).applyMatrix4(pc),r)}}return t.applyMatrix4(this.bindMatrixInverse)}}),mc.prototype=Object.assign(Object.create(Kr.prototype),{constructor:mc,isBone:!0});const gc=new Er,yc=new Er;function xc(e=[],t=[]){this.uuid=$n.generateUUID(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}Object.assign(xc.prototype,{init:function(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(16*e.length),0===t.length)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let e=0,t=this.bones.length;e<t;e++)this.boneInverses.push(new Er)}},calculateInverses:function(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const t=new Er;this.bones[e]&&t.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(t)}},pose:function(){for(let e=0,t=this.bones.length;e<t;e++){const t=this.bones[e];t&&t.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const t=this.bones[e];t&&(t.parent&&t.parent.isBone?(t.matrix.copy(t.parent.matrixWorld).invert(),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))}},update:function(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,r=this.boneTexture;for(let r=0,a=e.length;r<a;r++){const a=e[r]?e[r].matrixWorld:yc;gc.multiplyMatrices(a,t[r]),gc.toArray(n,16*r)}null!==r&&(r.needsUpdate=!0)},clone:function(){return new xc(this.bones,this.boneInverses)},getBoneByName:function(e){for(let t=0,n=this.bones.length;t<n;t++){const n=this.bones[t];if(n.name===e)return n}},dispose:function(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)},fromJSON:function(e,t){this.uuid=e.uuid;for(let n=0,r=e.bones.length;n<r;n++){const r=e.bones[n];let a=t[r];void 0===a&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),a=new mc),this.bones.push(a),this.boneInverses.push((new Er).fromArray(e.boneInverses[n]))}return this.init(),this},toJSON:function(){const e={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let r=0,a=t.length;r<a;r++){const a=t[r];e.bones.push(a.uuid);const i=n[r];e.boneInverses.push(i.toArray())}return e}});const vc=new Er,bc=new Er,wc=[],_c=new hi;function Tc(e,t,n){hi.call(this,e,t),this.instanceMatrix=new Ea(new Float32Array(16*n),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}function Sc(e){wa.call(this),this.type="LineBasicMaterial",this.color=new xa(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(e)}Tc.prototype=Object.assign(Object.create(hi.prototype),{constructor:Tc,isInstancedMesh:!0,copy:function(e){return hi.prototype.copy.call(this,e),this.instanceMatrix.copy(e.instanceMatrix),this.count=e.count,this},getColorAt:function(e,t){t.fromArray(this.instanceColor.array,3*e)},getMatrixAt:function(e,t){t.fromArray(this.instanceMatrix.array,16*e)},raycast:function(e,t){const n=this.matrixWorld,r=this.count;if(_c.geometry=this.geometry,_c.material=this.material,void 0!==_c.material)for(let a=0;a<r;a++){this.getMatrixAt(a,vc),bc.multiplyMatrices(n,vc),_c.matrixWorld=bc,_c.raycast(e,wc);for(let e=0,n=wc.length;e<n;e++){const n=wc[e];n.instanceId=a,n.object=this,t.push(n)}wc.length=0}},setColorAt:function(e,t){null===this.instanceColor&&(this.instanceColor=new Ea(new Float32Array(3*this.count),3)),t.toArray(this.instanceColor.array,3*e)},setMatrixAt:function(e,t){t.toArray(this.instanceMatrix.array,16*e)},updateMorphTargets:function(){},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Sc.prototype=Object.create(wa.prototype),Sc.prototype.constructor=Sc,Sc.prototype.isLineBasicMaterial=!0,Sc.prototype.copy=function(e){return wa.prototype.copy.call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.morphTargets=e.morphTargets,this};const Ec=new Zn,Mc=new Zn,Ic=new Er,Nc=new Sr,Cc=new gr;function Ac(e=new Xa,t=new Sc){Kr.call(this),this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}Ac.prototype=Object.assign(Object.create(Kr.prototype),{constructor:Ac,isLine:!0,copy:function(e){return Kr.prototype.copy.call(this,e),this.material=e.material,this.geometry=e.geometry,this},computeLineDistances:function(){const e=this.geometry;if(e.isBufferGeometry)if(null===e.index){const t=e.attributes.position,n=[0];for(let e=1,r=t.count;e<r;e++)Ec.fromBufferAttribute(t,e-1),Mc.fromBufferAttribute(t,e),n[e]=n[e-1],n[e]+=Ec.distanceTo(Mc);e.setAttribute("lineDistance",new La(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(e.isGeometry){const t=e.vertices,n=e.lineDistances;n[0]=0;for(let e=1,r=t.length;e<r;e++)n[e]=n[e-1],n[e]+=t[e-1].distanceTo(t[e])}return this},raycast:function(e,t){const n=this.geometry,r=this.matrixWorld,a=e.params.Line.threshold;if(null===n.boundingSphere&&n.computeBoundingSphere(),Cc.copy(n.boundingSphere),Cc.applyMatrix4(r),Cc.radius+=a,!1===e.ray.intersectsSphere(Cc))return;Ic.copy(r).invert(),Nc.copy(e.ray).applyMatrix4(Ic);const i=a/((this.scale.x+this.scale.y+this.scale.z)/3),s=i*i,o=new Zn,c=new Zn,l=new Zn,u=new Zn,h=this.isLineSegments?2:1;if(n.isBufferGeometry){const r=n.index,a=n.attributes.position;if(null!==r){const n=r.array;for(let r=0,i=n.length-1;r<i;r+=h){const i=n[r],h=n[r+1];if(o.fromBufferAttribute(a,i),c.fromBufferAttribute(a,h),Nc.distanceSqToSegment(o,c,u,l)>s)continue;u.applyMatrix4(this.matrixWorld);const d=e.ray.origin.distanceTo(u);d<e.near||d>e.far||t.push({distance:d,point:l.clone().applyMatrix4(this.matrixWorld),index:r,face:null,faceIndex:null,object:this})}}else for(let n=0,r=a.count-1;n<r;n+=h){if(o.fromBufferAttribute(a,n),c.fromBufferAttribute(a,n+1),Nc.distanceSqToSegment(o,c,u,l)>s)continue;u.applyMatrix4(this.matrixWorld);const r=e.ray.origin.distanceTo(u);r<e.near||r>e.far||t.push({distance:r,point:l.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}else if(n.isGeometry){const r=n.vertices,a=r.length;for(let n=0;n<a-1;n+=h){if(Nc.distanceSqToSegment(r[n],r[n+1],u,l)>s)continue;u.applyMatrix4(this.matrixWorld);const a=e.ray.origin.distanceTo(u);a<e.near||a>e.far||t.push({distance:a,point:l.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const e=t[n[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,n=e.length;t<n;t++){const n=e[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=t}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});const kc=new Zn,Rc=new Zn;function Dc(e,t){Ac.call(this,e,t),this.type="LineSegments"}function Lc(e,t){Ac.call(this,e,t),this.type="LineLoop"}function Oc(e){wa.call(this),this.type="PointsMaterial",this.color=new xa(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(e)}Dc.prototype=Object.assign(Object.create(Ac.prototype),{constructor:Dc,isLineSegments:!0,computeLineDistances:function(){const e=this.geometry;if(e.isBufferGeometry)if(null===e.index){const t=e.attributes.position,n=[];for(let e=0,r=t.count;e<r;e+=2)kc.fromBufferAttribute(t,e),Rc.fromBufferAttribute(t,e+1),n[e]=0===e?0:n[e-1],n[e+1]=n[e]+kc.distanceTo(Rc);e.setAttribute("lineDistance",new La(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(e.isGeometry){const t=e.vertices,n=e.lineDistances;for(let e=0,r=t.length;e<r;e+=2)kc.copy(t[e]),Rc.copy(t[e+1]),n[e]=0===e?0:n[e-1],n[e+1]=n[e]+kc.distanceTo(Rc)}return this}}),Lc.prototype=Object.assign(Object.create(Ac.prototype),{constructor:Lc,isLineLoop:!0}),Oc.prototype=Object.create(wa.prototype),Oc.prototype.constructor=Oc,Oc.prototype.isPointsMaterial=!0,Oc.prototype.copy=function(e){return wa.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.morphTargets=e.morphTargets,this};const Pc=new Er,Fc=new Sr,Bc=new gr,$c=new Zn;function Uc(e=new Xa,t=new Oc){Kr.call(this),this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}function zc(e,t,n,r,a,i,s){const o=Fc.distanceSqToPoint(e);if(o<n){const n=new Zn;Fc.closestPointToPoint(e,n),n.applyMatrix4(r);const c=a.ray.origin.distanceTo(n);if(c<a.near||c>a.far)return;i.push({distance:c,distanceToRay:Math.sqrt(o),point:n,index:t,face:null,object:s})}}function Gc(e,t,n,r,a,i,s,o,c){Vn.call(this,e,t,n,r,a,i,s,o,c),this.format=void 0!==s?s:Fe,this.minFilter=void 0!==i?i:ve,this.magFilter=void 0!==a?a:ve,this.generateMipmaps=!1;const l=this;"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback((function t(){l.needsUpdate=!0,e.requestVideoFrameCallback(t)}))}function Hc(e,t,n,r,a,i,s,o,c,l,u,h){Vn.call(this,null,i,s,o,c,l,r,a,u,h),this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}function Wc(e,t,n,r,a,i,s,o,c){Vn.call(this,e,t,n,r,a,i,s,o,c),this.needsUpdate=!0}function Vc(e,t,n,r,a,i,s,o,c,l){if((l=void 0!==l?l:Ge)!==Ge&&l!==He)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&l===Ge&&(n=Ie),void 0===n&&l===He&&(n=Oe),Vn.call(this,null,r,a,i,s,o,l,n,c),this.image={width:e,height:t},this.magFilter=void 0!==s?s:fe,this.minFilter=void 0!==o?o:fe,this.flipY=!1,this.generateMipmaps=!1}Uc.prototype=Object.assign(Object.create(Kr.prototype),{constructor:Uc,isPoints:!0,copy:function(e){return Kr.prototype.copy.call(this,e),this.material=e.material,this.geometry=e.geometry,this},raycast:function(e,t){const n=this.geometry,r=this.matrixWorld,a=e.params.Points.threshold;if(null===n.boundingSphere&&n.computeBoundingSphere(),Bc.copy(n.boundingSphere),Bc.applyMatrix4(r),Bc.radius+=a,!1===e.ray.intersectsSphere(Bc))return;Pc.copy(r).invert(),Fc.copy(e.ray).applyMatrix4(Pc);const i=a/((this.scale.x+this.scale.y+this.scale.z)/3),s=i*i;if(n.isBufferGeometry){const a=n.index,i=n.attributes.position;if(null!==a){const n=a.array;for(let a=0,o=n.length;a<o;a++){const o=n[a];$c.fromBufferAttribute(i,o),zc($c,o,s,r,e,t,this)}}else for(let n=0,a=i.count;n<a;n++)$c.fromBufferAttribute(i,n),zc($c,n,s,r,e,t,this)}else{const a=n.vertices;for(let n=0,i=a.length;n<i;n++)zc(a[n],n,s,r,e,t,this)}},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const e=t[n[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,n=e.length;t<n;t++){const n=e[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=t}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}),Gc.prototype=Object.assign(Object.create(Vn.prototype),{constructor:Gc,clone:function(){return new this.constructor(this.image).copy(this)},isVideoTexture:!0,update:function(){const e=this.image;!1=="requestVideoFrameCallback"in e&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}),Hc.prototype=Object.create(Vn.prototype),Hc.prototype.constructor=Hc,Hc.prototype.isCompressedTexture=!0,Wc.prototype=Object.create(Vn.prototype),Wc.prototype.constructor=Wc,Wc.prototype.isCanvasTexture=!0,Vc.prototype=Object.create(Vn.prototype),Vc.prototype.constructor=Vc,Vc.prototype.isDepthTexture=!0;let jc=0;const Xc=new Er,qc=new Kr,Yc=new Zn;function Kc(){Object.defineProperty(this,"id",{value:jc+=2}),this.uuid=$n.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}Kc.prototype=Object.assign(Object.create(Pn.prototype),{constructor:Kc,isGeometry:!0,applyMatrix4:function(e){const t=(new zn).getNormalMatrix(e);for(let t=0,n=this.vertices.length;t<n;t++)this.vertices[t].applyMatrix4(e);for(let e=0,n=this.faces.length;e<n;e++){const n=this.faces[e];n.normal.applyMatrix3(t).normalize();for(let e=0,r=n.vertexNormals.length;e<r;e++)n.vertexNormals[e].applyMatrix3(t).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(e){return Xc.makeRotationX(e),this.applyMatrix4(Xc),this},rotateY:function(e){return Xc.makeRotationY(e),this.applyMatrix4(Xc),this},rotateZ:function(e){return Xc.makeRotationZ(e),this.applyMatrix4(Xc),this},translate:function(e,t,n){return Xc.makeTranslation(e,t,n),this.applyMatrix4(Xc),this},scale:function(e,t,n){return Xc.makeScale(e,t,n),this.applyMatrix4(Xc),this},lookAt:function(e){return qc.lookAt(e),qc.updateMatrix(),this.applyMatrix4(qc.matrix),this},fromBufferGeometry:function(e){const t=this,n=null!==e.index?e.index:void 0,r=e.attributes;if(void 0===r.position)return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."),this;const a=r.position,i=r.normal,s=r.color,o=r.uv,c=r.uv2;void 0!==c&&(this.faceVertexUvs[1]=[]);for(let e=0;e<a.count;e++)t.vertices.push((new Zn).fromBufferAttribute(a,e)),void 0!==s&&t.colors.push((new xa).fromBufferAttribute(s,e));function l(e,n,r,a){const l=void 0===s?[]:[t.colors[e].clone(),t.colors[n].clone(),t.colors[r].clone()],u=void 0===i?[]:[(new Zn).fromBufferAttribute(i,e),(new Zn).fromBufferAttribute(i,n),(new Zn).fromBufferAttribute(i,r)],h=new va(e,n,r,u,l,a);t.faces.push(h),void 0!==o&&t.faceVertexUvs[0].push([(new Un).fromBufferAttribute(o,e),(new Un).fromBufferAttribute(o,n),(new Un).fromBufferAttribute(o,r)]),void 0!==c&&t.faceVertexUvs[1].push([(new Un).fromBufferAttribute(c,e),(new Un).fromBufferAttribute(c,n),(new Un).fromBufferAttribute(c,r)])}const u=e.groups;if(u.length>0)for(let e=0;e<u.length;e++){const t=u[e],r=t.start;for(let e=r,a=r+t.count;e<a;e+=3)void 0!==n?l(n.getX(e),n.getX(e+1),n.getX(e+2),t.materialIndex):l(e,e+1,e+2,t.materialIndex)}else if(void 0!==n)for(let e=0;e<n.count;e+=3)l(n.getX(e),n.getX(e+1),n.getX(e+2));else for(let e=0;e<a.count;e+=3)l(e,e+1,e+2);return this.computeFaceNormals(),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(Yc).negate(),this.translate(Yc.x,Yc.y,Yc.z),this},normalize:function(){this.computeBoundingSphere();const e=this.boundingSphere.center,t=this.boundingSphere.radius,n=0===t?1:1/t,r=new Er;return r.set(n,0,0,-n*e.x,0,n,0,-n*e.y,0,0,n,-n*e.z,0,0,0,1),this.applyMatrix4(r),this},computeFaceNormals:function(){const e=new Zn,t=new Zn;for(let n=0,r=this.faces.length;n<r;n++){const r=this.faces[n],a=this.vertices[r.a],i=this.vertices[r.b],s=this.vertices[r.c];e.subVectors(s,i),t.subVectors(a,i),e.cross(t),e.normalize(),r.normal.copy(e)}},computeVertexNormals:function(e=!0){const t=new Array(this.vertices.length);for(let e=0,n=this.vertices.length;e<n;e++)t[e]=new Zn;if(e){const e=new Zn,n=new Zn;for(let r=0,a=this.faces.length;r<a;r++){const a=this.faces[r],i=this.vertices[a.a],s=this.vertices[a.b],o=this.vertices[a.c];e.subVectors(o,s),n.subVectors(i,s),e.cross(n),t[a.a].add(e),t[a.b].add(e),t[a.c].add(e)}}else{this.computeFaceNormals();for(let e=0,n=this.faces.length;e<n;e++){const n=this.faces[e];t[n.a].add(n.normal),t[n.b].add(n.normal),t[n.c].add(n.normal)}}for(let e=0,n=this.vertices.length;e<n;e++)t[e].normalize();for(let e=0,n=this.faces.length;e<n;e++){const n=this.faces[e],r=n.vertexNormals;3===r.length?(r[0].copy(t[n.a]),r[1].copy(t[n.b]),r[2].copy(t[n.c])):(r[0]=t[n.a].clone(),r[1]=t[n.b].clone(),r[2]=t[n.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){this.computeFaceNormals();for(let e=0,t=this.faces.length;e<t;e++){const t=this.faces[e],n=t.vertexNormals;3===n.length?(n[0].copy(t.normal),n[1].copy(t.normal),n[2].copy(t.normal)):(n[0]=t.normal.clone(),n[1]=t.normal.clone(),n[2]=t.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){for(let e=0,t=this.faces.length;e<t;e++){const t=this.faces[e];t.__originalFaceNormal?t.__originalFaceNormal.copy(t.normal):t.__originalFaceNormal=t.normal.clone(),t.__originalVertexNormals||(t.__originalVertexNormals=[]);for(let e=0,n=t.vertexNormals.length;e<n;e++)t.__originalVertexNormals[e]?t.__originalVertexNormals[e].copy(t.vertexNormals[e]):t.__originalVertexNormals[e]=t.vertexNormals[e].clone()}const e=new Kc;e.faces=this.faces;for(let t=0,n=this.morphTargets.length;t<n;t++){if(!this.morphNormals[t]){this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[];const e=this.morphNormals[t].faceNormals,n=this.morphNormals[t].vertexNormals;for(let t=0,r=this.faces.length;t<r;t++){const t=new Zn,r={a:new Zn,b:new Zn,c:new Zn};e.push(t),n.push(r)}}const n=this.morphNormals[t];e.vertices=this.morphTargets[t].vertices,e.computeFaceNormals(),e.computeVertexNormals();for(let e=0,t=this.faces.length;e<t;e++){const t=this.faces[e],r=n.faceNormals[e],a=n.vertexNormals[e];r.copy(t.normal),a.a.copy(t.vertexNormals[0]),a.b.copy(t.vertexNormals[1]),a.c.copy(t.vertexNormals[2])}}for(let e=0,t=this.faces.length;e<t;e++){const t=this.faces[e];t.normal=t.__originalFaceNormal,t.vertexNormals=t.__originalVertexNormals}},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new er),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new gr),this.boundingSphere.setFromPoints(this.vertices)},merge:function(e,t,n=0){if(!e||!e.isGeometry)return void console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",e);let r;const a=this.vertices.length,i=this.vertices,s=e.vertices,o=this.faces,c=e.faces,l=this.colors,u=e.colors;void 0!==t&&(r=(new zn).getNormalMatrix(t));for(let e=0,n=s.length;e<n;e++){const n=s[e].clone();void 0!==t&&n.applyMatrix4(t),i.push(n)}for(let e=0,t=u.length;e<t;e++)l.push(u[e].clone());for(let e=0,t=c.length;e<t;e++){const t=c[e];let i,s;const l=t.vertexNormals,u=t.vertexColors,h=new va(t.a+a,t.b+a,t.c+a);h.normal.copy(t.normal),void 0!==r&&h.normal.applyMatrix3(r).normalize();for(let e=0,t=l.length;e<t;e++)i=l[e].clone(),void 0!==r&&i.applyMatrix3(r).normalize(),h.vertexNormals.push(i);h.color.copy(t.color);for(let e=0,t=u.length;e<t;e++)s=u[e],h.vertexColors.push(s.clone());h.materialIndex=t.materialIndex+n,o.push(h)}for(let t=0,n=e.faceVertexUvs.length;t<n;t++){const n=e.faceVertexUvs[t];void 0===this.faceVertexUvs[t]&&(this.faceVertexUvs[t]=[]);for(let e=0,r=n.length;e<r;e++){const r=n[e],a=[];for(let e=0,t=r.length;e<t;e++)a.push(r[e].clone());this.faceVertexUvs[t].push(a)}}},mergeMesh:function(e){e&&e.isMesh?(e.matrixAutoUpdate&&e.updateMatrix(),this.merge(e.geometry,e.matrix)):console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",e)},mergeVertices:function(e=4){const t={},n=[],r=[],a=Math.pow(10,e);for(let e=0,i=this.vertices.length;e<i;e++){const i=this.vertices[e],s=Math.round(i.x*a)+"_"+Math.round(i.y*a)+"_"+Math.round(i.z*a);void 0===t[s]?(t[s]=e,n.push(this.vertices[e]),r[e]=n.length-1):r[e]=r[t[s]]}const i=[];for(let e=0,t=this.faces.length;e<t;e++){const t=this.faces[e];t.a=r[t.a],t.b=r[t.b],t.c=r[t.c];const n=[t.a,t.b,t.c];for(let t=0;t<3;t++)if(n[t]===n[(t+1)%3]){i.push(e);break}}for(let e=i.length-1;e>=0;e--){const t=i[e];this.faces.splice(t,1);for(let e=0,n=this.faceVertexUvs.length;e<n;e++)this.faceVertexUvs[e].splice(t,1)}const s=this.vertices.length-n.length;return this.vertices=n,s},setFromPoints:function(e){this.vertices=[];for(let t=0,n=e.length;t<n;t++){const n=e[t];this.vertices.push(new Zn(n.x,n.y,n.z||0))}return this},sortFacesByMaterialIndex:function(){const e=this.faces,t=e.length;for(let n=0;n<t;n++)e[n]._id=n;e.sort((function(e,t){return e.materialIndex-t.materialIndex}));const n=this.faceVertexUvs[0],r=this.faceVertexUvs[1];let a,i;n&&n.length===t&&(a=[]),r&&r.length===t&&(i=[]);for(let s=0;s<t;s++){const t=e[s]._id;a&&a.push(n[t]),i&&i.push(r[t])}a&&(this.faceVertexUvs[0]=a),i&&(this.faceVertexUvs[1]=i)},toJSON:function(){const e={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),void 0!==this.parameters){const t=this.parameters;for(const n in t)void 0!==t[n]&&(e[n]=t[n]);return e}const t=[];for(let e=0;e<this.vertices.length;e++){const n=this.vertices[e];t.push(n.x,n.y,n.z)}const n=[],r=[],a={},i=[],s={},o=[],c={};for(let e=0;e<this.faces.length;e++){const t=this.faces[e],r=!0,a=!1,i=void 0!==this.faceVertexUvs[0][e],s=t.normal.length()>0,o=t.vertexNormals.length>0,c=1!==t.color.r||1!==t.color.g||1!==t.color.b,p=t.vertexColors.length>0;let f=0;if(f=l(f,0,0),f=l(f,1,r),f=l(f,2,a),f=l(f,3,i),f=l(f,4,s),f=l(f,5,o),f=l(f,6,c),f=l(f,7,p),n.push(f),n.push(t.a,t.b,t.c),n.push(t.materialIndex),i){const t=this.faceVertexUvs[0][e];n.push(d(t[0]),d(t[1]),d(t[2]))}if(s&&n.push(u(t.normal)),o){const e=t.vertexNormals;n.push(u(e[0]),u(e[1]),u(e[2]))}if(c&&n.push(h(t.color)),p){const e=t.vertexColors;n.push(h(e[0]),h(e[1]),h(e[2]))}}function l(e,t,n){return n?e|1<<t:e&~(1<<t)}function u(e){const t=e.x.toString()+e.y.toString()+e.z.toString();return void 0!==a[t]||(a[t]=r.length/3,r.push(e.x,e.y,e.z)),a[t]}function h(e){const t=e.r.toString()+e.g.toString()+e.b.toString();return void 0!==s[t]||(s[t]=i.length,i.push(e.getHex())),s[t]}function d(e){const t=e.x.toString()+e.y.toString();return void 0!==c[t]||(c[t]=o.length/2,o.push(e.x,e.y)),c[t]}return e.data={},e.data.vertices=t,e.data.normals=r,i.length>0&&(e.data.colors=i),o.length>0&&(e.data.uvs=[o]),e.data.faces=n,e},clone:function(){return(new Kc).copy(this)},copy:function(e){this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=e.name;const t=e.vertices;for(let e=0,n=t.length;e<n;e++)this.vertices.push(t[e].clone());const n=e.colors;for(let e=0,t=n.length;e<t;e++)this.colors.push(n[e].clone());const r=e.faces;for(let e=0,t=r.length;e<t;e++)this.faces.push(r[e].clone());for(let t=0,n=e.faceVertexUvs.length;t<n;t++){const n=e.faceVertexUvs[t];void 0===this.faceVertexUvs[t]&&(this.faceVertexUvs[t]=[]);for(let e=0,r=n.length;e<r;e++){const r=n[e],a=[];for(let e=0,t=r.length;e<t;e++){const t=r[e];a.push(t.clone())}this.faceVertexUvs[t].push(a)}}const a=e.morphTargets;for(let e=0,t=a.length;e<t;e++){const t={};if(t.name=a[e].name,void 0!==a[e].vertices){t.vertices=[];for(let n=0,r=a[e].vertices.length;n<r;n++)t.vertices.push(a[e].vertices[n].clone())}if(void 0!==a[e].normals){t.normals=[];for(let n=0,r=a[e].normals.length;n<r;n++)t.normals.push(a[e].normals[n].clone())}this.morphTargets.push(t)}const i=e.morphNormals;for(let e=0,t=i.length;e<t;e++){const t={};if(void 0!==i[e].vertexNormals){t.vertexNormals=[];for(let n=0,r=i[e].vertexNormals.length;n<r;n++){const r=i[e].vertexNormals[n],a={};a.a=r.a.clone(),a.b=r.b.clone(),a.c=r.c.clone(),t.vertexNormals.push(a)}}if(void 0!==i[e].faceNormals){t.faceNormals=[];for(let n=0,r=i[e].faceNormals.length;n<r;n++)t.faceNormals.push(i[e].faceNormals[n].clone())}this.morphNormals.push(t)}const s=e.skinWeights;for(let e=0,t=s.length;e<t;e++)this.skinWeights.push(s[e].clone());const o=e.skinIndices;for(let e=0,t=o.length;e<t;e++)this.skinIndices.push(o[e].clone());const c=e.lineDistances;for(let e=0,t=c.length;e<t;e++)this.lineDistances.push(c[e]);const l=e.boundingBox;null!==l&&(this.boundingBox=l.clone());const u=e.boundingSphere;return null!==u&&(this.boundingSphere=u.clone()),this.elementsNeedUpdate=e.elementsNeedUpdate,this.verticesNeedUpdate=e.verticesNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.lineDistancesNeedUpdate=e.lineDistancesNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});class Zc extends Kc{constructor(e,t,n,r,a,i){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:r,heightSegments:a,depthSegments:i},this.fromBufferGeometry(new fi(e,t,n,r,a,i)),this.mergeVertices()}}class Jc extends Xa{constructor(e=1,t=8,n=0,r=2*Math.PI){super(),this.type="CircleBufferGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:r},t=Math.max(3,t);const a=[],i=[],s=[],o=[],c=new Zn,l=new Un;i.push(0,0,0),s.push(0,0,1),o.push(.5,.5);for(let a=0,u=3;a<=t;a++,u+=3){const h=n+a/t*r;c.x=e*Math.cos(h),c.y=e*Math.sin(h),i.push(c.x,c.y,c.z),s.push(0,0,1),l.x=(i[u]/e+1)/2,l.y=(i[u+1]/e+1)/2,o.push(l.x,l.y)}for(let e=1;e<=t;e++)a.push(e,e+1,0);this.setIndex(a),this.setAttribute("position",new La(i,3)),this.setAttribute("normal",new La(s,3)),this.setAttribute("uv",new La(o,2))}}class Qc extends Kc{constructor(e,t,n,r){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:r},this.fromBufferGeometry(new Jc(e,t,n,r)),this.mergeVertices()}}class el extends Xa{constructor(e=1,t=1,n=1,r=8,a=1,i=!1,s=0,o=2*Math.PI){super(),this.type="CylinderBufferGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:r,heightSegments:a,openEnded:i,thetaStart:s,thetaLength:o};const c=this;r=Math.floor(r),a=Math.floor(a);const l=[],u=[],h=[],d=[];let p=0;const f=[],m=n/2;let g=0;function y(n){const a=p,i=new Un,f=new Zn;let y=0;const x=!0===n?e:t,v=!0===n?1:-1;for(let e=1;e<=r;e++)u.push(0,m*v,0),h.push(0,v,0),d.push(.5,.5),p++;const b=p;for(let e=0;e<=r;e++){const t=e/r*o+s,n=Math.cos(t),a=Math.sin(t);f.x=x*a,f.y=m*v,f.z=x*n,u.push(f.x,f.y,f.z),h.push(0,v,0),i.x=.5*n+.5,i.y=.5*a*v+.5,d.push(i.x,i.y),p++}for(let e=0;e<r;e++){const t=a+e,r=b+e;!0===n?l.push(r,r+1,t):l.push(r+1,r,t),y+=3}c.addGroup(g,y,!0===n?1:2),g+=y}!function(){const i=new Zn,y=new Zn;let x=0;const v=(t-e)/n;for(let c=0;c<=a;c++){const l=[],g=c/a,x=g*(t-e)+e;for(let e=0;e<=r;e++){const t=e/r,a=t*o+s,c=Math.sin(a),f=Math.cos(a);y.x=x*c,y.y=-g*n+m,y.z=x*f,u.push(y.x,y.y,y.z),i.set(c,v,f).normalize(),h.push(i.x,i.y,i.z),d.push(t,1-g),l.push(p++)}f.push(l)}for(let e=0;e<r;e++)for(let t=0;t<a;t++){const n=f[t][e],r=f[t+1][e],a=f[t+1][e+1],i=f[t][e+1];l.push(n,r,i),l.push(r,a,i),x+=6}c.addGroup(g,x,0),g+=x}(),!1===i&&(e>0&&y(!0),t>0&&y(!1)),this.setIndex(l),this.setAttribute("position",new La(u,3)),this.setAttribute("normal",new La(h,3)),this.setAttribute("uv",new La(d,2))}}class tl extends Kc{constructor(e,t,n,r,a,i,s,o){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:r,heightSegments:a,openEnded:i,thetaStart:s,thetaLength:o},this.fromBufferGeometry(new el(e,t,n,r,a,i,s,o)),this.mergeVertices()}}class nl extends tl{constructor(e,t,n,r,a,i,s){super(0,e,t,n,r,a,i,s),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:r,openEnded:a,thetaStart:i,thetaLength:s}}}class rl extends el{constructor(e=1,t=1,n=8,r=1,a=!1,i=0,s=2*Math.PI){super(0,e,t,n,r,a,i,s),this.type="ConeBufferGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:r,openEnded:a,thetaStart:i,thetaLength:s}}}class al extends Xa{constructor(e,t,n=1,r=0){super(),this.type="PolyhedronBufferGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:r};const a=[],i=[];function s(e,t,n,r){const a=r+1,i=[];for(let r=0;r<=a;r++){i[r]=[];const s=e.clone().lerp(n,r/a),o=t.clone().lerp(n,r/a),c=a-r;for(let e=0;e<=c;e++)i[r][e]=0===e&&r===a?s:s.clone().lerp(o,e/c)}for(let e=0;e<a;e++)for(let t=0;t<2*(a-e)-1;t++){const n=Math.floor(t/2);t%2==0?(o(i[e][n+1]),o(i[e+1][n]),o(i[e][n])):(o(i[e][n+1]),o(i[e+1][n+1]),o(i[e+1][n]))}}function o(e){a.push(e.x,e.y,e.z)}function c(t,n){const r=3*t;n.x=e[r+0],n.y=e[r+1],n.z=e[r+2]}function l(e,t,n,r){r<0&&1===e.x&&(i[t]=e.x-1),0===n.x&&0===n.z&&(i[t]=r/2/Math.PI+.5)}function u(e){return Math.atan2(e.z,-e.x)}!function(e){const n=new Zn,r=new Zn,a=new Zn;for(let i=0;i<t.length;i+=3)c(t[i+0],n),c(t[i+1],r),c(t[i+2],a),s(n,r,a,e)}(r),function(e){const t=new Zn;for(let n=0;n<a.length;n+=3)t.x=a[n+0],t.y=a[n+1],t.z=a[n+2],t.normalize().multiplyScalar(e),a[n+0]=t.x,a[n+1]=t.y,a[n+2]=t.z}(n),function(){const e=new Zn;for(let n=0;n<a.length;n+=3){e.x=a[n+0],e.y=a[n+1],e.z=a[n+2];const r=u(e)/2/Math.PI+.5,s=(t=e,Math.atan2(-t.y,Math.sqrt(t.x*t.x+t.z*t.z))/Math.PI+.5);i.push(r,1-s)}var t;(function(){const e=new Zn,t=new Zn,n=new Zn,r=new Zn,s=new Un,o=new Un,c=new Un;for(let h=0,d=0;h<a.length;h+=9,d+=6){e.set(a[h+0],a[h+1],a[h+2]),t.set(a[h+3],a[h+4],a[h+5]),n.set(a[h+6],a[h+7],a[h+8]),s.set(i[d+0],i[d+1]),o.set(i[d+2],i[d+3]),c.set(i[d+4],i[d+5]),r.copy(e).add(t).add(n).divideScalar(3);const p=u(r);l(s,d+0,e,p),l(o,d+2,t,p),l(c,d+4,n,p)}})(),function(){for(let e=0;e<i.length;e+=6){const t=i[e+0],n=i[e+2],r=i[e+4],a=Math.max(t,n,r),s=Math.min(t,n,r);a>.9&&s<.1&&(t<.2&&(i[e+0]+=1),n<.2&&(i[e+2]+=1),r<.2&&(i[e+4]+=1))}}()}(),this.setAttribute("position",new La(a,3)),this.setAttribute("normal",new La(a.slice(),3)),this.setAttribute("uv",new La(i,2)),0===r?this.computeVertexNormals():this.normalizeNormals()}}class il extends al{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,r=1/n;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-n,0,-r,n,0,r,-n,0,r,n,-r,-n,0,-r,n,0,r,-n,0,r,n,0,-n,0,-r,n,0,-r,-n,0,r,n,0,r],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t),this.type="DodecahedronBufferGeometry",this.parameters={radius:e,detail:t}}}class sl extends Kc{constructor(e,t){super(),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new il(e,t)),this.mergeVertices()}}const ol=new Zn,cl=new Zn,ll=new Zn,ul=new ha;class hl extends Xa{constructor(e,t){super(),this.type="EdgesGeometry",this.parameters={thresholdAngle:t},t=void 0!==t?t:1,e.isGeometry&&(e=(new Xa).fromGeometry(e));const n=Math.pow(10,4),r=Math.cos($n.DEG2RAD*t),a=e.getIndex(),i=e.getAttribute("position"),s=a?a.count:i.count,o=[0,0,0],c=["a","b","c"],l=new Array(3),u={},h=[];for(let e=0;e<s;e+=3){a?(o[0]=a.getX(e),o[1]=a.getX(e+1),o[2]=a.getX(e+2)):(o[0]=e,o[1]=e+1,o[2]=e+2);const{a:t,b:s,c:d}=ul;if(t.fromBufferAttribute(i,o[0]),s.fromBufferAttribute(i,o[1]),d.fromBufferAttribute(i,o[2]),ul.getNormal(ll),l[0]=`${Math.round(t.x*n)},${Math.round(t.y*n)},${Math.round(t.z*n)}`,l[1]=`${Math.round(s.x*n)},${Math.round(s.y*n)},${Math.round(s.z*n)}`,l[2]=`${Math.round(d.x*n)},${Math.round(d.y*n)},${Math.round(d.z*n)}`,l[0]!==l[1]&&l[1]!==l[2]&&l[2]!==l[0])for(let e=0;e<3;e++){const t=(e+1)%3,n=l[e],a=l[t],i=ul[c[e]],s=ul[c[t]],d=`${n}_${a}`,p=`${a}_${n}`;p in u&&u[p]?(ll.dot(u[p].normal)<=r&&(h.push(i.x,i.y,i.z),h.push(s.x,s.y,s.z)),u[p]=null):d in u||(u[d]={index0:o[e],index1:o[t],normal:ll.clone()})}}for(const e in u)if(u[e]){const{index0:t,index1:n}=u[e];ol.fromBufferAttribute(i,t),cl.fromBufferAttribute(i,n),h.push(ol.x,ol.y,ol.z),h.push(cl.x,cl.y,cl.z)}this.setAttribute("position",new La(h,3))}}function dl(e,t,n,r,a){let i,s;if(a===function(e,t,n,r){let a=0;for(let i=t,s=n-r;i<n;i+=r)a+=(e[s]-e[i])*(e[i+1]+e[s+1]),s=i;return a}(e,t,n,r)>0)for(i=t;i<n;i+=r)s=Dl(i,e[i],e[i+1],s);else for(i=n-r;i>=t;i-=r)s=Dl(i,e[i],e[i+1],s);return s&&Il(s,s.next)&&(Ll(s),s=s.next),s}function pl(e,t){if(!e)return e;t||(t=e);let n,r=e;do{if(n=!1,r.steiner||!Il(r,r.next)&&0!==Ml(r.prev,r,r.next))r=r.next;else{if(Ll(r),r=t=r.prev,r===r.next)break;n=!0}}while(n||r!==t);return t}function fl(e,t,n,r,a,i,s){if(!e)return;!s&&i&&function(e,t,n,r){let a=e;do{null===a.z&&(a.z=_l(a.x,a.y,t,n,r)),a.prevZ=a.prev,a.nextZ=a.next,a=a.next}while(a!==e);a.prevZ.nextZ=null,a.prevZ=null,function(e){let t,n,r,a,i,s,o,c,l=1;do{for(n=e,e=null,i=null,s=0;n;){for(s++,r=n,o=0,t=0;t<l&&(o++,r=r.nextZ,r);t++);for(c=l;o>0||c>0&&r;)0!==o&&(0===c||!r||n.z<=r.z)?(a=n,n=n.nextZ,o--):(a=r,r=r.nextZ,c--),i?i.nextZ=a:e=a,a.prevZ=i,i=a;n=r}i.nextZ=null,l*=2}while(s>1)}(a)}(e,r,a,i);let o,c,l=e;for(;e.prev!==e.next;)if(o=e.prev,c=e.next,i?gl(e,r,a,i):ml(e))t.push(o.i/n),t.push(e.i/n),t.push(c.i/n),Ll(e),e=c.next,l=c.next;else if((e=c)===l){s?1===s?fl(e=yl(pl(e),t,n),t,n,r,a,i,2):2===s&&xl(e,t,n,r,a,i):fl(pl(e),t,n,r,a,i,1);break}}function ml(e){const t=e.prev,n=e,r=e.next;if(Ml(t,n,r)>=0)return!1;let a=e.next.next;for(;a!==e.prev;){if(Sl(t.x,t.y,n.x,n.y,r.x,r.y,a.x,a.y)&&Ml(a.prev,a,a.next)>=0)return!1;a=a.next}return!0}function gl(e,t,n,r){const a=e.prev,i=e,s=e.next;if(Ml(a,i,s)>=0)return!1;const o=a.x<i.x?a.x<s.x?a.x:s.x:i.x<s.x?i.x:s.x,c=a.y<i.y?a.y<s.y?a.y:s.y:i.y<s.y?i.y:s.y,l=a.x>i.x?a.x>s.x?a.x:s.x:i.x>s.x?i.x:s.x,u=a.y>i.y?a.y>s.y?a.y:s.y:i.y>s.y?i.y:s.y,h=_l(o,c,t,n,r),d=_l(l,u,t,n,r);let p=e.prevZ,f=e.nextZ;for(;p&&p.z>=h&&f&&f.z<=d;){if(p!==e.prev&&p!==e.next&&Sl(a.x,a.y,i.x,i.y,s.x,s.y,p.x,p.y)&&Ml(p.prev,p,p.next)>=0)return!1;if(p=p.prevZ,f!==e.prev&&f!==e.next&&Sl(a.x,a.y,i.x,i.y,s.x,s.y,f.x,f.y)&&Ml(f.prev,f,f.next)>=0)return!1;f=f.nextZ}for(;p&&p.z>=h;){if(p!==e.prev&&p!==e.next&&Sl(a.x,a.y,i.x,i.y,s.x,s.y,p.x,p.y)&&Ml(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;f&&f.z<=d;){if(f!==e.prev&&f!==e.next&&Sl(a.x,a.y,i.x,i.y,s.x,s.y,f.x,f.y)&&Ml(f.prev,f,f.next)>=0)return!1;f=f.nextZ}return!0}function yl(e,t,n){let r=e;do{const a=r.prev,i=r.next.next;!Il(a,i)&&Nl(a,r,r.next,i)&&kl(a,i)&&kl(i,a)&&(t.push(a.i/n),t.push(r.i/n),t.push(i.i/n),Ll(r),Ll(r.next),r=e=i),r=r.next}while(r!==e);return pl(r)}function xl(e,t,n,r,a,i){let s=e;do{let e=s.next.next;for(;e!==s.prev;){if(s.i!==e.i&&El(s,e)){let o=Rl(s,e);return s=pl(s,s.next),o=pl(o,o.next),fl(s,t,n,r,a,i),void fl(o,t,n,r,a,i)}e=e.next}s=s.next}while(s!==e)}function vl(e,t){return e.x-t.x}function bl(e,t){if(t=function(e,t){let n=t;const r=e.x,a=e.y;let i,s=-1/0;do{if(a<=n.y&&a>=n.next.y&&n.next.y!==n.y){const e=n.x+(a-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(e<=r&&e>s){if(s=e,e===r){if(a===n.y)return n;if(a===n.next.y)return n.next}i=n.x<n.next.x?n:n.next}}n=n.next}while(n!==t);if(!i)return null;if(r===s)return i;const o=i,c=i.x,l=i.y;let u,h=1/0;n=i;do{r>=n.x&&n.x>=c&&r!==n.x&&Sl(a<l?r:s,a,c,l,a<l?s:r,a,n.x,n.y)&&(u=Math.abs(a-n.y)/(r-n.x),kl(n,e)&&(u<h||u===h&&(n.x>i.x||n.x===i.x&&wl(i,n)))&&(i=n,h=u)),n=n.next}while(n!==o);return i}(e,t)){const n=Rl(t,e);pl(t,t.next),pl(n,n.next)}}function wl(e,t){return Ml(e.prev,e,t.prev)<0&&Ml(t.next,e,e.next)<0}function _l(e,t,n,r,a){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-n)*a)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-r)*a)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function Tl(e){let t=e,n=e;do{(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next}while(t!==e);return n}function Sl(e,t,n,r,a,i,s,o){return(a-s)*(t-o)-(e-s)*(i-o)>=0&&(e-s)*(r-o)-(n-s)*(t-o)>=0&&(n-s)*(i-o)-(a-s)*(r-o)>=0}function El(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){let n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&Nl(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}(e,t)&&(kl(e,t)&&kl(t,e)&&function(e,t){let n=e,r=!1;const a=(e.x+t.x)/2,i=(e.y+t.y)/2;do{n.y>i!=n.next.y>i&&n.next.y!==n.y&&a<(n.next.x-n.x)*(i-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next}while(n!==e);return r}(e,t)&&(Ml(e.prev,e,t.prev)||Ml(e,t.prev,t))||Il(e,t)&&Ml(e.prev,e,e.next)>0&&Ml(t.prev,t,t.next)>0)}function Ml(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function Il(e,t){return e.x===t.x&&e.y===t.y}function Nl(e,t,n,r){const a=Al(Ml(e,t,n)),i=Al(Ml(e,t,r)),s=Al(Ml(n,r,e)),o=Al(Ml(n,r,t));return a!==i&&s!==o||!(0!==a||!Cl(e,n,t))||!(0!==i||!Cl(e,r,t))||!(0!==s||!Cl(n,e,r))||!(0!==o||!Cl(n,t,r))}function Cl(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function Al(e){return e>0?1:e<0?-1:0}function kl(e,t){return Ml(e.prev,e,e.next)<0?Ml(e,t,e.next)>=0&&Ml(e,e.prev,t)>=0:Ml(e,t,e.prev)<0||Ml(e,e.next,t)<0}function Rl(e,t){const n=new Ol(e.i,e.x,e.y),r=new Ol(t.i,t.x,t.y),a=e.next,i=t.prev;return e.next=t,t.prev=e,n.next=a,a.prev=n,r.next=n,n.prev=r,i.next=r,r.prev=i,r}function Dl(e,t,n,r){const a=new Ol(e,t,n);return r?(a.next=r.next,a.prev=r,r.next.prev=a,r.next=a):(a.prev=a,a.next=a),a}function Ll(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function Ol(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}const Pl={area:function(e){const t=e.length;let n=0;for(let r=t-1,a=0;a<t;r=a++)n+=e[r].x*e[a].y-e[a].x*e[r].y;return.5*n},isClockWise:function(e){return Pl.area(e)<0},triangulateShape:function(e,t){const n=[],r=[],a=[];Fl(e),Bl(n,e);let i=e.length;t.forEach(Fl);for(let e=0;e<t.length;e++)r.push(i),i+=t[e].length,Bl(n,t[e]);const s=function(e,t,n){n=n||2;const r=t&&t.length,a=r?t[0]*n:e.length;let i=dl(e,0,a,n,!0);const s=[];if(!i||i.next===i.prev)return s;let o,c,l,u,h,d,p;if(r&&(i=function(e,t,n,r){const a=[];let i,s,o,c,l;for(i=0,s=t.length;i<s;i++)o=t[i]*r,c=i<s-1?t[i+1]*r:e.length,l=dl(e,o,c,r,!1),l===l.next&&(l.steiner=!0),a.push(Tl(l));for(a.sort(vl),i=0;i<a.length;i++)bl(a[i],n),n=pl(n,n.next);return n}(e,t,i,n)),e.length>80*n){o=l=e[0],c=u=e[1];for(let t=n;t<a;t+=n)h=e[t],d=e[t+1],h<o&&(o=h),d<c&&(c=d),h>l&&(l=h),d>u&&(u=d);p=Math.max(l-o,u-c),p=0!==p?1/p:0}return fl(i,s,n,o,c,p),s}(n,r);for(let e=0;e<s.length;e+=3)a.push(s.slice(e,e+3));return a}};function Fl(e){const t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function Bl(e,t){for(let n=0;n<t.length;n++)e.push(t[n].x),e.push(t[n].y)}class $l extends Xa{constructor(e,t){super(),this.type="ExtrudeBufferGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,r=[],a=[];for(let t=0,n=e.length;t<n;t++)i(e[t]);function i(e){const i=[],s=void 0!==t.curveSegments?t.curveSegments:12,o=void 0!==t.steps?t.steps:1;let c=void 0!==t.depth?t.depth:100,l=void 0===t.bevelEnabled||t.bevelEnabled,u=void 0!==t.bevelThickness?t.bevelThickness:6,h=void 0!==t.bevelSize?t.bevelSize:u-2,d=void 0!==t.bevelOffset?t.bevelOffset:0,p=void 0!==t.bevelSegments?t.bevelSegments:3;const f=t.extrudePath,m=void 0!==t.UVGenerator?t.UVGenerator:Ul;void 0!==t.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),c=t.amount);let g,y,x,v,b,w=!1;f&&(g=f.getSpacedPoints(o),w=!0,l=!1,y=f.computeFrenetFrames(o,!1),x=new Zn,v=new Zn,b=new Zn),l||(p=0,u=0,h=0,d=0);const _=e.extractPoints(s);let T=_.shape;const S=_.holes;if(!Pl.isClockWise(T)){T=T.reverse();for(let e=0,t=S.length;e<t;e++){const t=S[e];Pl.isClockWise(t)&&(S[e]=t.reverse())}}const E=Pl.triangulateShape(T,S),M=T;for(let e=0,t=S.length;e<t;e++){const t=S[e];T=T.concat(t)}function I(e,t,n){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(n).add(e)}const N=T.length,C=E.length;function A(e,t,n){let r,a,i;const s=e.x-t.x,o=e.y-t.y,c=n.x-e.x,l=n.y-e.y,u=s*s+o*o,h=s*l-o*c;if(Math.abs(h)>Number.EPSILON){const h=Math.sqrt(u),d=Math.sqrt(c*c+l*l),p=t.x-o/h,f=t.y+s/h,m=((n.x-l/d-p)*l-(n.y+c/d-f)*c)/(s*l-o*c);r=p+s*m-e.x,a=f+o*m-e.y;const g=r*r+a*a;if(g<=2)return new Un(r,a);i=Math.sqrt(g/2)}else{let e=!1;s>Number.EPSILON?c>Number.EPSILON&&(e=!0):s<-Number.EPSILON?c<-Number.EPSILON&&(e=!0):Math.sign(o)===Math.sign(l)&&(e=!0),e?(r=-o,a=s,i=Math.sqrt(u)):(r=s,a=o,i=Math.sqrt(u/2))}return new Un(r/i,a/i)}const k=[];for(let e=0,t=M.length,n=t-1,r=e+1;e<t;e++,n++,r++)n===t&&(n=0),r===t&&(r=0),k[e]=A(M[e],M[n],M[r]);const R=[];let D,L=k.concat();for(let e=0,t=S.length;e<t;e++){const t=S[e];D=[];for(let e=0,n=t.length,r=n-1,a=e+1;e<n;e++,r++,a++)r===n&&(r=0),a===n&&(a=0),D[e]=A(t[e],t[r],t[a]);R.push(D),L=L.concat(D)}for(let e=0;e<p;e++){const t=e/p,n=u*Math.cos(t*Math.PI/2),r=h*Math.sin(t*Math.PI/2)+d;for(let e=0,t=M.length;e<t;e++){const t=I(M[e],k[e],r);F(t.x,t.y,-n)}for(let e=0,t=S.length;e<t;e++){const t=S[e];D=R[e];for(let e=0,a=t.length;e<a;e++){const a=I(t[e],D[e],r);F(a.x,a.y,-n)}}}const O=h+d;for(let e=0;e<N;e++){const t=l?I(T[e],L[e],O):T[e];w?(v.copy(y.normals[0]).multiplyScalar(t.x),x.copy(y.binormals[0]).multiplyScalar(t.y),b.copy(g[0]).add(v).add(x),F(b.x,b.y,b.z)):F(t.x,t.y,0)}for(let e=1;e<=o;e++)for(let t=0;t<N;t++){const n=l?I(T[t],L[t],O):T[t];w?(v.copy(y.normals[e]).multiplyScalar(n.x),x.copy(y.binormals[e]).multiplyScalar(n.y),b.copy(g[e]).add(v).add(x),F(b.x,b.y,b.z)):F(n.x,n.y,c/o*e)}for(let e=p-1;e>=0;e--){const t=e/p,n=u*Math.cos(t*Math.PI/2),r=h*Math.sin(t*Math.PI/2)+d;for(let e=0,t=M.length;e<t;e++){const t=I(M[e],k[e],r);F(t.x,t.y,c+n)}for(let e=0,t=S.length;e<t;e++){const t=S[e];D=R[e];for(let e=0,a=t.length;e<a;e++){const a=I(t[e],D[e],r);w?F(a.x,a.y+g[o-1].y,g[o-1].x+n):F(a.x,a.y,c+n)}}}function P(e,t){let n=e.length;for(;--n>=0;){const r=n;let a=n-1;a<0&&(a=e.length-1);for(let e=0,n=o+2*p;e<n;e++){const n=N*e,i=N*(e+1);$(t+r+n,t+a+n,t+a+i,t+r+i)}}}function F(e,t,n){i.push(e),i.push(t),i.push(n)}function B(e,t,a){U(e),U(t),U(a);const i=r.length/3,s=m.generateTopUV(n,r,i-3,i-2,i-1);z(s[0]),z(s[1]),z(s[2])}function $(e,t,a,i){U(e),U(t),U(i),U(t),U(a),U(i);const s=r.length/3,o=m.generateSideWallUV(n,r,s-6,s-3,s-2,s-1);z(o[0]),z(o[1]),z(o[3]),z(o[1]),z(o[2]),z(o[3])}function U(e){r.push(i[3*e+0]),r.push(i[3*e+1]),r.push(i[3*e+2])}function z(e){a.push(e.x),a.push(e.y)}!function(){const e=r.length/3;if(l){let e=0,t=N*e;for(let e=0;e<C;e++){const n=E[e];B(n[2]+t,n[1]+t,n[0]+t)}e=o+2*p,t=N*e;for(let e=0;e<C;e++){const n=E[e];B(n[0]+t,n[1]+t,n[2]+t)}}else{for(let e=0;e<C;e++){const t=E[e];B(t[2],t[1],t[0])}for(let e=0;e<C;e++){const t=E[e];B(t[0]+N*o,t[1]+N*o,t[2]+N*o)}}n.addGroup(e,r.length/3-e,0)}(),function(){const e=r.length/3;let t=0;P(M,t),t+=M.length;for(let e=0,n=S.length;e<n;e++){const n=S[e];P(n,t),t+=n.length}n.addGroup(e,r.length/3-e,1)}()}this.setAttribute("position",new La(r,3)),this.setAttribute("uv",new La(a,2)),this.computeVertexNormals()}toJSON(){const e=Xa.prototype.toJSON.call(this);return function(e,t,n){if(n.shapes=[],Array.isArray(e))for(let t=0,r=e.length;t<r;t++){const r=e[t];n.shapes.push(r.uuid)}else n.shapes.push(e.uuid);return void 0!==t.extrudePath&&(n.options.extrudePath=t.extrudePath.toJSON()),n}(this.parameters.shapes,this.parameters.options,e)}}const Ul={generateTopUV:function(e,t,n,r,a){const i=t[3*n],s=t[3*n+1],o=t[3*r],c=t[3*r+1],l=t[3*a],u=t[3*a+1];return[new Un(i,s),new Un(o,c),new Un(l,u)]},generateSideWallUV:function(e,t,n,r,a,i){const s=t[3*n],o=t[3*n+1],c=t[3*n+2],l=t[3*r],u=t[3*r+1],h=t[3*r+2],d=t[3*a],p=t[3*a+1],f=t[3*a+2],m=t[3*i],g=t[3*i+1],y=t[3*i+2];return Math.abs(o-u)<.01?[new Un(s,1-c),new Un(l,1-h),new Un(d,1-f),new Un(m,1-y)]:[new Un(o,1-c),new Un(u,1-h),new Un(p,1-f),new Un(g,1-y)]}};class zl extends Kc{constructor(e,t){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},this.fromBufferGeometry(new $l(e,t)),this.mergeVertices()}toJSON(){const e=super.toJSON();return function(e,t,n){if(n.shapes=[],Array.isArray(e))for(let t=0,r=e.length;t<r;t++){const r=e[t];n.shapes.push(r.uuid)}else n.shapes.push(e.uuid);return void 0!==t.extrudePath&&(n.options.extrudePath=t.extrudePath.toJSON()),n}(this.parameters.shapes,this.parameters.options,e)}}class Gl extends al{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2;super([-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronBufferGeometry",this.parameters={radius:e,detail:t}}}class Hl extends Kc{constructor(e,t){super(),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new Gl(e,t)),this.mergeVertices()}}class Wl extends Xa{constructor(e,t=12,n=0,r=2*Math.PI){super(),this.type="LatheBufferGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:r},t=Math.floor(t),r=$n.clamp(r,0,2*Math.PI);const a=[],i=[],s=[],o=1/t,c=new Zn,l=new Un;for(let a=0;a<=t;a++){const u=n+a*o*r,h=Math.sin(u),d=Math.cos(u);for(let n=0;n<=e.length-1;n++)c.x=e[n].x*h,c.y=e[n].y,c.z=e[n].x*d,i.push(c.x,c.y,c.z),l.x=a/t,l.y=n/(e.length-1),s.push(l.x,l.y)}for(let n=0;n<t;n++)for(let t=0;t<e.length-1;t++){const r=t+n*e.length,i=r,s=r+e.length,o=r+e.length+1,c=r+1;a.push(i,s,c),a.push(s,o,c)}if(this.setIndex(a),this.setAttribute("position",new La(i,3)),this.setAttribute("uv",new La(s,2)),this.computeVertexNormals(),r===2*Math.PI){const n=this.attributes.normal.array,r=new Zn,a=new Zn,i=new Zn,s=t*e.length*3;for(let t=0,o=0;t<e.length;t++,o+=3)r.x=n[o+0],r.y=n[o+1],r.z=n[o+2],a.x=n[s+o+0],a.y=n[s+o+1],a.z=n[s+o+2],i.addVectors(r,a).normalize(),n[o+0]=n[s+o+0]=i.x,n[o+1]=n[s+o+1]=i.y,n[o+2]=n[s+o+2]=i.z}}}class Vl extends Kc{constructor(e,t,n,r){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:r},this.fromBufferGeometry(new Wl(e,t,n,r)),this.mergeVertices()}}class jl extends al{constructor(e=1,t=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronBufferGeometry",this.parameters={radius:e,detail:t}}}class Xl extends Kc{constructor(e,t){super(),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new jl(e,t)),this.mergeVertices()}}function ql(e,t,n){Xa.call(this),this.type="ParametricBufferGeometry",this.parameters={func:e,slices:t,stacks:n};const r=[],a=[],i=[],s=[],o=1e-5,c=new Zn,l=new Zn,u=new Zn,h=new Zn,d=new Zn;e.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");const p=t+1;for(let r=0;r<=n;r++){const p=r/n;for(let n=0;n<=t;n++){const r=n/t;e(r,p,l),a.push(l.x,l.y,l.z),r-o>=0?(e(r-o,p,u),h.subVectors(l,u)):(e(r+o,p,u),h.subVectors(u,l)),p-o>=0?(e(r,p-o,u),d.subVectors(l,u)):(e(r,p+o,u),d.subVectors(u,l)),c.crossVectors(h,d).normalize(),i.push(c.x,c.y,c.z),s.push(r,p)}}for(let e=0;e<n;e++)for(let n=0;n<t;n++){const t=e*p+n,a=e*p+n+1,i=(e+1)*p+n+1,s=(e+1)*p+n;r.push(t,a,s),r.push(a,i,s)}this.setIndex(r),this.setAttribute("position",new La(a,3)),this.setAttribute("normal",new La(i,3)),this.setAttribute("uv",new La(s,2))}function Yl(e,t,n){Kc.call(this),this.type="ParametricGeometry",this.parameters={func:e,slices:t,stacks:n},this.fromBufferGeometry(new ql(e,t,n)),this.mergeVertices()}ql.prototype=Object.create(Xa.prototype),ql.prototype.constructor=ql,Yl.prototype=Object.create(Kc.prototype),Yl.prototype.constructor=Yl;class Kl extends Kc{constructor(e,t,n,r){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r},this.fromBufferGeometry(new ki(e,t,n,r)),this.mergeVertices()}}class Zl extends Kc{constructor(e,t,n,r){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:r},this.fromBufferGeometry(new al(e,t,n,r)),this.mergeVertices()}}class Jl extends Xa{constructor(e=.5,t=1,n=8,r=1,a=0,i=2*Math.PI){super(),this.type="RingBufferGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:r,thetaStart:a,thetaLength:i},n=Math.max(3,n);const s=[],o=[],c=[],l=[];let u=e;const h=(t-e)/(r=Math.max(1,r)),d=new Zn,p=new Un;for(let e=0;e<=r;e++){for(let e=0;e<=n;e++){const r=a+e/n*i;d.x=u*Math.cos(r),d.y=u*Math.sin(r),o.push(d.x,d.y,d.z),c.push(0,0,1),p.x=(d.x/t+1)/2,p.y=(d.y/t+1)/2,l.push(p.x,p.y)}u+=h}for(let e=0;e<r;e++){const t=e*(n+1);for(let e=0;e<n;e++){const r=e+t,a=r,i=r+n+1,o=r+n+2,c=r+1;s.push(a,i,c),s.push(i,o,c)}}this.setIndex(s),this.setAttribute("position",new La(o,3)),this.setAttribute("normal",new La(c,3)),this.setAttribute("uv",new La(l,2))}}class Ql extends Kc{constructor(e,t,n,r,a,i){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:r,thetaStart:a,thetaLength:i},this.fromBufferGeometry(new Jl(e,t,n,r,a,i)),this.mergeVertices()}}class eu extends Xa{constructor(e,t=12){super(),this.type="ShapeBufferGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],r=[],a=[],i=[];let s=0,o=0;if(!1===Array.isArray(e))c(e);else for(let t=0;t<e.length;t++)c(e[t]),this.addGroup(s,o,t),s+=o,o=0;function c(e){const s=r.length/3,c=e.extractPoints(t);let l=c.shape;const u=c.holes;!1===Pl.isClockWise(l)&&(l=l.reverse());for(let e=0,t=u.length;e<t;e++){const t=u[e];!0===Pl.isClockWise(t)&&(u[e]=t.reverse())}const h=Pl.triangulateShape(l,u);for(let e=0,t=u.length;e<t;e++){const t=u[e];l=l.concat(t)}for(let e=0,t=l.length;e<t;e++){const t=l[e];r.push(t.x,t.y,0),a.push(0,0,1),i.push(t.x,t.y)}for(let e=0,t=h.length;e<t;e++){const t=h[e],r=t[0]+s,a=t[1]+s,i=t[2]+s;n.push(r,a,i),o+=3}}this.setIndex(n),this.setAttribute("position",new La(r,3)),this.setAttribute("normal",new La(a,3)),this.setAttribute("uv",new La(i,2))}toJSON(){const e=Xa.prototype.toJSON.call(this);return function(e,t){if(t.shapes=[],Array.isArray(e))for(let n=0,r=e.length;n<r;n++){const r=e[n];t.shapes.push(r.uuid)}else t.shapes.push(e.uuid);return t}(this.parameters.shapes,e)}}class tu extends Kc{constructor(e,t){super(),this.type="ShapeGeometry","object"==typeof t&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),t=t.curveSegments),this.parameters={shapes:e,curveSegments:t},this.fromBufferGeometry(new eu(e,t)),this.mergeVertices()}toJSON(){const e=Kc.prototype.toJSON.call(this);return function(e,t){if(t.shapes=[],Array.isArray(e))for(let n=0,r=e.length;n<r;n++){const r=e[n];t.shapes.push(r.uuid)}else t.shapes.push(e.uuid);return t}(this.parameters.shapes,e)}}class nu extends Xa{constructor(e=1,t=8,n=6,r=0,a=2*Math.PI,i=0,s=Math.PI){super(),this.type="SphereBufferGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:r,phiLength:a,thetaStart:i,thetaLength:s},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const o=Math.min(i+s,Math.PI);let c=0;const l=[],u=new Zn,h=new Zn,d=[],p=[],f=[],m=[];for(let d=0;d<=n;d++){const g=[],y=d/n;let x=0;0==d&&0==i?x=.5/t:d==n&&o==Math.PI&&(x=-.5/t);for(let n=0;n<=t;n++){const o=n/t;u.x=-e*Math.cos(r+o*a)*Math.sin(i+y*s),u.y=e*Math.cos(i+y*s),u.z=e*Math.sin(r+o*a)*Math.sin(i+y*s),p.push(u.x,u.y,u.z),h.copy(u).normalize(),f.push(h.x,h.y,h.z),m.push(o+x,1-y),g.push(c++)}l.push(g)}for(let e=0;e<n;e++)for(let r=0;r<t;r++){const t=l[e][r+1],a=l[e][r],s=l[e+1][r],c=l[e+1][r+1];(0!==e||i>0)&&d.push(t,a,c),(e!==n-1||o<Math.PI)&&d.push(a,s,c)}this.setIndex(d),this.setAttribute("position",new La(p,3)),this.setAttribute("normal",new La(f,3)),this.setAttribute("uv",new La(m,2))}}class ru extends Kc{constructor(e,t,n,r,a,i,s){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:r,phiLength:a,thetaStart:i,thetaLength:s},this.fromBufferGeometry(new nu(e,t,n,r,a,i,s)),this.mergeVertices()}}class au extends al{constructor(e=1,t=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronBufferGeometry",this.parameters={radius:e,detail:t}}}class iu extends Kc{constructor(e,t){super(),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new au(e,t)),this.mergeVertices()}}class su extends $l{constructor(e,t={}){const n=t.font;if(!n||!n.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new Xa;const r=n.generateShapes(e,t.size);t.depth=void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),super(r,t),this.type="TextBufferGeometry"}}class ou extends Kc{constructor(e,t){super(),this.type="TextGeometry",this.parameters={text:e,parameters:t},this.fromBufferGeometry(new su(e,t)),this.mergeVertices()}}class cu extends Xa{constructor(e=1,t=.4,n=8,r=6,a=2*Math.PI){super(),this.type="TorusBufferGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:r,arc:a},n=Math.floor(n),r=Math.floor(r);const i=[],s=[],o=[],c=[],l=new Zn,u=new Zn,h=new Zn;for(let i=0;i<=n;i++)for(let d=0;d<=r;d++){const p=d/r*a,f=i/n*Math.PI*2;u.x=(e+t*Math.cos(f))*Math.cos(p),u.y=(e+t*Math.cos(f))*Math.sin(p),u.z=t*Math.sin(f),s.push(u.x,u.y,u.z),l.x=e*Math.cos(p),l.y=e*Math.sin(p),h.subVectors(u,l).normalize(),o.push(h.x,h.y,h.z),c.push(d/r),c.push(i/n)}for(let e=1;e<=n;e++)for(let t=1;t<=r;t++){const n=(r+1)*e+t-1,a=(r+1)*(e-1)+t-1,s=(r+1)*(e-1)+t,o=(r+1)*e+t;i.push(n,a,o),i.push(a,s,o)}this.setIndex(i),this.setAttribute("position",new La(s,3)),this.setAttribute("normal",new La(o,3)),this.setAttribute("uv",new La(c,2))}}class lu extends Kc{constructor(e,t,n,r,a){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:r,arc:a},this.fromBufferGeometry(new cu(e,t,n,r,a)),this.mergeVertices()}}class uu extends Xa{constructor(e=1,t=.4,n=64,r=8,a=2,i=3){super(),this.type="TorusKnotBufferGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:r,p:a,q:i},n=Math.floor(n),r=Math.floor(r);const s=[],o=[],c=[],l=[],u=new Zn,h=new Zn,d=new Zn,p=new Zn,f=new Zn,m=new Zn,g=new Zn;for(let s=0;s<=n;++s){const x=s/n*a*Math.PI*2;y(x,a,i,e,d),y(x+.01,a,i,e,p),m.subVectors(p,d),g.addVectors(p,d),f.crossVectors(m,g),g.crossVectors(f,m),f.normalize(),g.normalize();for(let e=0;e<=r;++e){const a=e/r*Math.PI*2,i=-t*Math.cos(a),p=t*Math.sin(a);u.x=d.x+(i*g.x+p*f.x),u.y=d.y+(i*g.y+p*f.y),u.z=d.z+(i*g.z+p*f.z),o.push(u.x,u.y,u.z),h.subVectors(u,d).normalize(),c.push(h.x,h.y,h.z),l.push(s/n),l.push(e/r)}}for(let e=1;e<=n;e++)for(let t=1;t<=r;t++){const n=(r+1)*(e-1)+(t-1),a=(r+1)*e+(t-1),i=(r+1)*e+t,o=(r+1)*(e-1)+t;s.push(n,a,o),s.push(a,i,o)}function y(e,t,n,r,a){const i=Math.cos(e),s=Math.sin(e),o=n/t*e,c=Math.cos(o);a.x=r*(2+c)*.5*i,a.y=r*(2+c)*s*.5,a.z=r*Math.sin(o)*.5}this.setIndex(s),this.setAttribute("position",new La(o,3)),this.setAttribute("normal",new La(c,3)),this.setAttribute("uv",new La(l,2))}}class hu extends Kc{constructor(e,t,n,r,a,i,s){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:r,p:a,q:i},void 0!==s&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),this.fromBufferGeometry(new uu(e,t,n,r,a,i)),this.mergeVertices()}}class du extends Xa{constructor(e,t=64,n=1,r=8,a=!1){super(),this.type="TubeBufferGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:r,closed:a};const i=e.computeFrenetFrames(t,a);this.tangents=i.tangents,this.normals=i.normals,this.binormals=i.binormals;const s=new Zn,o=new Zn,c=new Un;let l=new Zn;const u=[],h=[],d=[],p=[];function f(a){l=e.getPointAt(a/t,l);const c=i.normals[a],d=i.binormals[a];for(let e=0;e<=r;e++){const t=e/r*Math.PI*2,a=Math.sin(t),i=-Math.cos(t);o.x=i*c.x+a*d.x,o.y=i*c.y+a*d.y,o.z=i*c.z+a*d.z,o.normalize(),h.push(o.x,o.y,o.z),s.x=l.x+n*o.x,s.y=l.y+n*o.y,s.z=l.z+n*o.z,u.push(s.x,s.y,s.z)}}!function(){for(let e=0;e<t;e++)f(e);f(!1===a?t:0),function(){for(let e=0;e<=t;e++)for(let n=0;n<=r;n++)c.x=e/t,c.y=n/r,d.push(c.x,c.y)}(),function(){for(let e=1;e<=t;e++)for(let t=1;t<=r;t++){const n=(r+1)*(e-1)+(t-1),a=(r+1)*e+(t-1),i=(r+1)*e+t,s=(r+1)*(e-1)+t;p.push(n,a,s),p.push(a,i,s)}}()}(),this.setIndex(p),this.setAttribute("position",new La(u,3)),this.setAttribute("normal",new La(h,3)),this.setAttribute("uv",new La(d,2))}toJSON(){const e=Xa.prototype.toJSON.call(this);return e.path=this.parameters.path.toJSON(),e}}class pu extends Kc{constructor(e,t,n,r,a,i){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:r,closed:a},void 0!==i&&console.warn("THREE.TubeGeometry: taper has been removed.");const s=new du(e,t,n,r,a);this.tangents=s.tangents,this.normals=s.normals,this.binormals=s.binormals,this.fromBufferGeometry(s),this.mergeVertices()}}class fu extends Xa{constructor(e){super(),this.type="WireframeGeometry";const t=[],n=[0,0],r={},a=["a","b","c"];if(e&&e.isGeometry){const i=e.faces;for(let e=0,t=i.length;e<t;e++){const t=i[e];for(let e=0;e<3;e++){const i=t[a[e]],s=t[a[(e+1)%3]];n[0]=Math.min(i,s),n[1]=Math.max(i,s);const o=n[0]+","+n[1];void 0===r[o]&&(r[o]={index1:n[0],index2:n[1]})}}for(const n in r){const a=r[n];let i=e.vertices[a.index1];t.push(i.x,i.y,i.z),i=e.vertices[a.index2],t.push(i.x,i.y,i.z)}}else if(e&&e.isBufferGeometry){const a=new Zn;if(null!==e.index){const i=e.attributes.position,s=e.index;let o=e.groups;0===o.length&&(o=[{start:0,count:s.count,materialIndex:0}]);for(let e=0,t=o.length;e<t;++e){const t=o[e],a=t.start;for(let e=a,i=a+t.count;e<i;e+=3)for(let t=0;t<3;t++){const a=s.getX(e+t),i=s.getX(e+(t+1)%3);n[0]=Math.min(a,i),n[1]=Math.max(a,i);const o=n[0]+","+n[1];void 0===r[o]&&(r[o]={index1:n[0],index2:n[1]})}}for(const e in r){const n=r[e];a.fromBufferAttribute(i,n.index1),t.push(a.x,a.y,a.z),a.fromBufferAttribute(i,n.index2),t.push(a.x,a.y,a.z)}}else{const n=e.attributes.position;for(let e=0,r=n.count/3;e<r;e++)for(let r=0;r<3;r++){const i=3*e+r;a.fromBufferAttribute(n,i),t.push(a.x,a.y,a.z);const s=3*e+(r+1)%3;a.fromBufferAttribute(n,s),t.push(a.x,a.y,a.z)}}}this.setAttribute("position",new La(t,3))}}var mu=Object.freeze({__proto__:null,BoxGeometry:Zc,BoxBufferGeometry:fi,CircleGeometry:Qc,CircleBufferGeometry:Jc,ConeGeometry:nl,ConeBufferGeometry:rl,CylinderGeometry:tl,CylinderBufferGeometry:el,DodecahedronGeometry:sl,DodecahedronBufferGeometry:il,EdgesGeometry:hl,ExtrudeGeometry:zl,ExtrudeBufferGeometry:$l,IcosahedronGeometry:Hl,IcosahedronBufferGeometry:Gl,LatheGeometry:Vl,LatheBufferGeometry:Wl,OctahedronGeometry:Xl,OctahedronBufferGeometry:jl,ParametricGeometry:Yl,ParametricBufferGeometry:ql,PlaneGeometry:Kl,PlaneBufferGeometry:ki,PolyhedronGeometry:Zl,PolyhedronBufferGeometry:al,RingGeometry:Ql,RingBufferGeometry:Jl,ShapeGeometry:tu,ShapeBufferGeometry:eu,SphereGeometry:ru,SphereBufferGeometry:nu,TetrahedronGeometry:iu,TetrahedronBufferGeometry:au,TextGeometry:ou,TextBufferGeometry:su,TorusGeometry:lu,TorusBufferGeometry:cu,TorusKnotGeometry:hu,TorusKnotBufferGeometry:uu,TubeGeometry:pu,TubeBufferGeometry:du,WireframeGeometry:fu});function gu(e){wa.call(this),this.type="ShadowMaterial",this.color=new xa(0),this.transparent=!0,this.setValues(e)}function yu(e){xi.call(this,e),this.type="RawShaderMaterial"}function xu(e){wa.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new xa(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new xa(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=on,this.normalScale=new Un(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.vertexTangents=!1,this.setValues(e)}function vu(e){xu.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Un(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(e){this.reflectivity=$n.clamp(2.5*(e-1)/(e+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.setValues(e)}function bu(e){wa.call(this),this.type="MeshPhongMaterial",this.color=new xa(16777215),this.specular=new xa(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new xa(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=on,this.normalScale=new Un(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Y,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function wu(e){wa.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new xa(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new xa(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=on,this.normalScale=new Un(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function _u(e){wa.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=on,this.normalScale=new Un(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function Tu(e){wa.call(this),this.type="MeshLambertMaterial",this.color=new xa(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new xa(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Y,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function Su(e){wa.call(this),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new xa(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=on,this.normalScale=new Un(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function Eu(e){Sc.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}gu.prototype=Object.create(wa.prototype),gu.prototype.constructor=gu,gu.prototype.isShadowMaterial=!0,gu.prototype.copy=function(e){return wa.prototype.copy.call(this,e),this.color.copy(e.color),this},yu.prototype=Object.create(xi.prototype),yu.prototype.constructor=yu,yu.prototype.isRawShaderMaterial=!0,xu.prototype=Object.create(wa.prototype),xu.prototype.constructor=xu,xu.prototype.isMeshStandardMaterial=!0,xu.prototype.copy=function(e){return wa.prototype.copy.call(this,e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.vertexTangents=e.vertexTangents,this},vu.prototype=Object.create(xu.prototype),vu.prototype.constructor=vu,vu.prototype.isMeshPhysicalMaterial=!0,vu.prototype.copy=function(e){return xu.prototype.copy.call(this,e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.reflectivity=e.reflectivity,e.sheen?this.sheen=(this.sheen||new xa).copy(e.sheen):this.sheen=null,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this},bu.prototype=Object.create(wa.prototype),bu.prototype.constructor=bu,bu.prototype.isMeshPhongMaterial=!0,bu.prototype.copy=function(e){return wa.prototype.copy.call(this,e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},wu.prototype=Object.create(wa.prototype),wu.prototype.constructor=wu,wu.prototype.isMeshToonMaterial=!0,wu.prototype.copy=function(e){return wa.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},_u.prototype=Object.create(wa.prototype),_u.prototype.constructor=_u,_u.prototype.isMeshNormalMaterial=!0,_u.prototype.copy=function(e){return wa.prototype.copy.call(this,e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},Tu.prototype=Object.create(wa.prototype),Tu.prototype.constructor=Tu,Tu.prototype.isMeshLambertMaterial=!0,Tu.prototype.copy=function(e){return wa.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},Su.prototype=Object.create(wa.prototype),Su.prototype.constructor=Su,Su.prototype.isMeshMatcapMaterial=!0,Su.prototype.copy=function(e){return wa.prototype.copy.call(this,e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},Eu.prototype=Object.create(Sc.prototype),Eu.prototype.constructor=Eu,Eu.prototype.isLineDashedMaterial=!0,Eu.prototype.copy=function(e){return Sc.prototype.copy.call(this,e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this};var Mu=Object.freeze({__proto__:null,ShadowMaterial:gu,SpriteMaterial:Wo,RawShaderMaterial:yu,ShaderMaterial:xi,PointsMaterial:Oc,MeshPhysicalMaterial:vu,MeshStandardMaterial:xu,MeshPhongMaterial:bu,MeshToonMaterial:wu,MeshNormalMaterial:_u,MeshLambertMaterial:Tu,MeshDepthMaterial:Eo,MeshDistanceMaterial:Mo,MeshBasicMaterial:_a,MeshMatcapMaterial:Su,LineDashedMaterial:Eu,LineBasicMaterial:Sc,Material:wa});const Iu={arraySlice:function(e,t,n){return Iu.isTypedArray(e)?new e.constructor(e.subarray(t,void 0!==n?n:e.length)):e.slice(t,n)},convertArray:function(e,t,n){return!e||!n&&e.constructor===t?e:"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e)},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(e){const t=e.length,n=new Array(t);for(let e=0;e!==t;++e)n[e]=e;return n.sort((function(t,n){return e[t]-e[n]})),n},sortedArray:function(e,t,n){const r=e.length,a=new e.constructor(r);for(let i=0,s=0;s!==r;++i){const r=n[i]*t;for(let n=0;n!==t;++n)a[s++]=e[r+n]}return a},flattenJSON:function(e,t,n,r){let a=1,i=e[0];for(;void 0!==i&&void 0===i[r];)i=e[a++];if(void 0===i)return;let s=i[r];if(void 0!==s)if(Array.isArray(s))do{s=i[r],void 0!==s&&(t.push(i.time),n.push.apply(n,s)),i=e[a++]}while(void 0!==i);else if(void 0!==s.toArray)do{s=i[r],void 0!==s&&(t.push(i.time),s.toArray(n,n.length)),i=e[a++]}while(void 0!==i);else do{s=i[r],void 0!==s&&(t.push(i.time),n.push(s)),i=e[a++]}while(void 0!==i)},subclip:function(e,t,n,r,a=30){const i=e.clone();i.name=t;const s=[];for(let e=0;e<i.tracks.length;++e){const t=i.tracks[e],o=t.getValueSize(),c=[],l=[];for(let e=0;e<t.times.length;++e){const i=t.times[e]*a;if(!(i<n||i>=r)){c.push(t.times[e]);for(let n=0;n<o;++n)l.push(t.values[e*o+n])}}0!==c.length&&(t.times=Iu.convertArray(c,t.times.constructor),t.values=Iu.convertArray(l,t.values.constructor),s.push(t))}i.tracks=s;let o=1/0;for(let e=0;e<i.tracks.length;++e)o>i.tracks[e].times[0]&&(o=i.tracks[e].times[0]);for(let e=0;e<i.tracks.length;++e)i.tracks[e].shift(-1*o);return i.resetDuration(),i},makeClipAdditive:function(e,t=0,n=e,r=30){r<=0&&(r=30);const a=n.tracks.length,i=t/r;for(let t=0;t<a;++t){const r=n.tracks[t],a=r.ValueTypeName;if("bool"===a||"string"===a)continue;const s=e.tracks.find((function(e){return e.name===r.name&&e.ValueTypeName===a}));if(void 0===s)continue;let o=0;const c=r.getValueSize();r.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(o=c/3);let l=0;const u=s.getValueSize();s.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(l=u/3);const h=r.times.length-1;let d;if(i<=r.times[0]){const e=o,t=c-o;d=Iu.arraySlice(r.values,e,t)}else if(i>=r.times[h]){const e=h*c+o,t=e+c-o;d=Iu.arraySlice(r.values,e,t)}else{const e=r.createInterpolant(),t=o,n=c-o;e.evaluate(i),d=Iu.arraySlice(e.resultBuffer,t,n)}"quaternion"===a&&(new Kn).fromArray(d).normalize().conjugate().toArray(d);const p=s.times.length;for(let e=0;e<p;++e){const t=e*u+l;if("quaternion"===a)Kn.multiplyQuaternionsFlat(s.values,t,d,0,s.values,t);else{const e=u-2*l;for(let n=0;n<e;++n)s.values[t+n]-=d[n]}}}return e.blendMode=jt,e}};function Nu(e,t,n,r){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==r?r:new t.constructor(n),this.sampleValues=t,this.valueSize=n}function Cu(e,t,n,r){Nu.call(this,e,t,n,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}function Au(e,t,n,r){Nu.call(this,e,t,n,r)}function ku(e,t,n,r){Nu.call(this,e,t,n,r)}function Ru(e,t,n,r){if(void 0===e)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Iu.convertArray(t,this.TimeBufferType),this.values=Iu.convertArray(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}function Du(e,t,n){Ru.call(this,e,t,n)}function Lu(e,t,n,r){Ru.call(this,e,t,n,r)}function Ou(e,t,n,r){Ru.call(this,e,t,n,r)}function Pu(e,t,n,r){Nu.call(this,e,t,n,r)}function Fu(e,t,n,r){Ru.call(this,e,t,n,r)}function Bu(e,t,n,r){Ru.call(this,e,t,n,r)}function $u(e,t,n,r){Ru.call(this,e,t,n,r)}function Uu(e,t=-1,n,r=Vt){this.name=e,this.tracks=n,this.duration=t,this.blendMode=r,this.uuid=$n.generateUUID(),this.duration<0&&this.resetDuration()}function zu(e){if(void 0===e.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=function(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Ou;case"vector":case"vector2":case"vector3":case"vector4":return $u;case"color":return Lu;case"quaternion":return Fu;case"bool":case"boolean":return Du;case"string":return Bu}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}(e.type);if(void 0===e.times){const t=[],n=[];Iu.flattenJSON(e.keys,t,n,"value"),e.times=t,e.values=n}return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)}Object.assign(Nu.prototype,{evaluate:function(e){const t=this.parameterPositions;let n=this._cachedIndex,r=t[n],a=t[n-1];e:{t:{let i;n:{r:if(!(e<r)){for(let i=n+2;;){if(void 0===r){if(e<a)break r;return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,e,a)}if(n===i)break;if(a=r,r=t[++n],e<r)break t}i=t.length;break n}if(e>=a)break e;{const s=t[1];e<s&&(n=2,a=s);for(let i=n-2;;){if(void 0===a)return this._cachedIndex=0,this.beforeStart_(0,e,r);if(n===i)break;if(r=a,a=t[--n-1],e>=a)break t}i=n,n=0}}for(;n<i;){const r=n+i>>>1;e<t[r]?i=r:n=r+1}if(r=t[n],a=t[n-1],void 0===a)return this._cachedIndex=0,this.beforeStart_(0,e,r);if(void 0===r)return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,a,e)}this._cachedIndex=n,this.intervalChanged_(n,a,r)}return this.interpolate_(n,a,e,r)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(e){const t=this.resultBuffer,n=this.sampleValues,r=this.valueSize,a=e*r;for(let e=0;e!==r;++e)t[e]=n[a+e];return t},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}}),Object.assign(Nu.prototype,{beforeStart_:Nu.prototype.copySampleValue_,afterEnd_:Nu.prototype.copySampleValue_}),Cu.prototype=Object.assign(Object.create(Nu.prototype),{constructor:Cu,DefaultSettings_:{endingStart:Gt,endingEnd:Gt},intervalChanged_:function(e,t,n){const r=this.parameterPositions;let a=e-2,i=e+1,s=r[a],o=r[i];if(void 0===s)switch(this.getSettings_().endingStart){case Ht:a=e,s=2*t-n;break;case Wt:a=r.length-2,s=t+r[a]-r[a+1];break;default:a=e,s=n}if(void 0===o)switch(this.getSettings_().endingEnd){case Ht:i=e,o=2*n-t;break;case Wt:i=1,o=n+r[1]-r[0];break;default:i=e-1,o=t}const c=.5*(n-t),l=this.valueSize;this._weightPrev=c/(t-s),this._weightNext=c/(o-n),this._offsetPrev=a*l,this._offsetNext=i*l},interpolate_:function(e,t,n,r){const a=this.resultBuffer,i=this.sampleValues,s=this.valueSize,o=e*s,c=o-s,l=this._offsetPrev,u=this._offsetNext,h=this._weightPrev,d=this._weightNext,p=(n-t)/(r-t),f=p*p,m=f*p,g=-h*m+2*h*f-h*p,y=(1+h)*m+(-1.5-2*h)*f+(-.5+h)*p+1,x=(-1-d)*m+(1.5+d)*f+.5*p,v=d*m-d*f;for(let e=0;e!==s;++e)a[e]=g*i[l+e]+y*i[c+e]+x*i[o+e]+v*i[u+e];return a}}),Au.prototype=Object.assign(Object.create(Nu.prototype),{constructor:Au,interpolate_:function(e,t,n,r){const a=this.resultBuffer,i=this.sampleValues,s=this.valueSize,o=e*s,c=o-s,l=(n-t)/(r-t),u=1-l;for(let e=0;e!==s;++e)a[e]=i[c+e]*u+i[o+e]*l;return a}}),ku.prototype=Object.assign(Object.create(Nu.prototype),{constructor:ku,interpolate_:function(e){return this.copySampleValue_(e-1)}}),Object.assign(Ru,{toJSON:function(e){const t=e.constructor;let n;if(void 0!==t.toJSON)n=t.toJSON(e);else{n={name:e.name,times:Iu.convertArray(e.times,Array),values:Iu.convertArray(e.values,Array)};const t=e.getInterpolation();t!==e.DefaultInterpolation&&(n.interpolation=t)}return n.type=e.ValueTypeName,n}}),Object.assign(Ru.prototype,{constructor:Ru,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:Ut,InterpolantFactoryMethodDiscrete:function(e){return new ku(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodLinear:function(e){return new Au(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:function(e){return new Cu(this.times,this.values,this.getValueSize(),e)},setInterpolation:function(e){let t;switch(e){case $t:t=this.InterpolantFactoryMethodDiscrete;break;case Ut:t=this.InterpolantFactoryMethodLinear;break;case zt:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){const t="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(t);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",t),this}return this.createInterpolant=t,this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return $t;case this.InterpolantFactoryMethodLinear:return Ut;case this.InterpolantFactoryMethodSmooth:return zt}},getValueSize:function(){return this.values.length/this.times.length},shift:function(e){if(0!==e){const t=this.times;for(let n=0,r=t.length;n!==r;++n)t[n]+=e}return this},scale:function(e){if(1!==e){const t=this.times;for(let n=0,r=t.length;n!==r;++n)t[n]*=e}return this},trim:function(e,t){const n=this.times,r=n.length;let a=0,i=r-1;for(;a!==r&&n[a]<e;)++a;for(;-1!==i&&n[i]>t;)--i;if(++i,0!==a||i!==r){a>=i&&(i=Math.max(i,1),a=i-1);const e=this.getValueSize();this.times=Iu.arraySlice(n,a,i),this.values=Iu.arraySlice(this.values,a*e,i*e)}return this},validate:function(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,r=this.values,a=n.length;0===a&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let i=null;for(let t=0;t!==a;t++){const r=n[t];if("number"==typeof r&&isNaN(r)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,t,r),e=!1;break}if(null!==i&&i>r){console.error("THREE.KeyframeTrack: Out of order keys.",this,t,r,i),e=!1;break}i=r}if(void 0!==r&&Iu.isTypedArray(r))for(let t=0,n=r.length;t!==n;++t){const n=r[t];if(isNaN(n)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,t,n),e=!1;break}}return e},optimize:function(){const e=Iu.arraySlice(this.times),t=Iu.arraySlice(this.values),n=this.getValueSize(),r=this.getInterpolation()===zt,a=e.length-1;let i=1;for(let s=1;s<a;++s){let a=!1;const o=e[s];if(o!==e[s+1]&&(1!==s||o!==o[0]))if(r)a=!0;else{const e=s*n,r=e-n,i=e+n;for(let s=0;s!==n;++s){const n=t[e+s];if(n!==t[r+s]||n!==t[i+s]){a=!0;break}}}if(a){if(s!==i){e[i]=e[s];const r=s*n,a=i*n;for(let e=0;e!==n;++e)t[a+e]=t[r+e]}++i}}if(a>0){e[i]=e[a];for(let e=a*n,r=i*n,s=0;s!==n;++s)t[r+s]=t[e+s];++i}return i!==e.length?(this.times=Iu.arraySlice(e,0,i),this.values=Iu.arraySlice(t,0,i*n)):(this.times=e,this.values=t),this},clone:function(){const e=Iu.arraySlice(this.times,0),t=Iu.arraySlice(this.values,0),n=new(0,this.constructor)(this.name,e,t);return n.createInterpolant=this.createInterpolant,n}}),Du.prototype=Object.assign(Object.create(Ru.prototype),{constructor:Du,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:$t,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),Lu.prototype=Object.assign(Object.create(Ru.prototype),{constructor:Lu,ValueTypeName:"color"}),Ou.prototype=Object.assign(Object.create(Ru.prototype),{constructor:Ou,ValueTypeName:"number"}),Pu.prototype=Object.assign(Object.create(Nu.prototype),{constructor:Pu,interpolate_:function(e,t,n,r){const a=this.resultBuffer,i=this.sampleValues,s=this.valueSize,o=(n-t)/(r-t);let c=e*s;for(let e=c+s;c!==e;c+=4)Kn.slerpFlat(a,0,i,c-s,i,c,o);return a}}),Fu.prototype=Object.assign(Object.create(Ru.prototype),{constructor:Fu,ValueTypeName:"quaternion",DefaultInterpolation:Ut,InterpolantFactoryMethodLinear:function(e){return new Pu(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:void 0}),Bu.prototype=Object.assign(Object.create(Ru.prototype),{constructor:Bu,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:$t,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),$u.prototype=Object.assign(Object.create(Ru.prototype),{constructor:$u,ValueTypeName:"vector"}),Object.assign(Uu,{parse:function(e){const t=[],n=e.tracks,r=1/(e.fps||1);for(let e=0,a=n.length;e!==a;++e)t.push(zu(n[e]).scale(r));const a=new Uu(e.name,e.duration,t,e.blendMode);return a.uuid=e.uuid,a},toJSON:function(e){const t=[],n=e.tracks,r={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let e=0,r=n.length;e!==r;++e)t.push(Ru.toJSON(n[e]));return r},CreateFromMorphTargetSequence:function(e,t,n,r){const a=t.length,i=[];for(let e=0;e<a;e++){let s=[],o=[];s.push((e+a-1)%a,e,(e+1)%a),o.push(0,1,0);const c=Iu.getKeyframeOrder(s);s=Iu.sortedArray(s,1,c),o=Iu.sortedArray(o,1,c),r||0!==s[0]||(s.push(a),o.push(o[0])),i.push(new Ou(".morphTargetInfluences["+t[e].name+"]",s,o).scale(1/n))}return new Uu(e,-1,i)},findByName:function(e,t){let n=e;if(!Array.isArray(e)){const t=e;n=t.geometry&&t.geometry.animations||t.animations}for(let e=0;e<n.length;e++)if(n[e].name===t)return n[e];return null},CreateClipsFromMorphTargetSequences:function(e,t,n){const r={},a=/^([\w-]*?)([\d]+)$/;for(let t=0,n=e.length;t<n;t++){const n=e[t],i=n.name.match(a);if(i&&i.length>1){const e=i[1];let t=r[e];t||(r[e]=t=[]),t.push(n)}}const i=[];for(const e in r)i.push(Uu.CreateFromMorphTargetSequence(e,r[e],t,n));return i},parseAnimation:function(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(e,t,n,r,a){if(0!==n.length){const i=[],s=[];Iu.flattenJSON(n,i,s,r),0!==i.length&&a.push(new e(t,i,s))}},r=[],a=e.name||"default",i=e.fps||30,s=e.blendMode;let o=e.length||-1;const c=e.hierarchy||[];for(let e=0;e<c.length;e++){const a=c[e].keys;if(a&&0!==a.length)if(a[0].morphTargets){const e={};let t;for(t=0;t<a.length;t++)if(a[t].morphTargets)for(let n=0;n<a[t].morphTargets.length;n++)e[a[t].morphTargets[n]]=-1;for(const n in e){const e=[],i=[];for(let r=0;r!==a[t].morphTargets.length;++r){const r=a[t];e.push(r.time),i.push(r.morphTarget===n?1:0)}r.push(new Ou(".morphTargetInfluence["+n+"]",e,i))}o=e.length*(i||1)}else{const i=".bones["+t[e].name+"]";n($u,i+".position",a,"pos",r),n(Fu,i+".quaternion",a,"rot",r),n($u,i+".scale",a,"scl",r)}}return 0===r.length?null:new Uu(a,o,r,s)}}),Object.assign(Uu.prototype,{resetDuration:function(){let e=0;for(let t=0,n=this.tracks.length;t!==n;++t){const n=this.tracks[t];e=Math.max(e,n.times[n.times.length-1])}return this.duration=e,this},trim:function(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this},validate:function(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e},optimize:function(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this},clone:function(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new Uu(this.name,this.duration,e,this.blendMode)},toJSON:function(){return Uu.toJSON(this)}});const Gu={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};function Hu(e,t,n){const r=this;let a,i=!1,s=0,o=0;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(e){o++,!1===i&&void 0!==r.onStart&&r.onStart(e,s,o),i=!0},this.itemEnd=function(e){s++,void 0!==r.onProgress&&r.onProgress(e,s,o),s===o&&(i=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(e){void 0!==r.onError&&r.onError(e)},this.resolveURL=function(e){return a?a(e):e},this.setURLModifier=function(e){return a=e,this},this.addHandler=function(e,t){return c.push(e,t),this},this.removeHandler=function(e){const t=c.indexOf(e);return-1!==t&&c.splice(t,2),this},this.getHandler=function(e){for(let t=0,n=c.length;t<n;t+=2){const n=c[t],r=c[t+1];if(n.global&&(n.lastIndex=0),n.test(e))return r}return null}}const Wu=new Hu;function Vu(e){this.manager=void 0!==e?e:Wu,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}Object.assign(Vu.prototype,{load:function(){},loadAsync:function(e,t){const n=this;return new Promise((function(r,a){n.load(e,r,t,a)}))},parse:function(){},setCrossOrigin:function(e){return this.crossOrigin=e,this},setWithCredentials:function(e){return this.withCredentials=e,this},setPath:function(e){return this.path=e,this},setResourcePath:function(e){return this.resourcePath=e,this},setRequestHeader:function(e){return this.requestHeader=e,this}});const ju={};function Xu(e){Vu.call(this,e)}function qu(e){Vu.call(this,e)}function Yu(e){Vu.call(this,e)}function Ku(e){Vu.call(this,e)}function Zu(e){Vu.call(this,e)}function Ju(e){Vu.call(this,e)}function Qu(e){Vu.call(this,e)}function eh(){this.type="Curve",this.arcLengthDivisions=200}function th(e,t,n,r,a,i,s,o){eh.call(this),this.type="EllipseCurve",this.aX=e||0,this.aY=t||0,this.xRadius=n||1,this.yRadius=r||1,this.aStartAngle=a||0,this.aEndAngle=i||2*Math.PI,this.aClockwise=s||!1,this.aRotation=o||0}function nh(e,t,n,r,a,i){th.call(this,e,t,n,n,r,a,i),this.type="ArcCurve"}function rh(){let e=0,t=0,n=0,r=0;function a(a,i,s,o){e=a,t=s,n=-3*a+3*i-2*s-o,r=2*a-2*i+s+o}return{initCatmullRom:function(e,t,n,r,i){a(t,n,i*(n-e),i*(r-t))},initNonuniformCatmullRom:function(e,t,n,r,i,s,o){let c=(t-e)/i-(n-e)/(i+s)+(n-t)/s,l=(n-t)/s-(r-t)/(s+o)+(r-n)/o;c*=s,l*=s,a(t,n,c,l)},calc:function(a){const i=a*a;return e+t*a+n*i+r*(i*a)}}}Xu.prototype=Object.assign(Object.create(Vu.prototype),{constructor:Xu,load:function(e,t,n,r){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const a=this,i=Gu.get(e);if(void 0!==i)return a.manager.itemStart(e),setTimeout((function(){t&&t(i),a.manager.itemEnd(e)}),0),i;if(void 0!==ju[e])return void ju[e].push({onLoad:t,onProgress:n,onError:r});const s=e.match(/^data:(.*?)(;base64)?,(.*)$/);let o;if(s){const n=s[1],i=!!s[2];let o=s[3];o=decodeURIComponent(o),i&&(o=atob(o));try{let r;const i=(this.responseType||"").toLowerCase();switch(i){case"arraybuffer":case"blob":const e=new Uint8Array(o.length);for(let t=0;t<o.length;t++)e[t]=o.charCodeAt(t);r="blob"===i?new Blob([e.buffer],{type:n}):e.buffer;break;case"document":const t=new DOMParser;r=t.parseFromString(o,n);break;case"json":r=JSON.parse(o);break;default:r=o}setTimeout((function(){t&&t(r),a.manager.itemEnd(e)}),0)}catch(t){setTimeout((function(){r&&r(t),a.manager.itemError(e),a.manager.itemEnd(e)}),0)}}else{ju[e]=[],ju[e].push({onLoad:t,onProgress:n,onError:r}),o=new XMLHttpRequest,o.open("GET",e,!0),o.addEventListener("load",(function(t){const n=this.response,r=ju[e];if(delete ju[e],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),Gu.add(e,n);for(let e=0,t=r.length;e<t;e++){const t=r[e];t.onLoad&&t.onLoad(n)}a.manager.itemEnd(e)}else{for(let e=0,n=r.length;e<n;e++){const n=r[e];n.onError&&n.onError(t)}a.manager.itemError(e),a.manager.itemEnd(e)}}),!1),o.addEventListener("progress",(function(t){const n=ju[e];for(let e=0,r=n.length;e<r;e++){const r=n[e];r.onProgress&&r.onProgress(t)}}),!1),o.addEventListener("error",(function(t){const n=ju[e];delete ju[e];for(let e=0,r=n.length;e<r;e++){const r=n[e];r.onError&&r.onError(t)}a.manager.itemError(e),a.manager.itemEnd(e)}),!1),o.addEventListener("abort",(function(t){const n=ju[e];delete ju[e];for(let e=0,r=n.length;e<r;e++){const r=n[e];r.onError&&r.onError(t)}a.manager.itemError(e),a.manager.itemEnd(e)}),!1),void 0!==this.responseType&&(o.responseType=this.responseType),void 0!==this.withCredentials&&(o.withCredentials=this.withCredentials),o.overrideMimeType&&o.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(const e in this.requestHeader)o.setRequestHeader(e,this.requestHeader[e]);o.send(null)}return a.manager.itemStart(e),o},setResponseType:function(e){return this.responseType=e,this},setMimeType:function(e){return this.mimeType=e,this}}),qu.prototype=Object.assign(Object.create(Vu.prototype),{constructor:qu,load:function(e,t,n,r){const a=this,i=new Xu(a.manager);i.setPath(a.path),i.setRequestHeader(a.requestHeader),i.setWithCredentials(a.withCredentials),i.load(e,(function(n){try{t(a.parse(JSON.parse(n)))}catch(t){r?r(t):console.error(t),a.manager.itemError(e)}}),n,r)},parse:function(e){const t=[];for(let n=0;n<e.length;n++){const r=Uu.parse(e[n]);t.push(r)}return t}}),Yu.prototype=Object.assign(Object.create(Vu.prototype),{constructor:Yu,load:function(e,t,n,r){const a=this,i=[],s=new Hc,o=new Xu(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(a.withCredentials);let c=0;function l(l){o.load(e[l],(function(e){const n=a.parse(e,!0);i[l]={width:n.width,height:n.height,format:n.format,mipmaps:n.mipmaps},c+=1,6===c&&(1===n.mipmapCount&&(s.minFilter=ve),s.image=i,s.format=n.format,s.needsUpdate=!0,t&&t(s))}),n,r)}if(Array.isArray(e))for(let t=0,n=e.length;t<n;++t)l(t);else o.load(e,(function(e){const n=a.parse(e,!0);if(n.isCubemap){const e=n.mipmaps.length/n.mipmapCount;for(let t=0;t<e;t++){i[t]={mipmaps:[]};for(let e=0;e<n.mipmapCount;e++)i[t].mipmaps.push(n.mipmaps[t*n.mipmapCount+e]),i[t].format=n.format,i[t].width=n.width,i[t].height=n.height}s.image=i}else s.image.width=n.width,s.image.height=n.height,s.mipmaps=n.mipmaps;1===n.mipmapCount&&(s.minFilter=ve),s.format=n.format,s.needsUpdate=!0,t&&t(s)}),n,r);return s}}),Ku.prototype=Object.assign(Object.create(Vu.prototype),{constructor:Ku,load:function(e,t,n,r){void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const a=this,i=Gu.get(e);if(void 0!==i)return a.manager.itemStart(e),setTimeout((function(){t&&t(i),a.manager.itemEnd(e)}),0),i;const s=document.createElementNS("http://www.w3.org/1999/xhtml","img");function o(){s.removeEventListener("load",o,!1),s.removeEventListener("error",c,!1),Gu.add(e,this),t&&t(this),a.manager.itemEnd(e)}function c(t){s.removeEventListener("load",o,!1),s.removeEventListener("error",c,!1),r&&r(t),a.manager.itemError(e),a.manager.itemEnd(e)}return s.addEventListener("load",o,!1),s.addEventListener("error",c,!1),"data:"!==e.substr(0,5)&&void 0!==this.crossOrigin&&(s.crossOrigin=this.crossOrigin),a.manager.itemStart(e),s.src=e,s}}),Zu.prototype=Object.assign(Object.create(Vu.prototype),{constructor:Zu,load:function(e,t,n,r){const a=new Ti,i=new Ku(this.manager);i.setCrossOrigin(this.crossOrigin),i.setPath(this.path);let s=0;function o(n){i.load(e[n],(function(e){a.images[n]=e,s++,6===s&&(a.needsUpdate=!0,t&&t(a))}),void 0,r)}for(let t=0;t<e.length;++t)o(t);return a}}),Ju.prototype=Object.assign(Object.create(Vu.prototype),{constructor:Ju,load:function(e,t,n,r){const a=this,i=new Ei,s=new Xu(this.manager);return s.setResponseType("arraybuffer"),s.setRequestHeader(this.requestHeader),s.setPath(this.path),s.setWithCredentials(a.withCredentials),s.load(e,(function(e){const n=a.parse(e);n&&(void 0!==n.image?i.image=n.image:void 0!==n.data&&(i.image.width=n.width,i.image.height=n.height,i.image.data=n.data),i.wrapS=void 0!==n.wrapS?n.wrapS:de,i.wrapT=void 0!==n.wrapT?n.wrapT:de,i.magFilter=void 0!==n.magFilter?n.magFilter:ve,i.minFilter=void 0!==n.minFilter?n.minFilter:ve,i.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,void 0!==n.format&&(i.format=n.format),void 0!==n.type&&(i.type=n.type),void 0!==n.mipmaps&&(i.mipmaps=n.mipmaps,i.minFilter=_e),1===n.mipmapCount&&(i.minFilter=ve),i.needsUpdate=!0,t&&t(i,n))}),n,r),i}}),Qu.prototype=Object.assign(Object.create(Vu.prototype),{constructor:Qu,load:function(e,t,n,r){const a=new Vn,i=new Ku(this.manager);return i.setCrossOrigin(this.crossOrigin),i.setPath(this.path),i.load(e,(function(n){a.image=n;const r=e.search(/\.jpe?g($|\?)/i)>0||0===e.search(/^data\:image\/jpeg/);a.format=r?Fe:Be,a.needsUpdate=!0,void 0!==t&&t(a)}),n,r),a}}),Object.assign(eh.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)},getPoints:function(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t},getSpacedPoints:function(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t},getLength:function(){const e=this.getLengths();return e[e.length-1]},getLengths:function(e){if(void 0===e&&(e=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,r=this.getPoint(0),a=0;t.push(0);for(let i=1;i<=e;i++)n=this.getPoint(i/e),a+=n.distanceTo(r),t.push(a),r=n;return this.cacheArcLengths=t,t},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(e,t){const n=this.getLengths();let r=0;const a=n.length;let i;i=t||e*n[a-1];let s,o=0,c=a-1;for(;o<=c;)if(r=Math.floor(o+(c-o)/2),s=n[r]-i,s<0)o=r+1;else{if(!(s>0)){c=r;break}c=r-1}if(r=c,n[r]===i)return r/(a-1);const l=n[r];return(r+(i-l)/(n[r+1]-l))/(a-1)},getTangent:function(e,t){const n=1e-4;let r=e-n,a=e+n;r<0&&(r=0),a>1&&(a=1);const i=this.getPoint(r),s=this.getPoint(a),o=t||(i.isVector2?new Un:new Zn);return o.copy(s).sub(i).normalize(),o},getTangentAt:function(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)},computeFrenetFrames:function(e,t){const n=new Zn,r=[],a=[],i=[],s=new Zn,o=new Er;for(let t=0;t<=e;t++){const n=t/e;r[t]=this.getTangentAt(n,new Zn),r[t].normalize()}a[0]=new Zn,i[0]=new Zn;let c=Number.MAX_VALUE;const l=Math.abs(r[0].x),u=Math.abs(r[0].y),h=Math.abs(r[0].z);l<=c&&(c=l,n.set(1,0,0)),u<=c&&(c=u,n.set(0,1,0)),h<=c&&n.set(0,0,1),s.crossVectors(r[0],n).normalize(),a[0].crossVectors(r[0],s),i[0].crossVectors(r[0],a[0]);for(let t=1;t<=e;t++){if(a[t]=a[t-1].clone(),i[t]=i[t-1].clone(),s.crossVectors(r[t-1],r[t]),s.length()>Number.EPSILON){s.normalize();const e=Math.acos($n.clamp(r[t-1].dot(r[t]),-1,1));a[t].applyMatrix4(o.makeRotationAxis(s,e))}i[t].crossVectors(r[t],a[t])}if(!0===t){let t=Math.acos($n.clamp(a[0].dot(a[e]),-1,1));t/=e,r[0].dot(s.crossVectors(a[0],a[e]))>0&&(t=-t);for(let n=1;n<=e;n++)a[n].applyMatrix4(o.makeRotationAxis(r[n],t*n)),i[n].crossVectors(r[n],a[n])}return{tangents:r,normals:a,binormals:i}},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this},toJSON:function(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e},fromJSON:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}),th.prototype=Object.create(eh.prototype),th.prototype.constructor=th,th.prototype.isEllipseCurve=!0,th.prototype.getPoint=function(e,t){const n=t||new Un,r=2*Math.PI;let a=this.aEndAngle-this.aStartAngle;const i=Math.abs(a)<Number.EPSILON;for(;a<0;)a+=r;for(;a>r;)a-=r;a<Number.EPSILON&&(a=i?0:r),!0!==this.aClockwise||i||(a===r?a=-r:a-=r);const s=this.aStartAngle+e*a;let o=this.aX+this.xRadius*Math.cos(s),c=this.aY+this.yRadius*Math.sin(s);if(0!==this.aRotation){const e=Math.cos(this.aRotation),t=Math.sin(this.aRotation),n=o-this.aX,r=c-this.aY;o=n*e-r*t+this.aX,c=n*t+r*e+this.aY}return n.set(o,c)},th.prototype.copy=function(e){return eh.prototype.copy.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this},th.prototype.toJSON=function(){const e=eh.prototype.toJSON.call(this);return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e},th.prototype.fromJSON=function(e){return eh.prototype.fromJSON.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this},nh.prototype=Object.create(th.prototype),nh.prototype.constructor=nh,nh.prototype.isArcCurve=!0;const ah=new Zn,ih=new rh,sh=new rh,oh=new rh;function ch(e=[],t=!1,n="centripetal",r=.5){eh.call(this),this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=r}function lh(e,t,n,r,a){const i=.5*(r-t),s=.5*(a-n),o=e*e;return(2*n-2*r+i+s)*(e*o)+(-3*n+3*r-2*i-s)*o+i*e+n}function uh(e,t,n,r){return function(e,t){const n=1-e;return n*n*t}(e,t)+function(e,t){return 2*(1-e)*e*t}(e,n)+function(e,t){return e*e*t}(e,r)}function hh(e,t,n,r,a){return function(e,t){const n=1-e;return n*n*n*t}(e,t)+function(e,t){const n=1-e;return 3*n*n*e*t}(e,n)+function(e,t){return 3*(1-e)*e*e*t}(e,r)+function(e,t){return e*e*e*t}(e,a)}function dh(e=new Un,t=new Un,n=new Un,r=new Un){eh.call(this),this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=r}function ph(e=new Zn,t=new Zn,n=new Zn,r=new Zn){eh.call(this),this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=r}function fh(e=new Un,t=new Un){eh.call(this),this.type="LineCurve",this.v1=e,this.v2=t}function mh(e=new Zn,t=new Zn){eh.call(this),this.type="LineCurve3",this.v1=e,this.v2=t}function gh(e=new Un,t=new Un,n=new Un){eh.call(this),this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}function yh(e=new Zn,t=new Zn,n=new Zn){eh.call(this),this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}function xh(e=[]){eh.call(this),this.type="SplineCurve",this.points=e}ch.prototype=Object.create(eh.prototype),ch.prototype.constructor=ch,ch.prototype.isCatmullRomCurve3=!0,ch.prototype.getPoint=function(e,t=new Zn){const n=t,r=this.points,a=r.length,i=(a-(this.closed?0:1))*e;let s,o,c=Math.floor(i),l=i-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/a)+1)*a:0===l&&c===a-1&&(c=a-2,l=1),this.closed||c>0?s=r[(c-1)%a]:(ah.subVectors(r[0],r[1]).add(r[0]),s=ah);const u=r[c%a],h=r[(c+1)%a];if(this.closed||c+2<a?o=r[(c+2)%a]:(ah.subVectors(r[a-1],r[a-2]).add(r[a-1]),o=ah),"centripetal"===this.curveType||"chordal"===this.curveType){const e="chordal"===this.curveType?.5:.25;let t=Math.pow(s.distanceToSquared(u),e),n=Math.pow(u.distanceToSquared(h),e),r=Math.pow(h.distanceToSquared(o),e);n<1e-4&&(n=1),t<1e-4&&(t=n),r<1e-4&&(r=n),ih.initNonuniformCatmullRom(s.x,u.x,h.x,o.x,t,n,r),sh.initNonuniformCatmullRom(s.y,u.y,h.y,o.y,t,n,r),oh.initNonuniformCatmullRom(s.z,u.z,h.z,o.z,t,n,r)}else"catmullrom"===this.curveType&&(ih.initCatmullRom(s.x,u.x,h.x,o.x,this.tension),sh.initCatmullRom(s.y,u.y,h.y,o.y,this.tension),oh.initCatmullRom(s.z,u.z,h.z,o.z,this.tension));return n.set(ih.calc(l),sh.calc(l),oh.calc(l)),n},ch.prototype.copy=function(e){eh.prototype.copy.call(this,e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const n=e.points[t];this.points.push(n.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this},ch.prototype.toJSON=function(){const e=eh.prototype.toJSON.call(this);e.points=[];for(let t=0,n=this.points.length;t<n;t++){const n=this.points[t];e.points.push(n.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e},ch.prototype.fromJSON=function(e){eh.prototype.fromJSON.call(this,e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const n=e.points[t];this.points.push((new Zn).fromArray(n))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this},dh.prototype=Object.create(eh.prototype),dh.prototype.constructor=dh,dh.prototype.isCubicBezierCurve=!0,dh.prototype.getPoint=function(e,t=new Un){const n=t,r=this.v0,a=this.v1,i=this.v2,s=this.v3;return n.set(hh(e,r.x,a.x,i.x,s.x),hh(e,r.y,a.y,i.y,s.y)),n},dh.prototype.copy=function(e){return eh.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this},dh.prototype.toJSON=function(){const e=eh.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e},dh.prototype.fromJSON=function(e){return eh.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this},ph.prototype=Object.create(eh.prototype),ph.prototype.constructor=ph,ph.prototype.isCubicBezierCurve3=!0,ph.prototype.getPoint=function(e,t=new Zn){const n=t,r=this.v0,a=this.v1,i=this.v2,s=this.v3;return n.set(hh(e,r.x,a.x,i.x,s.x),hh(e,r.y,a.y,i.y,s.y),hh(e,r.z,a.z,i.z,s.z)),n},ph.prototype.copy=function(e){return eh.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this},ph.prototype.toJSON=function(){const e=eh.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e},ph.prototype.fromJSON=function(e){return eh.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this},fh.prototype=Object.create(eh.prototype),fh.prototype.constructor=fh,fh.prototype.isLineCurve=!0,fh.prototype.getPoint=function(e,t=new Un){const n=t;return 1===e?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n},fh.prototype.getPointAt=function(e,t){return this.getPoint(e,t)},fh.prototype.getTangent=function(e,t){const n=t||new Un;return n.copy(this.v2).sub(this.v1).normalize(),n},fh.prototype.copy=function(e){return eh.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this},fh.prototype.toJSON=function(){const e=eh.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},fh.prototype.fromJSON=function(e){return eh.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},mh.prototype=Object.create(eh.prototype),mh.prototype.constructor=mh,mh.prototype.isLineCurve3=!0,mh.prototype.getPoint=function(e,t=new Zn){const n=t;return 1===e?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n},mh.prototype.getPointAt=function(e,t){return this.getPoint(e,t)},mh.prototype.copy=function(e){return eh.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this},mh.prototype.toJSON=function(){const e=eh.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},mh.prototype.fromJSON=function(e){return eh.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},gh.prototype=Object.create(eh.prototype),gh.prototype.constructor=gh,gh.prototype.isQuadraticBezierCurve=!0,gh.prototype.getPoint=function(e,t=new Un){const n=t,r=this.v0,a=this.v1,i=this.v2;return n.set(uh(e,r.x,a.x,i.x),uh(e,r.y,a.y,i.y)),n},gh.prototype.copy=function(e){return eh.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this},gh.prototype.toJSON=function(){const e=eh.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},gh.prototype.fromJSON=function(e){return eh.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},yh.prototype=Object.create(eh.prototype),yh.prototype.constructor=yh,yh.prototype.isQuadraticBezierCurve3=!0,yh.prototype.getPoint=function(e,t=new Zn){const n=t,r=this.v0,a=this.v1,i=this.v2;return n.set(uh(e,r.x,a.x,i.x),uh(e,r.y,a.y,i.y),uh(e,r.z,a.z,i.z)),n},yh.prototype.copy=function(e){return eh.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this},yh.prototype.toJSON=function(){const e=eh.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},yh.prototype.fromJSON=function(e){return eh.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},xh.prototype=Object.create(eh.prototype),xh.prototype.constructor=xh,xh.prototype.isSplineCurve=!0,xh.prototype.getPoint=function(e,t=new Un){const n=t,r=this.points,a=(r.length-1)*e,i=Math.floor(a),s=a-i,o=r[0===i?i:i-1],c=r[i],l=r[i>r.length-2?r.length-1:i+1],u=r[i>r.length-3?r.length-1:i+2];return n.set(lh(s,o.x,c.x,l.x,u.x),lh(s,o.y,c.y,l.y,u.y)),n},xh.prototype.copy=function(e){eh.prototype.copy.call(this,e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const n=e.points[t];this.points.push(n.clone())}return this},xh.prototype.toJSON=function(){const e=eh.prototype.toJSON.call(this);e.points=[];for(let t=0,n=this.points.length;t<n;t++){const n=this.points[t];e.points.push(n.toArray())}return e},xh.prototype.fromJSON=function(e){eh.prototype.fromJSON.call(this,e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const n=e.points[t];this.points.push((new Un).fromArray(n))}return this};var vh=Object.freeze({__proto__:null,ArcCurve:nh,CatmullRomCurve3:ch,CubicBezierCurve:dh,CubicBezierCurve3:ph,EllipseCurve:th,LineCurve:fh,LineCurve3:mh,QuadraticBezierCurve:gh,QuadraticBezierCurve3:yh,SplineCurve:xh});function bh(){eh.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}function wh(e){bh.call(this),this.type="Path",this.currentPoint=new Un,e&&this.setFromPoints(e)}function _h(e){wh.call(this,e),this.uuid=$n.generateUUID(),this.type="Shape",this.holes=[]}function Th(e,t=1){Kr.call(this),this.type="Light",this.color=new xa(e),this.intensity=t}function Sh(e,t,n){Th.call(this,e,n),this.type="HemisphereLight",this.position.copy(Kr.DefaultUp),this.updateMatrix(),this.groundColor=new xa(t)}function Eh(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new Un(512,512),this.map=null,this.mapPass=null,this.matrix=new Er,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Ni,this._frameExtents=new Un(1,1),this._viewportCount=1,this._viewports=[new Xn(0,0,1,1)]}function Mh(){Eh.call(this,new bi(50,1,.5,500)),this.focus=1}function Ih(e,t,n,r,a,i){Th.call(this,e,t),this.type="SpotLight",this.position.copy(Kr.DefaultUp),this.updateMatrix(),this.target=new Kr,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(e){this.intensity=e/Math.PI}}),this.distance=void 0!==n?n:0,this.angle=void 0!==r?r:Math.PI/3,this.penumbra=void 0!==a?a:0,this.decay=void 0!==i?i:1,this.shadow=new Mh}function Nh(){Eh.call(this,new bi(90,1,.5,500)),this._frameExtents=new Un(4,2),this._viewportCount=6,this._viewports=[new Xn(2,1,1,1),new Xn(0,1,1,1),new Xn(3,1,1,1),new Xn(1,1,1,1),new Xn(3,0,1,1),new Xn(1,0,1,1)],this._cubeDirections=[new Zn(1,0,0),new Zn(-1,0,0),new Zn(0,0,1),new Zn(0,0,-1),new Zn(0,1,0),new Zn(0,-1,0)],this._cubeUps=[new Zn(0,1,0),new Zn(0,1,0),new Zn(0,1,0),new Zn(0,1,0),new Zn(0,0,1),new Zn(0,0,-1)]}function Ch(e,t,n,r){Th.call(this,e,t),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return 4*this.intensity*Math.PI},set:function(e){this.intensity=e/(4*Math.PI)}}),this.distance=void 0!==n?n:0,this.decay=void 0!==r?r:1,this.shadow=new Nh}function Ah(e=-1,t=1,n=1,r=-1,a=.1,i=2e3){vi.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=r,this.near=a,this.far=i,this.updateProjectionMatrix()}function kh(){Eh.call(this,new Ah(-5,5,5,-5,.5,500))}function Rh(e,t){Th.call(this,e,t),this.type="DirectionalLight",this.position.copy(Kr.DefaultUp),this.updateMatrix(),this.target=new Kr,this.shadow=new kh}function Dh(e,t){Th.call(this,e,t),this.type="AmbientLight"}function Lh(e,t,n,r){Th.call(this,e,t),this.type="RectAreaLight",this.width=void 0!==n?n:10,this.height=void 0!==r?r:10}bh.prototype=Object.assign(Object.create(eh.prototype),{constructor:bh,add:function(e){this.curves.push(e)},closePath:function(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new fh(t,e))},getPoint:function(e){const t=e*this.getLength(),n=this.getCurveLengths();let r=0;for(;r<n.length;){if(n[r]>=t){const e=n[r]-t,a=this.curves[r],i=a.getLength(),s=0===i?0:1-e/i;return a.getPointAt(s)}r++}return null},getLength:function(){const e=this.getCurveLengths();return e[e.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,r=this.curves.length;n<r;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e},getSpacedPoints:function(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t},getPoints:function(e=12){const t=[];let n;for(let r=0,a=this.curves;r<a.length;r++){const i=a[r],s=i&&i.isEllipseCurve?2*e:i&&(i.isLineCurve||i.isLineCurve3)?1:i&&i.isSplineCurve?e*i.points.length:e,o=i.getPoints(s);for(let e=0;e<o.length;e++){const r=o[e];n&&n.equals(r)||(t.push(r),n=r)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t},copy:function(e){eh.prototype.copy.call(this,e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const n=e.curves[t];this.curves.push(n.clone())}return this.autoClose=e.autoClose,this},toJSON:function(){const e=eh.prototype.toJSON.call(this);e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const n=this.curves[t];e.curves.push(n.toJSON())}return e},fromJSON:function(e){eh.prototype.fromJSON.call(this,e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const n=e.curves[t];this.curves.push((new vh[n.type]).fromJSON(n))}return this}}),wh.prototype=Object.assign(Object.create(bh.prototype),{constructor:wh,setFromPoints:function(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this},moveTo:function(e,t){return this.currentPoint.set(e,t),this},lineTo:function(e,t){const n=new fh(this.currentPoint.clone(),new Un(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this},quadraticCurveTo:function(e,t,n,r){const a=new gh(this.currentPoint.clone(),new Un(e,t),new Un(n,r));return this.curves.push(a),this.currentPoint.set(n,r),this},bezierCurveTo:function(e,t,n,r,a,i){const s=new dh(this.currentPoint.clone(),new Un(e,t),new Un(n,r),new Un(a,i));return this.curves.push(s),this.currentPoint.set(a,i),this},splineThru:function(e){const t=new xh([this.currentPoint.clone()].concat(e));return this.curves.push(t),this.currentPoint.copy(e[e.length-1]),this},arc:function(e,t,n,r,a,i){const s=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(e+s,t+o,n,r,a,i),this},absarc:function(e,t,n,r,a,i){return this.absellipse(e,t,n,n,r,a,i),this},ellipse:function(e,t,n,r,a,i,s,o){const c=this.currentPoint.x,l=this.currentPoint.y;return this.absellipse(e+c,t+l,n,r,a,i,s,o),this},absellipse:function(e,t,n,r,a,i,s,o){const c=new th(e,t,n,r,a,i,s,o);if(this.curves.length>0){const e=c.getPoint(0);e.equals(this.currentPoint)||this.lineTo(e.x,e.y)}this.curves.push(c);const l=c.getPoint(1);return this.currentPoint.copy(l),this},copy:function(e){return bh.prototype.copy.call(this,e),this.currentPoint.copy(e.currentPoint),this},toJSON:function(){const e=bh.prototype.toJSON.call(this);return e.currentPoint=this.currentPoint.toArray(),e},fromJSON:function(e){return bh.prototype.fromJSON.call(this,e),this.currentPoint.fromArray(e.currentPoint),this}}),_h.prototype=Object.assign(Object.create(wh.prototype),{constructor:_h,getPointsHoles:function(e){const t=[];for(let n=0,r=this.holes.length;n<r;n++)t[n]=this.holes[n].getPoints(e);return t},extractPoints:function(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}},copy:function(e){wh.prototype.copy.call(this,e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const n=e.holes[t];this.holes.push(n.clone())}return this},toJSON:function(){const e=wh.prototype.toJSON.call(this);e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const n=this.holes[t];e.holes.push(n.toJSON())}return e},fromJSON:function(e){wh.prototype.fromJSON.call(this,e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const n=e.holes[t];this.holes.push((new wh).fromJSON(n))}return this}}),Th.prototype=Object.assign(Object.create(Kr.prototype),{constructor:Th,isLight:!0,copy:function(e){return Kr.prototype.copy.call(this,e),this.color.copy(e.color),this.intensity=e.intensity,this},toJSON:function(e){const t=Kr.prototype.toJSON.call(this,e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}),Sh.prototype=Object.assign(Object.create(Th.prototype),{constructor:Sh,isHemisphereLight:!0,copy:function(e){return Th.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}),Object.assign(Eh.prototype,{_projScreenMatrix:new Er,_lightPositionWorld:new Zn,_lookTarget:new Zn,getViewportCount:function(){return this._viewportCount},getFrustum:function(){return this._frustum},updateMatrices:function(e){const t=this.camera,n=this.matrix,r=this._projScreenMatrix,a=this._lookTarget,i=this._lightPositionWorld;i.setFromMatrixPosition(e.matrixWorld),t.position.copy(i),a.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(a),t.updateMatrixWorld(),r.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(r),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)},getViewport:function(e){return this._viewports[e]},getFrameExtents:function(){return this._frameExtents},copy:function(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){const e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}),Mh.prototype=Object.assign(Object.create(Eh.prototype),{constructor:Mh,isSpotLightShadow:!0,updateMatrices:function(e){const t=this.camera,n=2*$n.RAD2DEG*e.angle*this.focus,r=this.mapSize.width/this.mapSize.height,a=e.distance||t.far;n===t.fov&&r===t.aspect&&a===t.far||(t.fov=n,t.aspect=r,t.far=a,t.updateProjectionMatrix()),Eh.prototype.updateMatrices.call(this,e)}}),Ih.prototype=Object.assign(Object.create(Th.prototype),{constructor:Ih,isSpotLight:!0,copy:function(e){return Th.prototype.copy.call(this,e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}),Nh.prototype=Object.assign(Object.create(Eh.prototype),{constructor:Nh,isPointLightShadow:!0,updateMatrices:function(e,t=0){const n=this.camera,r=this.matrix,a=this._lightPositionWorld,i=this._lookTarget,s=this._projScreenMatrix;a.setFromMatrixPosition(e.matrixWorld),n.position.copy(a),i.copy(n.position),i.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(i),n.updateMatrixWorld(),r.makeTranslation(-a.x,-a.y,-a.z),s.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(s)}}),Ch.prototype=Object.assign(Object.create(Th.prototype),{constructor:Ch,isPointLight:!0,copy:function(e){return Th.prototype.copy.call(this,e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}),Ah.prototype=Object.assign(Object.create(vi.prototype),{constructor:Ah,isOrthographicCamera:!0,copy:function(e,t){return vi.prototype.copy.call(this,e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this},setViewOffset:function(e,t,n,r,a,i){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=a,this.view.height=i,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let a=n-e,i=n+e,s=r+t,o=r-t;if(null!==this.view&&this.view.enabled){const e=(this.right-this.left)/this.view.fullWidth/this.zoom,t=(this.top-this.bottom)/this.view.fullHeight/this.zoom;a+=e*this.view.offsetX,i=a+e*this.view.width,s-=t*this.view.offsetY,o=s-t*this.view.height}this.projectionMatrix.makeOrthographic(a,i,s,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(e){const t=Kr.prototype.toJSON.call(this,e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}),kh.prototype=Object.assign(Object.create(Eh.prototype),{constructor:kh,isDirectionalLightShadow:!0,updateMatrices:function(e){Eh.prototype.updateMatrices.call(this,e)}}),Rh.prototype=Object.assign(Object.create(Th.prototype),{constructor:Rh,isDirectionalLight:!0,copy:function(e){return Th.prototype.copy.call(this,e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}),Dh.prototype=Object.assign(Object.create(Th.prototype),{constructor:Dh,isAmbientLight:!0}),Lh.prototype=Object.assign(Object.create(Th.prototype),{constructor:Lh,isRectAreaLight:!0,copy:function(e){return Th.prototype.copy.call(this,e),this.width=e.width,this.height=e.height,this},toJSON:function(e){const t=Th.prototype.toJSON.call(this,e);return t.object.width=this.width,t.object.height=this.height,t}});class Oh{constructor(){Object.defineProperty(this,"isSphericalHarmonics3",{value:!0}),this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new Zn)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,r=e.y,a=e.z,i=this.coefficients;return t.copy(i[0]).multiplyScalar(.282095),t.addScaledVector(i[1],.488603*r),t.addScaledVector(i[2],.488603*a),t.addScaledVector(i[3],.488603*n),t.addScaledVector(i[4],n*r*1.092548),t.addScaledVector(i[5],r*a*1.092548),t.addScaledVector(i[6],.315392*(3*a*a-1)),t.addScaledVector(i[7],n*a*1.092548),t.addScaledVector(i[8],.546274*(n*n-r*r)),t}getIrradianceAt(e,t){const n=e.x,r=e.y,a=e.z,i=this.coefficients;return t.copy(i[0]).multiplyScalar(.886227),t.addScaledVector(i[1],1.023328*r),t.addScaledVector(i[2],1.023328*a),t.addScaledVector(i[3],1.023328*n),t.addScaledVector(i[4],.858086*n*r),t.addScaledVector(i[5],.858086*r*a),t.addScaledVector(i[6],.743125*a*a-.247708),t.addScaledVector(i[7],.858086*n*a),t.addScaledVector(i[8],.429043*(n*n-r*r)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let r=0;r<9;r++)n[r].fromArray(e,t+3*r);return this}toArray(e=[],t=0){const n=this.coefficients;for(let r=0;r<9;r++)n[r].toArray(e,t+3*r);return e}static getBasisAt(e,t){const n=e.x,r=e.y,a=e.z;t[0]=.282095,t[1]=.488603*r,t[2]=.488603*a,t[3]=.488603*n,t[4]=1.092548*n*r,t[5]=1.092548*r*a,t[6]=.315392*(3*a*a-1),t[7]=1.092548*n*a,t[8]=.546274*(n*n-r*r)}}function Ph(e,t){Th.call(this,void 0,t),this.type="LightProbe",this.sh=void 0!==e?e:new Oh}function Fh(e){Vu.call(this,e),this.textures={}}Ph.prototype=Object.assign(Object.create(Th.prototype),{constructor:Ph,isLightProbe:!0,copy:function(e){return Th.prototype.copy.call(this,e),this.sh.copy(e.sh),this},fromJSON:function(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this},toJSON:function(e){const t=Th.prototype.toJSON.call(this,e);return t.object.sh=this.sh.toArray(),t}}),Fh.prototype=Object.assign(Object.create(Vu.prototype),{constructor:Fh,load:function(e,t,n,r){const a=this,i=new Xu(a.manager);i.setPath(a.path),i.setRequestHeader(a.requestHeader),i.setWithCredentials(a.withCredentials),i.load(e,(function(n){try{t(a.parse(JSON.parse(n)))}catch(t){r?r(t):console.error(t),a.manager.itemError(e)}}),n,r)},parse:function(e){const t=this.textures;function n(e){return void 0===t[e]&&console.warn("THREE.MaterialLoader: Undefined texture",e),t[e]}const r=new Mu[e.type];if(void 0!==e.uuid&&(r.uuid=e.uuid),void 0!==e.name&&(r.name=e.name),void 0!==e.color&&void 0!==r.color&&r.color.setHex(e.color),void 0!==e.roughness&&(r.roughness=e.roughness),void 0!==e.metalness&&(r.metalness=e.metalness),void 0!==e.sheen&&(r.sheen=(new xa).setHex(e.sheen)),void 0!==e.emissive&&void 0!==r.emissive&&r.emissive.setHex(e.emissive),void 0!==e.specular&&void 0!==r.specular&&r.specular.setHex(e.specular),void 0!==e.shininess&&(r.shininess=e.shininess),void 0!==e.clearcoat&&(r.clearcoat=e.clearcoat),void 0!==e.clearcoatRoughness&&(r.clearcoatRoughness=e.clearcoatRoughness),void 0!==e.fog&&(r.fog=e.fog),void 0!==e.flatShading&&(r.flatShading=e.flatShading),void 0!==e.blending&&(r.blending=e.blending),void 0!==e.combine&&(r.combine=e.combine),void 0!==e.side&&(r.side=e.side),void 0!==e.opacity&&(r.opacity=e.opacity),void 0!==e.transparent&&(r.transparent=e.transparent),void 0!==e.alphaTest&&(r.alphaTest=e.alphaTest),void 0!==e.depthTest&&(r.depthTest=e.depthTest),void 0!==e.depthWrite&&(r.depthWrite=e.depthWrite),void 0!==e.colorWrite&&(r.colorWrite=e.colorWrite),void 0!==e.stencilWrite&&(r.stencilWrite=e.stencilWrite),void 0!==e.stencilWriteMask&&(r.stencilWriteMask=e.stencilWriteMask),void 0!==e.stencilFunc&&(r.stencilFunc=e.stencilFunc),void 0!==e.stencilRef&&(r.stencilRef=e.stencilRef),void 0!==e.stencilFuncMask&&(r.stencilFuncMask=e.stencilFuncMask),void 0!==e.stencilFail&&(r.stencilFail=e.stencilFail),void 0!==e.stencilZFail&&(r.stencilZFail=e.stencilZFail),void 0!==e.stencilZPass&&(r.stencilZPass=e.stencilZPass),void 0!==e.wireframe&&(r.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(r.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.wireframeLinecap&&(r.wireframeLinecap=e.wireframeLinecap),void 0!==e.wireframeLinejoin&&(r.wireframeLinejoin=e.wireframeLinejoin),void 0!==e.rotation&&(r.rotation=e.rotation),1!==e.linewidth&&(r.linewidth=e.linewidth),void 0!==e.dashSize&&(r.dashSize=e.dashSize),void 0!==e.gapSize&&(r.gapSize=e.gapSize),void 0!==e.scale&&(r.scale=e.scale),void 0!==e.polygonOffset&&(r.polygonOffset=e.polygonOffset),void 0!==e.polygonOffsetFactor&&(r.polygonOffsetFactor=e.polygonOffsetFactor),void 0!==e.polygonOffsetUnits&&(r.polygonOffsetUnits=e.polygonOffsetUnits),void 0!==e.skinning&&(r.skinning=e.skinning),void 0!==e.morphTargets&&(r.morphTargets=e.morphTargets),void 0!==e.morphNormals&&(r.morphNormals=e.morphNormals),void 0!==e.dithering&&(r.dithering=e.dithering),void 0!==e.vertexTangents&&(r.vertexTangents=e.vertexTangents),void 0!==e.visible&&(r.visible=e.visible),void 0!==e.toneMapped&&(r.toneMapped=e.toneMapped),void 0!==e.userData&&(r.userData=e.userData),void 0!==e.vertexColors&&("number"==typeof e.vertexColors?r.vertexColors=e.vertexColors>0:r.vertexColors=e.vertexColors),void 0!==e.uniforms)for(const t in e.uniforms){const a=e.uniforms[t];switch(r.uniforms[t]={},a.type){case"t":r.uniforms[t].value=n(a.value);break;case"c":r.uniforms[t].value=(new xa).setHex(a.value);break;case"v2":r.uniforms[t].value=(new Un).fromArray(a.value);break;case"v3":r.uniforms[t].value=(new Zn).fromArray(a.value);break;case"v4":r.uniforms[t].value=(new Xn).fromArray(a.value);break;case"m3":r.uniforms[t].value=(new zn).fromArray(a.value);break;case"m4":r.uniforms[t].value=(new Er).fromArray(a.value);break;default:r.uniforms[t].value=a.value}}if(void 0!==e.defines&&(r.defines=e.defines),void 0!==e.vertexShader&&(r.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(r.fragmentShader=e.fragmentShader),void 0!==e.extensions)for(const t in e.extensions)r.extensions[t]=e.extensions[t];if(void 0!==e.shading&&(r.flatShading=1===e.shading),void 0!==e.size&&(r.size=e.size),void 0!==e.sizeAttenuation&&(r.sizeAttenuation=e.sizeAttenuation),void 0!==e.map&&(r.map=n(e.map)),void 0!==e.matcap&&(r.matcap=n(e.matcap)),void 0!==e.alphaMap&&(r.alphaMap=n(e.alphaMap)),void 0!==e.bumpMap&&(r.bumpMap=n(e.bumpMap)),void 0!==e.bumpScale&&(r.bumpScale=e.bumpScale),void 0!==e.normalMap&&(r.normalMap=n(e.normalMap)),void 0!==e.normalMapType&&(r.normalMapType=e.normalMapType),void 0!==e.normalScale){let t=e.normalScale;!1===Array.isArray(t)&&(t=[t,t]),r.normalScale=(new Un).fromArray(t)}return void 0!==e.displacementMap&&(r.displacementMap=n(e.displacementMap)),void 0!==e.displacementScale&&(r.displacementScale=e.displacementScale),void 0!==e.displacementBias&&(r.displacementBias=e.displacementBias),void 0!==e.roughnessMap&&(r.roughnessMap=n(e.roughnessMap)),void 0!==e.metalnessMap&&(r.metalnessMap=n(e.metalnessMap)),void 0!==e.emissiveMap&&(r.emissiveMap=n(e.emissiveMap)),void 0!==e.emissiveIntensity&&(r.emissiveIntensity=e.emissiveIntensity),void 0!==e.specularMap&&(r.specularMap=n(e.specularMap)),void 0!==e.envMap&&(r.envMap=n(e.envMap)),void 0!==e.envMapIntensity&&(r.envMapIntensity=e.envMapIntensity),void 0!==e.reflectivity&&(r.reflectivity=e.reflectivity),void 0!==e.refractionRatio&&(r.refractionRatio=e.refractionRatio),void 0!==e.lightMap&&(r.lightMap=n(e.lightMap)),void 0!==e.lightMapIntensity&&(r.lightMapIntensity=e.lightMapIntensity),void 0!==e.aoMap&&(r.aoMap=n(e.aoMap)),void 0!==e.aoMapIntensity&&(r.aoMapIntensity=e.aoMapIntensity),void 0!==e.gradientMap&&(r.gradientMap=n(e.gradientMap)),void 0!==e.clearcoatMap&&(r.clearcoatMap=n(e.clearcoatMap)),void 0!==e.clearcoatRoughnessMap&&(r.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),void 0!==e.clearcoatNormalMap&&(r.clearcoatNormalMap=n(e.clearcoatNormalMap)),void 0!==e.clearcoatNormalScale&&(r.clearcoatNormalScale=(new Un).fromArray(e.clearcoatNormalScale)),void 0!==e.transmission&&(r.transmission=e.transmission),void 0!==e.transmissionMap&&(r.transmissionMap=n(e.transmissionMap)),r},setTextures:function(e){return this.textures=e,this}});const Bh={decodeText:function(e){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(e);let t="";for(let n=0,r=e.length;n<r;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch(e){return t}},extractUrlBase:function(e){const t=e.lastIndexOf("/");return-1===t?"./":e.substr(0,t+1)}};function $h(){Xa.call(this),this.type="InstancedBufferGeometry",this.instanceCount=1/0}function Uh(e,t,n,r){"number"==typeof n&&(r=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),Ea.call(this,e,t,n),this.meshPerAttribute=r||1}function zh(e){Vu.call(this,e)}$h.prototype=Object.assign(Object.create(Xa.prototype),{constructor:$h,isInstancedBufferGeometry:!0,copy:function(e){return Xa.prototype.copy.call(this,e),this.instanceCount=e.instanceCount,this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){const e=Xa.prototype.toJSON.call(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}),Uh.prototype=Object.assign(Object.create(Ea.prototype),{constructor:Uh,isInstancedBufferAttribute:!0,copy:function(e){return Ea.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},toJSON:function(){const e=Ea.prototype.toJSON.call(this);return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}),zh.prototype=Object.assign(Object.create(Vu.prototype),{constructor:zh,load:function(e,t,n,r){const a=this,i=new Xu(a.manager);i.setPath(a.path),i.setRequestHeader(a.requestHeader),i.setWithCredentials(a.withCredentials),i.load(e,(function(n){try{t(a.parse(JSON.parse(n)))}catch(t){r?r(t):console.error(t),a.manager.itemError(e)}}),n,r)},parse:function(e){const t={},n={};function r(e,r){if(void 0!==t[r])return t[r];const a=e.interleavedBuffers[r],i=function(e,t){if(void 0!==n[t])return n[t];const r=e.arrayBuffers[t],a=new Uint32Array(r).buffer;return n[t]=a,a}(e,a.buffer),s=new zo($a(a.type,i),a.stride);return s.uuid=a.uuid,t[r]=s,s}const a=e.isInstancedBufferGeometry?new $h:new Xa,i=e.data.index;if(void 0!==i){const e=$a(i.type,i.array);a.setIndex(new Ea(e,1))}const s=e.data.attributes;for(const t in s){const n=s[t];let i;if(n.isInterleavedBufferAttribute)i=new Ho(r(e.data,n.data),n.itemSize,n.offset,n.normalized);else{const e=$a(n.type,n.array);i=new(n.isInstancedBufferAttribute?Uh:Ea)(e,n.itemSize,n.normalized)}void 0!==n.name&&(i.name=n.name),a.setAttribute(t,i)}const o=e.data.morphAttributes;if(o)for(const t in o){const n=o[t],i=[];for(let t=0,a=n.length;t<a;t++){const a=n[t];let s;s=a.isInterleavedBufferAttribute?new Ho(r(e.data,a.data),a.itemSize,a.offset,a.normalized):new Ea($a(a.type,a.array),a.itemSize,a.normalized),void 0!==a.name&&(s.name=a.name),i.push(s)}a.morphAttributes[t]=i}e.data.morphTargetsRelative&&(a.morphTargetsRelative=!0);const c=e.data.groups||e.data.drawcalls||e.data.offsets;if(void 0!==c)for(let e=0,t=c.length;e!==t;++e){const t=c[e];a.addGroup(t.start,t.count,t.materialIndex)}const l=e.data.boundingSphere;if(void 0!==l){const e=new Zn;void 0!==l.center&&e.fromArray(l.center),a.boundingSphere=new gr(e,l.radius)}return e.name&&(a.name=e.name),e.userData&&(a.userData=e.userData),a}});class Gh extends Vu{constructor(e){super(e)}load(e,t,n,r){const a=this,i=""===this.path?Bh.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const s=new Xu(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(e,(function(n){let i=null;try{i=JSON.parse(n)}catch(t){return void 0!==r&&r(t),void console.error("THREE:ObjectLoader: Can't parse "+e+".",t.message)}const s=i.metadata;void 0!==s&&void 0!==s.type&&"geometry"!==s.type.toLowerCase()?a.parse(i,t):console.error("THREE.ObjectLoader: Can't load "+e)}),n,r)}parse(e,t){const n=this.parseAnimations(e.animations),r=this.parseShapes(e.shapes),a=this.parseGeometries(e.geometries,r),i=this.parseImages(e.images,(function(){void 0!==t&&t(c)})),s=this.parseTextures(e.textures,i),o=this.parseMaterials(e.materials,s),c=this.parseObject(e.object,a,o,n),l=this.parseSkeletons(e.skeletons,c);if(this.bindSkeletons(c,l),void 0!==t){let e=!1;for(const t in i)if(i[t]instanceof HTMLImageElement){e=!0;break}!1===e&&t(c)}return c}parseShapes(e){const t={};if(void 0!==e)for(let n=0,r=e.length;n<r;n++){const r=(new _h).fromJSON(e[n]);t[r.uuid]=r}return t}parseSkeletons(e,t){const n={},r={};if(t.traverse((function(e){e.isBone&&(r[e.uuid]=e)})),void 0!==e)for(let t=0,a=e.length;t<a;t++){const a=(new xc).fromJSON(e[t],r);n[a.uuid]=a}return n}parseGeometries(e,t){const n={};let r;if(void 0!==e){const a=new zh;for(let i=0,s=e.length;i<s;i++){let s;const o=e[i];switch(o.type){case"PlaneGeometry":case"PlaneBufferGeometry":s=new mu[o.type](o.width,o.height,o.widthSegments,o.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":s=new mu[o.type](o.width,o.height,o.depth,o.widthSegments,o.heightSegments,o.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":s=new mu[o.type](o.radius,o.segments,o.thetaStart,o.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":s=new mu[o.type](o.radiusTop,o.radiusBottom,o.height,o.radialSegments,o.heightSegments,o.openEnded,o.thetaStart,o.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":s=new mu[o.type](o.radius,o.height,o.radialSegments,o.heightSegments,o.openEnded,o.thetaStart,o.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":s=new mu[o.type](o.radius,o.widthSegments,o.heightSegments,o.phiStart,o.phiLength,o.thetaStart,o.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":s=new mu[o.type](o.radius,o.detail);break;case"RingGeometry":case"RingBufferGeometry":s=new mu[o.type](o.innerRadius,o.outerRadius,o.thetaSegments,o.phiSegments,o.thetaStart,o.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":s=new mu[o.type](o.radius,o.tube,o.radialSegments,o.tubularSegments,o.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":s=new mu[o.type](o.radius,o.tube,o.tubularSegments,o.radialSegments,o.p,o.q);break;case"TubeGeometry":case"TubeBufferGeometry":s=new mu[o.type]((new vh[o.path.type]).fromJSON(o.path),o.tubularSegments,o.radius,o.radialSegments,o.closed);break;case"LatheGeometry":case"LatheBufferGeometry":s=new mu[o.type](o.points,o.segments,o.phiStart,o.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":s=new mu[o.type](o.vertices,o.indices,o.radius,o.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":r=[];for(let e=0,n=o.shapes.length;e<n;e++){const n=t[o.shapes[e]];r.push(n)}s=new mu[o.type](r,o.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":r=[];for(let e=0,n=o.shapes.length;e<n;e++){const n=t[o.shapes[e]];r.push(n)}const e=o.options.extrudePath;void 0!==e&&(o.options.extrudePath=(new vh[e.type]).fromJSON(e)),s=new mu[o.type](r,o.options);break;case"BufferGeometry":case"InstancedBufferGeometry":s=a.parse(o);break;case"Geometry":console.error('THREE.ObjectLoader: Loading "Geometry" is not supported anymore.');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+o.type+'"');continue}s.uuid=o.uuid,void 0!==o.name&&(s.name=o.name),!0===s.isBufferGeometry&&void 0!==o.userData&&(s.userData=o.userData),n[o.uuid]=s}}return n}parseMaterials(e,t){const n={},r={};if(void 0!==e){const a=new Fh;a.setTextures(t);for(let t=0,i=e.length;t<i;t++){const i=e[t];if("MultiMaterial"===i.type){const e=[];for(let t=0;t<i.materials.length;t++){const r=i.materials[t];void 0===n[r.uuid]&&(n[r.uuid]=a.parse(r)),e.push(n[r.uuid])}r[i.uuid]=e}else void 0===n[i.uuid]&&(n[i.uuid]=a.parse(i)),r[i.uuid]=n[i.uuid]}}return r}parseAnimations(e){const t={};if(void 0!==e)for(let n=0;n<e.length;n++){const r=e[n],a=Uu.parse(r);t[a.uuid]=a}return t}parseImages(e,t){const n=this,r={};let a;function i(e){if("string"==typeof e){const t=e;return function(e){return n.manager.itemStart(e),a.load(e,(function(){n.manager.itemEnd(e)}),void 0,(function(){n.manager.itemError(e),n.manager.itemEnd(e)}))}(/^(\/\/)|([a-z]+:(\/\/)?)/i.test(t)?t:n.resourcePath+t)}return e.data?{data:$a(e.type,e.data),width:e.width,height:e.height}:null}if(void 0!==e&&e.length>0){const n=new Hu(t);a=new Ku(n),a.setCrossOrigin(this.crossOrigin);for(let t=0,n=e.length;t<n;t++){const n=e[t],a=n.url;if(Array.isArray(a)){r[n.uuid]=[];for(let e=0,t=a.length;e<t;e++){const t=i(a[e]);null!==t&&(t instanceof HTMLImageElement?r[n.uuid].push(t):r[n.uuid].push(new Ei(t.data,t.width,t.height)))}}else{const e=i(n.url);null!==e&&(r[n.uuid]=e)}}}return r}parseTextures(e,t){function n(e,t){return"number"==typeof e?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e),t[e])}const r={};if(void 0!==e)for(let a=0,i=e.length;a<i;a++){const i=e[a];let s;void 0===i.image&&console.warn('THREE.ObjectLoader: No "image" specified for',i.uuid),void 0===t[i.image]&&console.warn("THREE.ObjectLoader: Undefined image",i.image);const o=t[i.image];Array.isArray(o)?(s=new Ti(o),6===o.length&&(s.needsUpdate=!0)):(s=o&&o.data?new Ei(o.data,o.width,o.height):new Vn(o),o&&(s.needsUpdate=!0)),s.uuid=i.uuid,void 0!==i.name&&(s.name=i.name),void 0!==i.mapping&&(s.mapping=n(i.mapping,Hh)),void 0!==i.offset&&s.offset.fromArray(i.offset),void 0!==i.repeat&&s.repeat.fromArray(i.repeat),void 0!==i.center&&s.center.fromArray(i.center),void 0!==i.rotation&&(s.rotation=i.rotation),void 0!==i.wrap&&(s.wrapS=n(i.wrap[0],Wh),s.wrapT=n(i.wrap[1],Wh)),void 0!==i.format&&(s.format=i.format),void 0!==i.type&&(s.type=i.type),void 0!==i.encoding&&(s.encoding=i.encoding),void 0!==i.minFilter&&(s.minFilter=n(i.minFilter,Vh)),void 0!==i.magFilter&&(s.magFilter=n(i.magFilter,Vh)),void 0!==i.anisotropy&&(s.anisotropy=i.anisotropy),void 0!==i.flipY&&(s.flipY=i.flipY),void 0!==i.premultiplyAlpha&&(s.premultiplyAlpha=i.premultiplyAlpha),void 0!==i.unpackAlignment&&(s.unpackAlignment=i.unpackAlignment),r[i.uuid]=s}return r}parseObject(e,t,n,r){let a,i,s;function o(e){return void 0===t[e]&&console.warn("THREE.ObjectLoader: Undefined geometry",e),t[e]}function c(e){if(void 0!==e){if(Array.isArray(e)){const t=[];for(let r=0,a=e.length;r<a;r++){const a=e[r];void 0===n[a]&&console.warn("THREE.ObjectLoader: Undefined material",a),t.push(n[a])}return t}return void 0===n[e]&&console.warn("THREE.ObjectLoader: Undefined material",e),n[e]}}switch(e.type){case"Scene":a=new Uo,void 0!==e.background&&Number.isInteger(e.background)&&(a.background=new xa(e.background)),void 0!==e.fog&&("Fog"===e.fog.type?a.fog=new $o(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(a.fog=new Bo(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":a=new bi(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(a.focus=e.focus),void 0!==e.zoom&&(a.zoom=e.zoom),void 0!==e.filmGauge&&(a.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(a.filmOffset=e.filmOffset),void 0!==e.view&&(a.view=Object.assign({},e.view));break;case"OrthographicCamera":a=new Ah(e.left,e.right,e.top,e.bottom,e.near,e.far),void 0!==e.zoom&&(a.zoom=e.zoom),void 0!==e.view&&(a.view=Object.assign({},e.view));break;case"AmbientLight":a=new Dh(e.color,e.intensity);break;case"DirectionalLight":a=new Rh(e.color,e.intensity);break;case"PointLight":a=new Ch(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":a=new Lh(e.color,e.intensity,e.width,e.height);break;case"SpotLight":a=new Ih(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":a=new Sh(e.color,e.groundColor,e.intensity);break;case"LightProbe":a=(new Ph).fromJSON(e);break;case"SkinnedMesh":i=o(e.geometry),s=c(e.material),a=new fc(i,s),void 0!==e.bindMode&&(a.bindMode=e.bindMode),void 0!==e.bindMatrix&&a.bindMatrix.fromArray(e.bindMatrix),void 0!==e.skeleton&&(a.skeleton=e.skeleton);break;case"Mesh":i=o(e.geometry),s=c(e.material),a=new hi(i,s);break;case"InstancedMesh":i=o(e.geometry),s=c(e.material);const t=e.count,n=e.instanceMatrix;a=new Tc(i,s,t),a.instanceMatrix=new Ea(new Float32Array(n.array),16);break;case"LOD":a=new cc;break;case"Line":a=new Ac(o(e.geometry),c(e.material));break;case"LineLoop":a=new Lc(o(e.geometry),c(e.material));break;case"LineSegments":a=new Dc(o(e.geometry),c(e.material));break;case"PointCloud":case"Points":a=new Uc(o(e.geometry),c(e.material));break;case"Sprite":a=new ac(c(e.material));break;case"Group":a=new Ro;break;case"Bone":a=new mc;break;default:a=new Kr}if(a.uuid=e.uuid,void 0!==e.name&&(a.name=e.name),void 0!==e.matrix?(a.matrix.fromArray(e.matrix),void 0!==e.matrixAutoUpdate&&(a.matrixAutoUpdate=e.matrixAutoUpdate),a.matrixAutoUpdate&&a.matrix.decompose(a.position,a.quaternion,a.scale)):(void 0!==e.position&&a.position.fromArray(e.position),void 0!==e.rotation&&a.rotation.fromArray(e.rotation),void 0!==e.quaternion&&a.quaternion.fromArray(e.quaternion),void 0!==e.scale&&a.scale.fromArray(e.scale)),void 0!==e.castShadow&&(a.castShadow=e.castShadow),void 0!==e.receiveShadow&&(a.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.bias&&(a.shadow.bias=e.shadow.bias),void 0!==e.shadow.normalBias&&(a.shadow.normalBias=e.shadow.normalBias),void 0!==e.shadow.radius&&(a.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&a.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera&&(a.shadow.camera=this.parseObject(e.shadow.camera))),void 0!==e.visible&&(a.visible=e.visible),void 0!==e.frustumCulled&&(a.frustumCulled=e.frustumCulled),void 0!==e.renderOrder&&(a.renderOrder=e.renderOrder),void 0!==e.userData&&(a.userData=e.userData),void 0!==e.layers&&(a.layers.mask=e.layers),void 0!==e.children){const i=e.children;for(let e=0;e<i.length;e++)a.add(this.parseObject(i[e],t,n,r))}if(void 0!==e.animations){const t=e.animations;for(let e=0;e<t.length;e++){const n=t[e];a.animations.push(r[n])}}if("LOD"===e.type){void 0!==e.autoUpdate&&(a.autoUpdate=e.autoUpdate);const t=e.levels;for(let e=0;e<t.length;e++){const n=t[e],r=a.getObjectByProperty("uuid",n.object);void 0!==r&&a.addLevel(r,n.distance)}}return a}bindSkeletons(e,t){0!==Object.keys(t).length&&e.traverse((function(e){if(!0===e.isSkinnedMesh&&void 0!==e.skeleton){const n=t[e.skeleton];void 0===n?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",e.skeleton):e.bind(n,e.bindMatrix)}}))}setTexturePath(e){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(e)}}const Hh={UVMapping:ae,CubeReflectionMapping:ie,CubeRefractionMapping:se,EquirectangularReflectionMapping:oe,EquirectangularRefractionMapping:ce,CubeUVReflectionMapping:le,CubeUVRefractionMapping:ue},Wh={RepeatWrapping:he,ClampToEdgeWrapping:de,MirroredRepeatWrapping:pe},Vh={NearestFilter:fe,NearestMipmapNearestFilter:me,NearestMipmapLinearFilter:ye,LinearFilter:ve,LinearMipmapNearestFilter:be,LinearMipmapLinearFilter:_e};function jh(e){"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),Vu.call(this,e),this.options={premultiplyAlpha:"none"}}function Xh(){this.type="ShapePath",this.color=new xa,this.subPaths=[],this.currentPath=null}function qh(e){this.type="Font",this.data=e}function Yh(e,t,n,r,a){const i=a.glyphs[e]||a.glyphs["?"];if(!i)return void console.error('THREE.Font: character "'+e+'" does not exists in font family '+a.familyName+".");const s=new Xh;let o,c,l,u,h,d,p,f;if(i.o){const e=i._cachedOutline||(i._cachedOutline=i.o.split(" "));for(let a=0,i=e.length;a<i;)switch(e[a++]){case"m":o=e[a++]*t+n,c=e[a++]*t+r,s.moveTo(o,c);break;case"l":o=e[a++]*t+n,c=e[a++]*t+r,s.lineTo(o,c);break;case"q":l=e[a++]*t+n,u=e[a++]*t+r,h=e[a++]*t+n,d=e[a++]*t+r,s.quadraticCurveTo(h,d,l,u);break;case"b":l=e[a++]*t+n,u=e[a++]*t+r,h=e[a++]*t+n,d=e[a++]*t+r,p=e[a++]*t+n,f=e[a++]*t+r,s.bezierCurveTo(h,d,p,f,l,u)}}return{offsetX:i.ha*t,path:s}}function Kh(e){Vu.call(this,e)}let Zh;jh.prototype=Object.assign(Object.create(Vu.prototype),{constructor:jh,isImageBitmapLoader:!0,setOptions:function(e){return this.options=e,this},load:function(e,t,n,r){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const a=this,i=Gu.get(e);if(void 0!==i)return a.manager.itemStart(e),setTimeout((function(){t&&t(i),a.manager.itemEnd(e)}),0),i;const s={};s.credentials="anonymous"===this.crossOrigin?"same-origin":"include",fetch(e,s).then((function(e){return e.blob()})).then((function(e){return createImageBitmap(e,a.options)})).then((function(n){Gu.add(e,n),t&&t(n),a.manager.itemEnd(e)})).catch((function(t){r&&r(t),a.manager.itemError(e),a.manager.itemEnd(e)})),a.manager.itemStart(e)}}),Object.assign(Xh.prototype,{moveTo:function(e,t){return this.currentPath=new wh,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this},lineTo:function(e,t){return this.currentPath.lineTo(e,t),this},quadraticCurveTo:function(e,t,n,r){return this.currentPath.quadraticCurveTo(e,t,n,r),this},bezierCurveTo:function(e,t,n,r,a,i){return this.currentPath.bezierCurveTo(e,t,n,r,a,i),this},splineThru:function(e){return this.currentPath.splineThru(e),this},toShapes:function(e,t){function n(e){const t=[];for(let n=0,r=e.length;n<r;n++){const r=e[n],a=new _h;a.curves=r.curves,t.push(a)}return t}function r(e,t){const n=t.length;let r=!1;for(let a=n-1,i=0;i<n;a=i++){let n=t[a],s=t[i],o=s.x-n.x,c=s.y-n.y;if(Math.abs(c)>Number.EPSILON){if(c<0&&(n=t[i],o=-o,s=t[a],c=-c),e.y<n.y||e.y>s.y)continue;if(e.y===n.y){if(e.x===n.x)return!0}else{const t=c*(e.x-n.x)-o*(e.y-n.y);if(0===t)return!0;if(t<0)continue;r=!r}}else{if(e.y!==n.y)continue;if(s.x<=e.x&&e.x<=n.x||n.x<=e.x&&e.x<=s.x)return!0}}return r}const a=Pl.isClockWise,i=this.subPaths;if(0===i.length)return[];if(!0===t)return n(i);let s,o,c;const l=[];if(1===i.length)return o=i[0],c=new _h,c.curves=o.curves,l.push(c),l;let u=!a(i[0].getPoints());u=e?!u:u;const h=[],d=[];let p,f,m=[],g=0;d[g]=void 0,m[g]=[];for(let t=0,n=i.length;t<n;t++)o=i[t],p=o.getPoints(),s=a(p),s=e?!s:s,s?(!u&&d[g]&&g++,d[g]={s:new _h,p},d[g].s.curves=o.curves,u&&g++,m[g]=[]):m[g].push({h:o,p:p[0]});if(!d[0])return n(i);if(d.length>1){let e=!1;const t=[];for(let e=0,t=d.length;e<t;e++)h[e]=[];for(let n=0,a=d.length;n<a;n++){const a=m[n];for(let i=0;i<a.length;i++){const s=a[i];let o=!0;for(let a=0;a<d.length;a++)r(s.p,d[a].p)&&(n!==a&&t.push({froms:n,tos:a,hole:i}),o?(o=!1,h[a].push(s)):e=!0);o&&h[n].push(s)}}t.length>0&&(e||(m=h))}for(let e=0,t=d.length;e<t;e++){c=d[e].s,l.push(c),f=m[e];for(let e=0,t=f.length;e<t;e++)c.holes.push(f[e].h)}return l}}),Object.assign(qh.prototype,{isFont:!0,generateShapes:function(e,t=100){const n=[],r=function(e,t,n){const r=Array.from?Array.from(e):String(e).split(""),a=t/n.resolution,i=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*a,s=[];let o=0,c=0;for(let e=0;e<r.length;e++){const t=r[e];if("\n"===t)o=0,c-=i;else{const e=Yh(t,a,o,c,n);o+=e.offsetX,s.push(e.path)}}return s}(e,t,this.data);for(let e=0,t=r.length;e<t;e++)Array.prototype.push.apply(n,r[e].toShapes());return n}}),Kh.prototype=Object.assign(Object.create(Vu.prototype),{constructor:Kh,load:function(e,t,n,r){const a=this,i=new Xu(this.manager);i.setPath(this.path),i.setRequestHeader(this.requestHeader),i.setWithCredentials(a.withCredentials),i.load(e,(function(e){let n;try{n=JSON.parse(e)}catch(t){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),n=JSON.parse(e.substring(65,e.length-2))}const r=a.parse(n);t&&t(r)}),n,r)},parse:function(e){return new qh(e)}});const Jh={getContext:function(){return void 0===Zh&&(Zh=new(window.AudioContext||window.webkitAudioContext)),Zh},setContext:function(e){Zh=e}};function Qh(e){Vu.call(this,e)}function ed(e,t,n){Ph.call(this,void 0,n);const r=(new xa).set(e),a=(new xa).set(t),i=new Zn(r.r,r.g,r.b),s=new Zn(a.r,a.g,a.b),o=Math.sqrt(Math.PI),c=o*Math.sqrt(.75);this.sh.coefficients[0].copy(i).add(s).multiplyScalar(o),this.sh.coefficients[1].copy(i).sub(s).multiplyScalar(c)}function td(e,t){Ph.call(this,void 0,t);const n=(new xa).set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}Qh.prototype=Object.assign(Object.create(Vu.prototype),{constructor:Qh,load:function(e,t,n,r){const a=this,i=new Xu(a.manager);i.setResponseType("arraybuffer"),i.setPath(a.path),i.setRequestHeader(a.requestHeader),i.setWithCredentials(a.withCredentials),i.load(e,(function(n){try{const e=n.slice(0);Jh.getContext().decodeAudioData(e,(function(e){t(e)}))}catch(t){r?r(t):console.error(t),a.manager.itemError(e)}}),n,r)}}),ed.prototype=Object.assign(Object.create(Ph.prototype),{constructor:ed,isHemisphereLightProbe:!0,copy:function(e){return Ph.prototype.copy.call(this,e),this},toJSON:function(e){return Ph.prototype.toJSON.call(this,e)}}),td.prototype=Object.assign(Object.create(Ph.prototype),{constructor:td,isAmbientLightProbe:!0,copy:function(e){return Ph.prototype.copy.call(this,e),this},toJSON:function(e){return Ph.prototype.toJSON.call(this,e)}});const nd=new Er,rd=new Er;function ad(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new bi,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new bi,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}Object.assign(ad.prototype,{update:function(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep;const n=e.projectionMatrix.clone(),r=t.eyeSep/2,a=r*t.near/t.focus,i=t.near*Math.tan($n.DEG2RAD*t.fov*.5)/t.zoom;let s,o;rd.elements[12]=-r,nd.elements[12]=r,s=-i*t.aspect+a,o=i*t.aspect+a,n.elements[0]=2*t.near/(o-s),n.elements[8]=(o+s)/(o-s),this.cameraL.projectionMatrix.copy(n),s=-i*t.aspect-a,o=i*t.aspect-a,n.elements[0]=2*t.near/(o-s),n.elements[8]=(o+s)/(o-s),this.cameraR.projectionMatrix.copy(n)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(rd),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(nd)}});class id{constructor(e){this.autoStart=void 0===e||e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=sd(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=sd();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function sd(){return("undefined"==typeof performance?Date:performance).now()}const od=new Zn,cd=new Kn,ld=new Zn,ud=new Zn;class hd extends Kr{constructor(){super(),this.type="AudioListener",this.context=Jh.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new id}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(od,cd,ld),ud.set(0,0,-1).applyQuaternion(cd),t.positionX){const e=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(od.x,e),t.positionY.linearRampToValueAtTime(od.y,e),t.positionZ.linearRampToValueAtTime(od.z,e),t.forwardX.linearRampToValueAtTime(ud.x,e),t.forwardY.linearRampToValueAtTime(ud.y,e),t.forwardZ.linearRampToValueAtTime(ud.z,e),t.upX.linearRampToValueAtTime(n.x,e),t.upY.linearRampToValueAtTime(n.y,e),t.upZ.linearRampToValueAtTime(n.z,e)}else t.setPosition(od.x,od.y,od.z),t.setOrientation(ud.x,ud.y,ud.z,n.x,n.y,n.z)}}class dd extends Kr{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),!0===this._connected?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(!1!==this.hasPlaybackControl)return this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(!1!==this.hasPlaybackControl)return this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const pd=new Zn,fd=new Kn,md=new Zn,gd=new Zn;class yd extends dd{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(pd,fd,md),gd.set(0,0,1).applyQuaternion(fd);const t=this.panner;if(t.positionX){const e=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(pd.x,e),t.positionY.linearRampToValueAtTime(pd.y,e),t.positionZ.linearRampToValueAtTime(pd.z,e),t.orientationX.linearRampToValueAtTime(gd.x,e),t.orientationY.linearRampToValueAtTime(gd.y,e),t.orientationZ.linearRampToValueAtTime(gd.z,e)}else t.setPosition(pd.x,pd.y,pd.z),t.setOrientation(gd.x,gd.y,gd.z)}}class xd{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}function vd(e,t,n){let r,a,i;switch(this.binding=e,this.valueSize=n,t){case"quaternion":r=this._slerp,a=this._slerpAdditive,i=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case"string":case"bool":r=this._select,a=this._select,i=this._setAdditiveIdentityOther,this.buffer=new Array(5*n);break;default:r=this._lerp,a=this._lerpAdditive,i=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=r,this._mixBufferRegionAdditive=a,this._setIdentity=i,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}Object.assign(vd.prototype,{accumulate:function(e,t){const n=this.buffer,r=this.valueSize,a=e*r+r;let i=this.cumulativeWeight;if(0===i){for(let e=0;e!==r;++e)n[a+e]=n[e];i=t}else{i+=t;const e=t/i;this._mixBufferRegion(n,a,0,e,r)}this.cumulativeWeight=i},accumulateAdditive:function(e){const t=this.buffer,n=this.valueSize,r=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(t,r,0,e,n),this.cumulativeWeightAdditive+=e},apply:function(e){const t=this.valueSize,n=this.buffer,r=e*t+t,a=this.cumulativeWeight,i=this.cumulativeWeightAdditive,s=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,a<1){const e=t*this._origIndex;this._mixBufferRegion(n,r,e,1-a,t)}i>0&&this._mixBufferRegionAdditive(n,r,this._addIndex*t,1,t);for(let e=t,a=t+t;e!==a;++e)if(n[e]!==n[e+t]){s.setValue(n,r);break}},saveOriginalState:function(){const e=this.binding,t=this.buffer,n=this.valueSize,r=n*this._origIndex;e.getValue(t,r);for(let e=n,a=r;e!==a;++e)t[e]=t[r+e%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0},restoreOriginalState:function(){const e=3*this.valueSize;this.binding.setValue(this.buffer,e)},_setAdditiveIdentityNumeric:function(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0},_setAdditiveIdentityQuaternion:function(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1},_setAdditiveIdentityOther:function(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]},_select:function(e,t,n,r,a){if(r>=.5)for(let r=0;r!==a;++r)e[t+r]=e[n+r]},_slerp:function(e,t,n,r){Kn.slerpFlat(e,t,e,t,e,n,r)},_slerpAdditive:function(e,t,n,r,a){const i=this._workIndex*a;Kn.multiplyQuaternionsFlat(e,i,e,t,e,n),Kn.slerpFlat(e,t,e,t,e,i,r)},_lerp:function(e,t,n,r,a){const i=1-r;for(let s=0;s!==a;++s){const a=t+s;e[a]=e[a]*i+e[n+s]*r}},_lerpAdditive:function(e,t,n,r,a){for(let i=0;i!==a;++i){const a=t+i;e[a]=e[a]+e[n+i]*r}}});const bd=new RegExp("[\\[\\]\\.:\\/]","g"),wd="[^\\[\\]\\.:\\/]",_d="[^"+"\\[\\]\\.:\\/".replace("\\.","")+"]",Td=/((?:WC+[\/:])*)/.source.replace("WC",wd),Sd=/(WCOD+)?/.source.replace("WCOD",_d),Ed=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",wd),Md=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",wd),Id=new RegExp("^"+Td+Sd+Ed+Md+"$"),Nd=["material","materials","bones"];function Cd(e,t,n){const r=n||Ad.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,r)}function Ad(e,t,n){this.path=t,this.parsedPath=n||Ad.parseTrackName(t),this.node=Ad.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e}function kd(){this.uuid=$n.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let t=0,n=arguments.length;t!==n;++t)e[arguments[t].uuid]=t;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}Object.assign(Cd.prototype,{getValue:function(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,r=this._bindings[n];void 0!==r&&r.getValue(e,t)},setValue:function(e,t){const n=this._bindings;for(let r=this._targetGroup.nCachedObjects_,a=n.length;r!==a;++r)n[r].setValue(e,t)},bind:function(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()},unbind:function(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}),Object.assign(Ad,{Composite:Cd,create:function(e,t,n){return e&&e.isAnimationObjectGroup?new Ad.Composite(e,t,n):new Ad(e,t,n)},sanitizeNodeName:function(e){return e.replace(/\s/g,"_").replace(bd,"")},parseTrackName:function(e){const t=Id.exec(e);if(!t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},r=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==r&&-1!==r){const e=n.nodeName.substring(r+1);-1!==Nd.indexOf(e)&&(n.nodeName=n.nodeName.substring(0,r),n.objectName=e)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n},findNode:function(e,t){if(!t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(void 0!==n)return n}if(e.children){const n=function(e){for(let r=0;r<e.length;r++){const a=e[r];if(a.name===t||a.uuid===t)return a;const i=n(a.children);if(i)return i}return null},r=n(e.children);if(r)return r}return null}}),Object.assign(Ad.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(e,t){e[t]=this.node[this.propertyName]},function(e,t){const n=this.resolvedProperty;for(let r=0,a=n.length;r!==a;++r)e[t++]=n[r]},function(e,t){e[t]=this.resolvedProperty[this.propertyIndex]},function(e,t){this.resolvedProperty.toArray(e,t)}],SetterByBindingTypeAndVersioning:[[function(e,t){this.targetObject[this.propertyName]=e[t]},function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){const n=this.resolvedProperty;for(let r=0,a=n.length;r!==a;++r)n[r]=e[t++]},function(e,t){const n=this.resolvedProperty;for(let r=0,a=n.length;r!==a;++r)n[r]=e[t++];this.targetObject.needsUpdate=!0},function(e,t){const n=this.resolvedProperty;for(let r=0,a=n.length;r!==a;++r)n[r]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){this.resolvedProperty[this.propertyIndex]=e[t]},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){this.resolvedProperty.fromArray(e,t)},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(e,t){this.bind(),this.getValue(e,t)},setValue:function(e,t){this.bind(),this.setValue(e,t)},bind:function(){let e=this.node;const t=this.parsedPath,n=t.objectName,r=t.propertyName;let a=t.propertyIndex;if(e||(e=Ad.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(n){let r=t.objectIndex;switch(n){case"materials":if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);e=e.material.materials;break;case"bones":if(!e.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);e=e.skeleton.bones;for(let t=0;t<e.length;t++)if(e[t].name===r){r=t;break}break;default:if(void 0===e[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);e=e[n]}if(void 0!==r){if(void 0===e[r])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);e=e[r]}}const i=e[r];if(void 0===i){const n=t.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+r+" but it wasn't found.",e)}let s=this.Versioning.None;this.targetObject=e,void 0!==e.needsUpdate?s=this.Versioning.NeedsUpdate:void 0!==e.matrixWorldNeedsUpdate&&(s=this.Versioning.MatrixWorldNeedsUpdate);let o=this.BindingType.Direct;if(void 0!==a){if("morphTargetInfluences"===r){if(!e.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!e.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!e.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==e.morphTargetDictionary[a]&&(a=e.morphTargetDictionary[a])}o=this.BindingType.ArrayElement,this.resolvedProperty=i,this.propertyIndex=a}else void 0!==i.fromArray&&void 0!==i.toArray?(o=this.BindingType.HasFromToArray,this.resolvedProperty=i):Array.isArray(i)?(o=this.BindingType.EntireArray,this.resolvedProperty=i):this.propertyName=r;this.getValue=this.GetterByBindingType[o],this.setValue=this.SetterByBindingTypeAndVersioning[o][s]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),Object.assign(Ad.prototype,{_getValue_unbound:Ad.prototype.getValue,_setValue_unbound:Ad.prototype.setValue}),Object.assign(kd.prototype,{isAnimationObjectGroup:!0,add:function(){const e=this._objects,t=this._indicesByUUID,n=this._paths,r=this._parsedPaths,a=this._bindings,i=a.length;let s,o=e.length,c=this.nCachedObjects_;for(let l=0,u=arguments.length;l!==u;++l){const u=arguments[l],h=u.uuid;let d=t[h];if(void 0===d){d=o++,t[h]=d,e.push(u);for(let e=0,t=i;e!==t;++e)a[e].push(new Ad(u,n[e],r[e]))}else if(d<c){s=e[d];const o=--c,l=e[o];t[l.uuid]=d,e[d]=l,t[h]=o,e[o]=u;for(let e=0,t=i;e!==t;++e){const t=a[e],i=t[o];let s=t[d];t[d]=i,void 0===s&&(s=new Ad(u,n[e],r[e])),t[o]=s}}else e[d]!==s&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=c},remove:function(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,r=n.length;let a=this.nCachedObjects_;for(let i=0,s=arguments.length;i!==s;++i){const s=arguments[i],o=s.uuid,c=t[o];if(void 0!==c&&c>=a){const i=a++,l=e[i];t[l.uuid]=c,e[c]=l,t[o]=i,e[i]=s;for(let e=0,t=r;e!==t;++e){const t=n[e],r=t[i],a=t[c];t[c]=r,t[i]=a}}}this.nCachedObjects_=a},uncache:function(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,r=n.length;let a=this.nCachedObjects_,i=e.length;for(let s=0,o=arguments.length;s!==o;++s){const o=arguments[s].uuid,c=t[o];if(void 0!==c)if(delete t[o],c<a){const s=--a,o=e[s],l=--i,u=e[l];t[o.uuid]=c,e[c]=o,t[u.uuid]=s,e[s]=u,e.pop();for(let e=0,t=r;e!==t;++e){const t=n[e],r=t[s],a=t[l];t[c]=r,t[s]=a,t.pop()}}else{const a=--i,s=e[a];a>0&&(t[s.uuid]=c),e[c]=s,e.pop();for(let e=0,t=r;e!==t;++e){const t=n[e];t[c]=t[a],t.pop()}}}this.nCachedObjects_=a},subscribe_:function(e,t){const n=this._bindingsIndicesByPath;let r=n[e];const a=this._bindings;if(void 0!==r)return a[r];const i=this._paths,s=this._parsedPaths,o=this._objects,c=o.length,l=this.nCachedObjects_,u=new Array(c);r=a.length,n[e]=r,i.push(e),s.push(t),a.push(u);for(let n=l,r=o.length;n!==r;++n){const r=o[n];u[n]=new Ad(r,e,t)}return u},unsubscribe_:function(e){const t=this._bindingsIndicesByPath,n=t[e];if(void 0!==n){const r=this._paths,a=this._parsedPaths,i=this._bindings,s=i.length-1,o=i[s];t[e[s]]=n,i[n]=o,i.pop(),a[n]=a[s],a.pop(),r[n]=r[s],r.pop()}}});class Rd{constructor(e,t,n=null,r=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=r;const a=t.tracks,i=a.length,s=new Array(i),o={endingStart:Gt,endingEnd:Gt};for(let e=0;e!==i;++e){const t=a[e].createInterpolant(null);s[e]=t,t.settings=o}this._interpolantSettings=o,this._interpolants=s,this._propertyBindings=new Array(i),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Ft,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const n=this._clip.duration,r=e._clip.duration,a=r/n,i=n/r;e.warp(1,a,t),this.warp(i,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const r=this._mixer,a=r.time,i=this.timeScale;let s=this._timeScaleInterpolant;null===s&&(s=r._lendControlInterpolant(),this._timeScaleInterpolant=s);const o=s.parameterPositions,c=s.sampleValues;return o[0]=a,o[1]=a+n,c[0]=e/i,c[1]=t/i,this}stopWarping(){const e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,r){if(!this.enabled)return void this._updateWeight(e);const a=this._startTime;if(null!==a){const r=(e-a)*n;if(r<0||0===n)return;this._startTime=null,t=n*r}t*=this._updateTimeScale(e);const i=this._updateTime(t),s=this._updateWeight(e);if(s>0){const e=this._interpolants,t=this._propertyBindings;switch(this.blendMode){case jt:for(let n=0,r=e.length;n!==r;++n)e[n].evaluate(i),t[n].accumulateAdditive(s);break;case Vt:default:for(let n=0,a=e.length;n!==a;++n)e[n].evaluate(i),t[n].accumulate(r,s)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(null!==n){const r=n.evaluate(e)[0];t*=r,e>n.parameterPositions[1]&&(this.stopFading(),0===r&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;null!==n&&(t*=n.evaluate(e)[0],e>n.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t))}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let r=this.time+e,a=this._loopCount;const i=n===Bt;if(0===e)return-1===a?r:i&&1==(1&a)?t-r:r;if(n===Pt){-1===a&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(r>=t)r=t;else{if(!(r<0)){this.time=r;break e}r=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(-1===a&&(e>=0?(a=0,this._setEndings(!0,0===this.repetitions,i)):this._setEndings(0===this.repetitions,!0,i)),r>=t||r<0){const n=Math.floor(r/t);r-=t*n,a+=Math.abs(n);const s=this.repetitions-a;if(s<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=e>0?t:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(1===s){const t=e<0;this._setEndings(t,!t,i)}else this._setEndings(!1,!1,i);this._loopCount=a,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:n})}}else this.time=r;if(i&&1==(1&a))return t-r}return r}_setEndings(e,t,n){const r=this._interpolantSettings;n?(r.endingStart=Ht,r.endingEnd=Ht):(r.endingStart=e?this.zeroSlopeAtStart?Ht:Gt:Wt,r.endingEnd=t?this.zeroSlopeAtEnd?Ht:Gt:Wt)}_scheduleFading(e,t,n){const r=this._mixer,a=r.time;let i=this._weightInterpolant;null===i&&(i=r._lendControlInterpolant(),this._weightInterpolant=i);const s=i.parameterPositions,o=i.sampleValues;return s[0]=a,o[0]=t,s[1]=a+e,o[1]=n,this}}function Dd(e){this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}Dd.prototype=Object.assign(Object.create(Pn.prototype),{constructor:Dd,_bindAction:function(e,t){const n=e._localRoot||this._root,r=e._clip.tracks,a=r.length,i=e._propertyBindings,s=e._interpolants,o=n.uuid,c=this._bindingsByRootAndName;let l=c[o];void 0===l&&(l={},c[o]=l);for(let e=0;e!==a;++e){const a=r[e],c=a.name;let u=l[c];if(void 0!==u)i[e]=u;else{if(u=i[e],void 0!==u){null===u._cacheIndex&&(++u.referenceCount,this._addInactiveBinding(u,o,c));continue}const r=t&&t._propertyBindings[e].binding.parsedPath;u=new vd(Ad.create(n,c,r),a.ValueTypeName,a.getValueSize()),++u.referenceCount,this._addInactiveBinding(u,o,c),i[e]=u}s[e].resultBuffer=u.buffer}},_activateAction:function(e){if(!this._isActiveAction(e)){if(null===e._cacheIndex){const t=(e._localRoot||this._root).uuid,n=e._clip.uuid,r=this._actionsByClip[n];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,n,t)}const t=e._propertyBindings;for(let e=0,n=t.length;e!==n;++e){const n=t[e];0==n.useCount++&&(this._lendBinding(n),n.saveOriginalState())}this._lendAction(e)}},_deactivateAction:function(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let e=0,n=t.length;e!==n;++e){const n=t[e];0==--n.useCount&&(n.restoreOriginalState(),this._takeBackBinding(n))}this._takeBackAction(e)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}},_isActiveAction:function(e){const t=e._cacheIndex;return null!==t&&t<this._nActiveActions},_addInactiveAction:function(e,t,n){const r=this._actions,a=this._actionsByClip;let i=a[t];if(void 0===i)i={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,a[t]=i;else{const t=i.knownActions;e._byClipCacheIndex=t.length,t.push(e)}e._cacheIndex=r.length,r.push(e),i.actionByRoot[n]=e},_removeInactiveAction:function(e){const t=this._actions,n=t[t.length-1],r=e._cacheIndex;n._cacheIndex=r,t[r]=n,t.pop(),e._cacheIndex=null;const a=e._clip.uuid,i=this._actionsByClip,s=i[a],o=s.knownActions,c=o[o.length-1],l=e._byClipCacheIndex;c._byClipCacheIndex=l,o[l]=c,o.pop(),e._byClipCacheIndex=null,delete s.actionByRoot[(e._localRoot||this._root).uuid],0===o.length&&delete i[a],this._removeInactiveBindingsForAction(e)},_removeInactiveBindingsForAction:function(e){const t=e._propertyBindings;for(let e=0,n=t.length;e!==n;++e){const n=t[e];0==--n.referenceCount&&this._removeInactiveBinding(n)}},_lendAction:function(e){const t=this._actions,n=e._cacheIndex,r=this._nActiveActions++,a=t[r];e._cacheIndex=r,t[r]=e,a._cacheIndex=n,t[n]=a},_takeBackAction:function(e){const t=this._actions,n=e._cacheIndex,r=--this._nActiveActions,a=t[r];e._cacheIndex=r,t[r]=e,a._cacheIndex=n,t[n]=a},_addInactiveBinding:function(e,t,n){const r=this._bindingsByRootAndName,a=this._bindings;let i=r[t];void 0===i&&(i={},r[t]=i),i[n]=e,e._cacheIndex=a.length,a.push(e)},_removeInactiveBinding:function(e){const t=this._bindings,n=e.binding,r=n.rootNode.uuid,a=n.path,i=this._bindingsByRootAndName,s=i[r],o=t[t.length-1],c=e._cacheIndex;o._cacheIndex=c,t[c]=o,t.pop(),delete s[a],0===Object.keys(s).length&&delete i[r]},_lendBinding:function(e){const t=this._bindings,n=e._cacheIndex,r=this._nActiveBindings++,a=t[r];e._cacheIndex=r,t[r]=e,a._cacheIndex=n,t[n]=a},_takeBackBinding:function(e){const t=this._bindings,n=e._cacheIndex,r=--this._nActiveBindings,a=t[r];e._cacheIndex=r,t[r]=e,a._cacheIndex=n,t[n]=a},_lendControlInterpolant:function(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return void 0===n&&(n=new Au(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=t,e[t]=n),n},_takeBackControlInterpolant:function(e){const t=this._controlInterpolants,n=e.__cacheIndex,r=--this._nActiveControlInterpolants,a=t[r];e.__cacheIndex=r,t[r]=e,a.__cacheIndex=n,t[n]=a},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(e,t,n){const r=t||this._root,a=r.uuid;let i="string"==typeof e?Uu.findByName(r,e):e;const s=null!==i?i.uuid:e,o=this._actionsByClip[s];let c=null;if(void 0===n&&(n=null!==i?i.blendMode:Vt),void 0!==o){const e=o.actionByRoot[a];if(void 0!==e&&e.blendMode===n)return e;c=o.knownActions[0],null===i&&(i=c._clip)}if(null===i)return null;const l=new Rd(this,i,t,n);return this._bindAction(l,c),this._addInactiveAction(l,s,a),l},existingAction:function(e,t){const n=t||this._root,r=n.uuid,a="string"==typeof e?Uu.findByName(n,e):e,i=a?a.uuid:e,s=this._actionsByClip[i];return void 0!==s&&s.actionByRoot[r]||null},stopAllAction:function(){const e=this._actions;for(let t=this._nActiveActions-1;t>=0;--t)e[t].stop();return this},update:function(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,r=this.time+=e,a=Math.sign(e),i=this._accuIndex^=1;for(let s=0;s!==n;++s)t[s]._update(r,e,a,i);const s=this._bindings,o=this._nActiveBindings;for(let e=0;e!==o;++e)s[e].apply(i);return this},setTime:function(e){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(e)},getRoot:function(){return this._root},uncacheClip:function(e){const t=this._actions,n=e.uuid,r=this._actionsByClip,a=r[n];if(void 0!==a){const e=a.knownActions;for(let n=0,r=e.length;n!==r;++n){const r=e[n];this._deactivateAction(r);const a=r._cacheIndex,i=t[t.length-1];r._cacheIndex=null,r._byClipCacheIndex=null,i._cacheIndex=a,t[a]=i,t.pop(),this._removeInactiveBindingsForAction(r)}delete r[n]}},uncacheRoot:function(e){const t=e.uuid,n=this._actionsByClip;for(const e in n){const r=n[e].actionByRoot[t];void 0!==r&&(this._deactivateAction(r),this._removeInactiveAction(r))}const r=this._bindingsByRootAndName[t];if(void 0!==r)for(const e in r){const t=r[e];t.restoreOriginalState(),this._removeInactiveBinding(t)}},uncacheAction:function(e,t){const n=this.existingAction(e,t);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}});class Ld{constructor(e){"string"==typeof e&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}clone(){return new Ld(void 0===this.value.clone?this.value:this.value.clone())}}function Od(e,t,n){zo.call(this,e,t),this.meshPerAttribute=n||1}function Pd(e,t,n,r,a){this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=r,this.count=a,this.version=0}function Fd(e,t,n,r){this.ray=new Sr(e,t),this.near=n||0,this.far=r||1/0,this.camera=null,this.layers=new Pr,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function Bd(e,t){return e.distance-t.distance}function $d(e,t,n,r){if(e.layers.test(t.layers)&&e.raycast(t,n),!0===r){const r=e.children;for(let e=0,a=r.length;e<a;e++)$d(r[e],t,n,!0)}}Od.prototype=Object.assign(Object.create(zo.prototype),{constructor:Od,isInstancedInterleavedBuffer:!0,copy:function(e){return zo.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},clone:function(e){const t=zo.prototype.clone.call(this,e);return t.meshPerAttribute=this.meshPerAttribute,t},toJSON:function(e){const t=zo.prototype.toJSON.call(this,e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}),Object.defineProperty(Pd.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.assign(Pd.prototype,{isGLBufferAttribute:!0,setBuffer:function(e){return this.buffer=e,this},setType:function(e,t){return this.type=e,this.elementSize=t,this},setItemSize:function(e){return this.itemSize=e,this},setCount:function(e){return this.count=e,this}}),Object.assign(Fd.prototype,{set:function(e,t){this.ray.set(e,t)},setFromCamera:function(e,t){t&&t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t&&t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)},intersectObject:function(e,t,n){const r=n||[];return $d(e,this,r,t),r.sort(Bd),r},intersectObjects:function(e,t,n){const r=n||[];if(!1===Array.isArray(e))return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),r;for(let n=0,a=e.length;n<a;n++)$d(e[n],this,r,t);return r.sort(Bd),r}});class Ud{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}clone(){return(new this.constructor).copy(this)}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){const e=1e-6;return this.phi=Math.max(e,Math.min(Math.PI-e,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos($n.clamp(t/this.radius,-1,1))),this}}class zd{constructor(e,t,n){return this.radius=void 0!==e?e:1,this.theta=void 0!==t?t:0,this.y=void 0!==n?n:0,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}clone(){return(new this.constructor).copy(this)}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}}const Gd=new Un;class Hd{constructor(e,t){Object.defineProperty(this,"isBox2",{value:!0}),this.min=void 0!==e?e:new Un(1/0,1/0),this.max=void 0!==t?t:new Un(-1/0,-1/0)}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Gd.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return void 0===e&&(console.warn("THREE.Box2: .getCenter() target is now required"),e=new Un),this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return void 0===e&&(console.warn("THREE.Box2: .getSize() target is now required"),e=new Un),this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return void 0===t&&(console.warn("THREE.Box2: .getParameter() target is now required"),t=new Un),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return void 0===t&&(console.warn("THREE.Box2: .clampPoint() target is now required"),t=new Un),t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Gd.copy(e).clamp(this.min,this.max).sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Wd=new Zn,Vd=new Zn;class jd{constructor(e,t){this.start=void 0!==e?e:new Zn,this.end=void 0!==t?t:new Zn}set(e,t){return this.start.copy(e),this.end.copy(t),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return void 0===e&&(console.warn("THREE.Line3: .getCenter() target is now required"),e=new Zn),e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return void 0===e&&(console.warn("THREE.Line3: .delta() target is now required"),e=new Zn),e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return void 0===t&&(console.warn("THREE.Line3: .at() target is now required"),t=new Zn),this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){Wd.subVectors(e,this.start),Vd.subVectors(this.end,this.start);const n=Vd.dot(Vd);let r=Vd.dot(Wd)/n;return t&&(r=$n.clamp(r,0,1)),r}closestPointToPoint(e,t,n){const r=this.closestPointToPointParameter(e,t);return void 0===n&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),n=new Zn),this.delta(n).multiplyScalar(r).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}}function Xd(e){Kr.call(this),this.material=e,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}Xd.prototype=Object.create(Kr.prototype),Xd.prototype.constructor=Xd,Xd.prototype.isImmediateRenderObject=!0;const qd=new Zn;class Yd extends Kr{constructor(e,t){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;const n=new Xa,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let e=0,t=1,n=32;e<n;e++,t++){const a=e/n*Math.PI*2,i=t/n*Math.PI*2;r.push(Math.cos(a),Math.sin(a),1,Math.cos(i),Math.sin(i),1)}n.setAttribute("position",new La(r,3));const a=new Sc({fog:!1,toneMapped:!1});this.cone=new Dc(n,a),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),qd.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(qd),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Kd=new Zn,Zd=new Er,Jd=new Er;class Qd extends Dc{constructor(e){const t=ep(e),n=new Xa,r=[],a=[],i=new xa(0,0,1),s=new xa(0,1,0);for(let e=0;e<t.length;e++){const n=t[e];n.parent&&n.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),a.push(i.r,i.g,i.b),a.push(s.r,s.g,s.b))}n.setAttribute("position",new La(r,3)),n.setAttribute("color",new La(a,3)),super(n,new Sc({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,r=n.getAttribute("position");Jd.copy(this.root.matrixWorld).invert();for(let e=0,n=0;e<t.length;e++){const a=t[e];a.parent&&a.parent.isBone&&(Zd.multiplyMatrices(Jd,a.matrixWorld),Kd.setFromMatrixPosition(Zd),r.setXYZ(n,Kd.x,Kd.y,Kd.z),Zd.multiplyMatrices(Jd,a.parent.matrixWorld),Kd.setFromMatrixPosition(Zd),r.setXYZ(n+1,Kd.x,Kd.y,Kd.z),n+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}function ep(e){const t=[];e&&e.isBone&&t.push(e);for(let n=0;n<e.children.length;n++)t.push.apply(t,ep(e.children[n]));return t}class tp extends hi{constructor(e,t,n){super(new nu(t,4,2),new _a({wireframe:!0,fog:!1,toneMapped:!1})),this.light=e,this.light.updateMatrixWorld(),this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const np=new Zn,rp=new xa,ap=new xa;class ip extends Kr{constructor(e,t,n){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;const r=new jl(t);r.rotateY(.5*Math.PI),this.material=new _a({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);const a=r.getAttribute("position"),i=new Float32Array(3*a.count);r.setAttribute("color",new Ea(i,3)),this.add(new hi(r,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");rp.copy(this.light.color),ap.copy(this.light.groundColor);for(let e=0,n=t.count;e<n;e++){const r=e<n/2?rp:ap;t.setXYZ(e,r.r,r.g,r.b)}t.needsUpdate=!0}e.lookAt(np.setFromMatrixPosition(this.light.matrixWorld).negate())}}class sp extends Dc{constructor(e=10,t=10,n=4473924,r=8947848){n=new xa(n),r=new xa(r);const a=t/2,i=e/t,s=e/2,o=[],c=[];for(let e=0,l=0,u=-s;e<=t;e++,u+=i){o.push(-s,0,u,s,0,u),o.push(u,0,-s,u,0,s);const t=e===a?n:r;t.toArray(c,l),l+=3,t.toArray(c,l),l+=3,t.toArray(c,l),l+=3,t.toArray(c,l),l+=3}const l=new Xa;l.setAttribute("position",new La(o,3)),l.setAttribute("color",new La(c,3)),super(l,new Sc({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}}class op extends Dc{constructor(e=10,t=16,n=8,r=64,a=4473924,i=8947848){a=new xa(a),i=new xa(i);const s=[],o=[];for(let n=0;n<=t;n++){const r=n/t*(2*Math.PI),c=Math.sin(r)*e,l=Math.cos(r)*e;s.push(0,0,0),s.push(c,0,l);const u=1&n?a:i;o.push(u.r,u.g,u.b),o.push(u.r,u.g,u.b)}for(let t=0;t<=n;t++){const c=1&t?a:i,l=e-e/n*t;for(let e=0;e<r;e++){let t=e/r*(2*Math.PI),n=Math.sin(t)*l,a=Math.cos(t)*l;s.push(n,0,a),o.push(c.r,c.g,c.b),t=(e+1)/r*(2*Math.PI),n=Math.sin(t)*l,a=Math.cos(t)*l,s.push(n,0,a),o.push(c.r,c.g,c.b)}}const c=new Xa;c.setAttribute("position",new La(s,3)),c.setAttribute("color",new La(o,3)),super(c,new Sc({vertexColors:!0,toneMapped:!1})),this.type="PolarGridHelper"}}const cp=new Zn,lp=new Zn,up=new Zn;class hp extends Kr{constructor(e,t,n){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,void 0===t&&(t=1);let r=new Xa;r.setAttribute("position",new La([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const a=new Sc({fog:!1,toneMapped:!1});this.lightPlane=new Ac(r,a),this.add(this.lightPlane),r=new Xa,r.setAttribute("position",new La([0,0,0,0,0,1],3)),this.targetLine=new Ac(r,a),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){cp.setFromMatrixPosition(this.light.matrixWorld),lp.setFromMatrixPosition(this.light.target.matrixWorld),up.subVectors(lp,cp),this.lightPlane.lookAt(lp),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(lp),this.targetLine.scale.z=up.length()}}const dp=new Zn,pp=new vi;class fp extends Dc{constructor(e){const t=new Xa,n=new Sc({color:16777215,vertexColors:!0,toneMapped:!1}),r=[],a=[],i={},s=new xa(16755200),o=new xa(16711680),c=new xa(43775),l=new xa(16777215),u=new xa(3355443);function h(e,t,n){d(e,n),d(t,n)}function d(e,t){r.push(0,0,0),a.push(t.r,t.g,t.b),void 0===i[e]&&(i[e]=[]),i[e].push(r.length/3-1)}h("n1","n2",s),h("n2","n4",s),h("n4","n3",s),h("n3","n1",s),h("f1","f2",s),h("f2","f4",s),h("f4","f3",s),h("f3","f1",s),h("n1","f1",s),h("n2","f2",s),h("n3","f3",s),h("n4","f4",s),h("p","n1",o),h("p","n2",o),h("p","n3",o),h("p","n4",o),h("u1","u2",c),h("u2","u3",c),h("u3","u1",c),h("c","t",l),h("p","c",u),h("cn1","cn2",u),h("cn3","cn4",u),h("cf1","cf2",u),h("cf3","cf4",u),t.setAttribute("position",new La(r,3)),t.setAttribute("color",new La(a,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=i,this.update()}update(){const e=this.geometry,t=this.pointMap;pp.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),mp("c",t,e,pp,0,0,-1),mp("t",t,e,pp,0,0,1),mp("n1",t,e,pp,-1,-1,-1),mp("n2",t,e,pp,1,-1,-1),mp("n3",t,e,pp,-1,1,-1),mp("n4",t,e,pp,1,1,-1),mp("f1",t,e,pp,-1,-1,1),mp("f2",t,e,pp,1,-1,1),mp("f3",t,e,pp,-1,1,1),mp("f4",t,e,pp,1,1,1),mp("u1",t,e,pp,.7,1.1,-1),mp("u2",t,e,pp,-.7,1.1,-1),mp("u3",t,e,pp,0,2,-1),mp("cf1",t,e,pp,-1,0,1),mp("cf2",t,e,pp,1,0,1),mp("cf3",t,e,pp,0,-1,1),mp("cf4",t,e,pp,0,1,1),mp("cn1",t,e,pp,-1,0,-1),mp("cn2",t,e,pp,1,0,-1),mp("cn3",t,e,pp,0,-1,-1),mp("cn4",t,e,pp,0,1,-1),e.getAttribute("position").needsUpdate=!0}}function mp(e,t,n,r,a,i,s){dp.set(a,i,s).unproject(r);const o=t[e];if(void 0!==o){const e=n.getAttribute("position");for(let t=0,n=o.length;t<n;t++)e.setXYZ(o[t],dp.x,dp.y,dp.z)}}const gp=new er;class yp extends Dc{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(24),a=new Xa;a.setIndex(new Ea(n,1)),a.setAttribute("position",new Ea(r,3)),super(a,new Sc({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(void 0!==e&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&gp.setFromObject(this.object),gp.isEmpty())return;const t=gp.min,n=gp.max,r=this.geometry.attributes.position,a=r.array;a[0]=n.x,a[1]=n.y,a[2]=n.z,a[3]=t.x,a[4]=n.y,a[5]=n.z,a[6]=t.x,a[7]=t.y,a[8]=n.z,a[9]=n.x,a[10]=t.y,a[11]=n.z,a[12]=n.x,a[13]=n.y,a[14]=t.z,a[15]=t.x,a[16]=n.y,a[17]=t.z,a[18]=t.x,a[19]=t.y,a[20]=t.z,a[21]=n.x,a[22]=t.y,a[23]=t.z,r.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e){return Dc.prototype.copy.call(this,e),this.object=e.object,this}}class xp extends Dc{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Xa;r.setIndex(new Ea(n,1)),r.setAttribute("position",new La([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(r,new Sc({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}}class vp extends Ac{constructor(e,t=1,n=16776960){const r=n,a=new Xa;a.setAttribute("position",new La([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),a.computeBoundingSphere(),super(a,new Sc({color:r,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const i=new Xa;i.setAttribute("position",new La([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),i.computeBoundingSphere(),this.add(new hi(i,new _a({color:r,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){let t=-this.plane.constant;Math.abs(t)<1e-8&&(t=1e-8),this.scale.set(.5*this.size,.5*this.size,t),this.children[0].material.side=t<0?m:f,this.lookAt(this.plane.normal),super.updateMatrixWorld(e)}}const bp=new Zn;let wp,_p;class Tp extends Kr{constructor(e,t,n,r,a,i){super(),this.type="ArrowHelper",void 0===e&&(e=new Zn(0,0,1)),void 0===t&&(t=new Zn(0,0,0)),void 0===n&&(n=1),void 0===r&&(r=16776960),void 0===a&&(a=.2*n),void 0===i&&(i=.2*a),void 0===wp&&(wp=new Xa,wp.setAttribute("position",new La([0,0,0,0,1,0],3)),_p=new el(0,.5,1,5,1),_p.translate(0,-.5,0)),this.position.copy(t),this.line=new Ac(wp,new Sc({color:r,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new hi(_p,new _a({color:r,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,a,i)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{bp.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(bp,t)}}setLength(e,t,n){void 0===t&&(t=.2*e),void 0===n&&(n=.2*t),this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}}class Sp extends Dc{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=new Xa;n.setAttribute("position",new La(t,3)),n.setAttribute("color",new La([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3)),super(n,new Sc({vertexColors:!0,toneMapped:!1})),this.type="AxesHelper"}}const Ep=new Float32Array(1),Mp=new Int32Array(Ep.buffer),Ip={toHalfFloat:function(e){Ep[0]=e;const t=Mp[0];let n=t>>16&32768,r=t>>12&2047;const a=t>>23&255;return a<103?n:a>142?(n|=31744,n|=(255==a?0:1)&&8388607&t,n):a<113?(r|=2048,n|=(r>>114-a)+(r>>113-a&1),n):(n|=a-112<<10|r>>1,n+=1&r,n)}},Np=Math.pow(2,8),Cp=[.125,.215,.35,.446,.526,.582],Ap=5+Cp.length,kp={[Kt]:0,[Zt]:1,[Qt]:2,[tn]:3,[nn]:4,[rn]:5,[Jt]:6},Rp=new Ah,{_lodPlanes:Dp,_sizeLods:Lp,_sigmas:Op}=Hp(),Pp=new xa;let Fp=null;const Bp=(1+Math.sqrt(5))/2,$p=1/Bp,Up=[new Zn(1,1,1),new Zn(-1,1,1),new Zn(1,1,-1),new Zn(-1,1,-1),new Zn(0,Bp,$p),new Zn(0,Bp,-$p),new Zn($p,0,Bp),new Zn(-$p,0,Bp),new Zn(Bp,$p,0),new Zn(-Bp,$p,0)];class zp{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._blurMaterial=new yu({name:"SphericalGaussianBlur",defines:{n:20},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:new Float32Array(20)},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:new Zn(0,1,0)},inputEncoding:{value:kp[Kt]},outputEncoding:{value:kp[Kt]}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t",blending:v,depthTest:!1,depthWrite:!1}),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,r=100){Fp=this._renderer.getRenderTarget();const a=this._allocateTargets();return this._sceneToCubeUV(e,n,r,a),t>0&&this._blur(a,0,0,t),this._applyPMREM(a),this._cleanup(a),a}fromEquirectangular(e){return this._fromTexture(e)}fromCubemap(e){return this._fromTexture(e)}compileCubemapShader(){null===this._cubemapShader&&(this._cubemapShader=Xp(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){null===this._equirectShader&&(this._equirectShader=jp(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),null!==this._cubemapShader&&this._cubemapShader.dispose(),null!==this._equirectShader&&this._equirectShader.dispose();for(let e=0;e<Dp.length;e++)Dp[e].dispose()}_cleanup(e){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(Fp),e.scissorTest=!1,Vp(e,0,0,e.width,e.height)}_fromTexture(e){Fp=this._renderer.getRenderTarget();const t=this._allocateTargets(e);return this._textureToCubeUV(e,t),this._applyPMREM(t),this._cleanup(t),t}_allocateTargets(e){const t={magFilter:fe,minFilter:fe,generateMipmaps:!1,type:Se,format:ze,encoding:Gp(e)?e.encoding:Qt,depthBuffer:!1},n=Wp(t);return n.depthBuffer=!e,this._pingPongRenderTarget=Wp(t),n}_compileMaterial(e){const t=new hi(Dp[0],e);this._renderer.compile(t,Rp)}_sceneToCubeUV(e,t,n,r){const a=new bi(90,1,t,n),i=[1,-1,1,1,1,1],s=[1,1,1,-1,-1,-1],o=this._renderer,c=o.outputEncoding,l=o.toneMapping;o.getClearColor(Pp);const u=o.getClearAlpha();o.toneMapping=J,o.outputEncoding=Kt;let h=e.background;if(h&&h.isColor){h.convertSRGBToLinear();const t=Math.max(h.r,h.g,h.b),n=Math.min(Math.max(Math.ceil(Math.log2(t)),-128),127);h=h.multiplyScalar(Math.pow(2,-n));const r=(n+128)/255;o.setClearColor(h,r),e.background=null}for(let t=0;t<6;t++){const n=t%3;0==n?(a.up.set(0,i[t],0),a.lookAt(s[t],0,0)):1==n?(a.up.set(0,0,i[t]),a.lookAt(0,s[t],0)):(a.up.set(0,i[t],0),a.lookAt(0,0,s[t])),Vp(r,n*Np,t>2?Np:0,Np,Np),o.setRenderTarget(r),o.render(e,a)}o.toneMapping=l,o.outputEncoding=c,o.setClearColor(Pp,u)}_textureToCubeUV(e,t){const n=this._renderer;e.isCubeTexture?null==this._cubemapShader&&(this._cubemapShader=Xp()):null==this._equirectShader&&(this._equirectShader=jp());const r=e.isCubeTexture?this._cubemapShader:this._equirectShader,a=new hi(Dp[0],r),i=r.uniforms;i.envMap.value=e,e.isCubeTexture||i.texelSize.value.set(1/e.image.width,1/e.image.height),i.inputEncoding.value=kp[e.encoding],i.outputEncoding.value=kp[t.texture.encoding],Vp(t,0,0,3*Np,2*Np),n.setRenderTarget(t),n.render(a,Rp)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let t=1;t<Ap;t++){const n=Math.sqrt(Op[t]*Op[t]-Op[t-1]*Op[t-1]),r=Up[(t-1)%Up.length];this._blur(e,t-1,t,n,r)}t.autoClear=n}_blur(e,t,n,r,a){const i=this._pingPongRenderTarget;this._halfBlur(e,i,t,n,r,"latitudinal",a),this._halfBlur(i,e,n,n,r,"longitudinal",a)}_halfBlur(e,t,n,r,a,i,s){const o=this._renderer,c=this._blurMaterial;"latitudinal"!==i&&"longitudinal"!==i&&console.error("blur direction must be either latitudinal or longitudinal!");const l=new hi(Dp[r],c),u=c.uniforms,h=Lp[n]-1,d=isFinite(a)?Math.PI/(2*h):2*Math.PI/39,p=a/d,f=isFinite(a)?1+Math.floor(3*p):20;f>20&&console.warn(`sigmaRadians, ${a}, is too large and will clip, as it requested ${f} samples when the maximum is set to 20`);const m=[];let g=0;for(let e=0;e<20;++e){const t=e/p,n=Math.exp(-t*t/2);m.push(n),0==e?g+=n:e<f&&(g+=2*n)}for(let e=0;e<m.length;e++)m[e]=m[e]/g;u.envMap.value=e.texture,u.samples.value=f,u.weights.value=m,u.latitudinal.value="latitudinal"===i,s&&(u.poleAxis.value=s),u.dTheta.value=d,u.mipInt.value=8-n,u.inputEncoding.value=kp[e.texture.encoding],u.outputEncoding.value=kp[e.texture.encoding];const y=Lp[r];Vp(t,3*Math.max(0,Np-2*y),(0===r?0:2*Np)+2*y*(r>4?r-8+4:0),3*y,2*y),o.setRenderTarget(t),o.render(l,Rp)}}function Gp(e){return void 0!==e&&e.type===Se&&(e.encoding===Kt||e.encoding===Zt||e.encoding===Jt)}function Hp(){const e=[],t=[],n=[];let r=8;for(let a=0;a<Ap;a++){const i=Math.pow(2,r);t.push(i);let s=1/i;a>4?s=Cp[a-8+4-1]:0==a&&(s=0),n.push(s);const o=1/(i-1),c=-o/2,l=1+o/2,u=[c,c,l,c,l,l,c,c,l,l,c,l],h=6,d=6,p=3,f=2,m=1,g=new Float32Array(p*d*h),y=new Float32Array(f*d*h),x=new Float32Array(m*d*h);for(let e=0;e<h;e++){const t=e%3*2/3-1,n=e>2?0:-1,r=[t,n,0,t+2/3,n,0,t+2/3,n+1,0,t,n,0,t+2/3,n+1,0,t,n+1,0];g.set(r,p*d*e),y.set(u,f*d*e);const a=[e,e,e,e,e,e];x.set(a,m*d*e)}const v=new Xa;v.setAttribute("position",new Ea(g,p)),v.setAttribute("uv",new Ea(y,f)),v.setAttribute("faceIndex",new Ea(x,m)),e.push(v),r>4&&r--}return{_lodPlanes:e,_sizeLods:t,_sigmas:n}}function Wp(e){const t=new qn(3*Np,3*Np,e);return t.texture.mapping=le,t.texture.name="PMREM.cubeUv",t.scissorTest=!0,t}function Vp(e,t,n,r,a){e.viewport.set(t,n,r,a),e.scissor.set(t,n,r,a)}function jp(){return new yu({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:new Un(1,1)},inputEncoding:{value:kp[Kt]},outputEncoding:{value:kp[Kt]}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t",blending:v,depthTest:!1,depthWrite:!1})}function Xp(){return new yu({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:kp[Kt]},outputEncoding:{value:kp[Kt]}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t",blending:v,depthTest:!1,depthWrite:!1})}function qp(e,t,n,r,a,i,s){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new va(e,t,n,a,i,s)}const Yp=0,Kp=1,Zp=0,Jp=1,Qp=2;function ef(e){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),e}function tf(e=[]){return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),e.isMultiMaterial=!0,e.materials=e,e.clone=function(){return e.slice()},e}function nf(e,t){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new Uc(e,t)}function rf(e){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new ac(e)}function af(e,t){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new Uc(e,t)}function sf(e){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new Oc(e)}function of(e){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new Oc(e)}function cf(e){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new Oc(e)}function lf(e,t,n){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new Zn(e,t,n)}function uf(e,t){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),new Ea(e,t).setUsage(Mn)}function hf(e,t){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new Ma(e,t)}function df(e,t){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new Ia(e,t)}function pf(e,t){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new Na(e,t)}function ff(e,t){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new Ca(e,t)}function mf(e,t){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new Aa(e,t)}function gf(e,t){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new ka(e,t)}function yf(e,t){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new Ra(e,t)}function xf(e,t){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new La(e,t)}function vf(e,t){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new Oa(e,t)}function bf(e){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),ch.call(this,e),this.type="catmullrom",this.closed=!0}function wf(e){console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),ch.call(this,e),this.type="catmullrom"}function _f(e){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),ch.call(this,e),this.type="catmullrom"}function Tf(e){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new Sp(e)}function Sf(e,t){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new yp(e,t)}function Ef(e,t){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new Dc(new hl(e.geometry),new Sc({color:void 0!==t?t:16777215}))}function Mf(e,t){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new Dc(new fu(e.geometry),new Sc({color:void 0!==t?t:16777215}))}function If(e){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new Xu(e)}function Nf(e){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new Ju(e)}function Cf(e,t,n){return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),new Si(e,n)}eh.create=function(e,t){return console.log("THREE.Curve.create() has been deprecated"),e.prototype=Object.create(eh.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e},Object.assign(bh.prototype,{createPointsGeometry:function(e){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const t=this.getPoints(e);return this.createGeometry(t)},createSpacedPointsGeometry:function(e){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const t=this.getSpacedPoints(e);return this.createGeometry(t)},createGeometry:function(e){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const t=new Kc;for(let n=0,r=e.length;n<r;n++){const r=e[n];t.vertices.push(new Zn(r.x,r.y,r.z||0))}return t}}),Object.assign(wh.prototype,{fromPoints:function(e){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(e)}}),bf.prototype=Object.create(ch.prototype),wf.prototype=Object.create(ch.prototype),_f.prototype=Object.create(ch.prototype),Object.assign(_f.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}}),sp.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},Qd.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Object.assign(Vu.prototype,{extractUrlBase:function(e){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),Bh.extractUrlBase(e)}}),Vu.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},Object.assign(Hd.prototype,{center:function(e){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},size:function(e){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(e)}}),Object.assign(er.prototype,{center:function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionSphere:function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},size:function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)}}),Object.assign(gr.prototype,{empty:function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()}}),Ni.prototype.setFromMatrix=function(e){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(e)},jd.prototype.center=function(e){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(e)},Object.assign($n,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function(e){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),$n.floorPowerOfTwo(e)},nextPowerOfTwo:function(e){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),$n.ceilPowerOfTwo(e)}}),Object.assign(zn.prototype,{flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},multiplyVector3:function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBufferAttribute:function(e){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},getInverse:function(e){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()}}),Object.assign(Er.prototype,{extractPosition:function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},getPosition:function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new Zn).setFromMatrixColumn(this,3)},setRotationFromQuaternion:function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector4:function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},crossVector:function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBufferAttribute:function(e){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(e,t,n,r,a,i){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,r,n,a,i)},getInverse:function(e){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()}}),ea.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)},Object.assign(Kn.prototype,{multiplyVector3:function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},inverse:function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()}}),Object.assign(Sr.prototype,{isIntersectionBox:function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionPlane:function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},isIntersectionSphere:function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)}}),Object.assign(ha.prototype,{area:function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},barycoordFromPoint:function(e,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(e,t)},midpoint:function(e){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(e)},normal:function(e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(e)},plane:function(e){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(e)}}),Object.assign(ha,{barycoordFromPoint:function(e,t,n,r,a){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),ha.getBarycoord(e,t,n,r,a)},normal:function(e,t,n,r){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),ha.getNormal(e,t,n,r)}}),Object.assign(_h.prototype,{extractAllPoints:function(e){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(e)},extrude:function(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new zl(this,e)},makeGeometry:function(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new tu(this,e)}}),Object.assign(Un.prototype,{fromAttribute:function(e,t,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},distanceToManhattan:function(e){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(Zn.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},getScaleFromMatrix:function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},getColumnFromMatrix:function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},applyProjection:function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},fromAttribute:function(e,t,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},distanceToManhattan:function(e){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(Xn.prototype,{fromAttribute:function(e,t,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(Kc.prototype,{computeTangents:function(){console.error("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")},applyMatrix:function(e){return console.warn("THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}}),Object.assign(Kr.prototype,{getChildByName:function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},applyMatrix:function(e){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}}),Object.defineProperties(Kr.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Object.assign(hi.prototype,{setDrawMode:function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}),Object.defineProperties(hi.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),Xt},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),Object.defineProperties(cc.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}}),Object.defineProperty(xc.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}}),fc.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Object.defineProperty(eh.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(e){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=e}}),bi.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==t&&(this.filmGauge=t),this.setFocalLength(e)},Object.defineProperties(Th.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}}),Object.defineProperties(Ea.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===Mn},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(Mn)}}}),Object.assign(Ea.prototype,{setDynamic:function(e){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?Mn:En),this},copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},setArray:function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(Xa.prototype,{addIndex:function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},addAttribute:function(e,t){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),t&&t.isBufferAttribute||t&&t.isInterleavedBufferAttribute?"index"===e?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(e,t):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(e,new Ea(arguments[1],arguments[2])))},addDrawCall:function(e,t,n){void 0!==n&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},removeAttribute:function(e){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(e)},applyMatrix:function(e){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}}),Object.defineProperties(Xa.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Object.defineProperties($h.prototype,{maxInstancedCount:{get:function(){return console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount},set:function(e){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount=e}}}),Object.defineProperties(Fd.prototype,{linePrecision:{get:function(){return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold},set:function(e){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold=e}}}),Object.defineProperties(zo.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.usage===Mn},set:function(e){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(e)}}}),Object.assign(zo.prototype,{setDynamic:function(e){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?Mn:En),this},setArray:function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign($l.prototype,{getArrays:function(){console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")},addShapeList:function(){console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")},addShape:function(){console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")}}),Object.assign(Uo.prototype,{dispose:function(){console.error("THREE.Scene: .dispose() has been removed.")}}),Object.defineProperties(Ld.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}}),Object.defineProperties(wa.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new xa}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=e===y}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=e}}}),Object.defineProperties(bu.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}}),Object.defineProperties(vu.prototype,{transparency:{get:function(){return console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission},set:function(e){console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission=e}}}),Object.defineProperties(xi.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}}),Object.assign(Po.prototype,{clearTarget:function(e,t,n,r){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(e),this.clear(t,n,r)},animate:function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(e)},getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},allocTextureUnit:function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},setTexture:function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},setTexture2D:function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},setTextureCube:function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},getActiveMipMapLevel:function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()}}),Object.defineProperties(Po.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===e?Zt:Kt}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(Io.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(qn.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}}),Object.defineProperties(dd.prototype,{load:{value:function(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const t=this;return(new Qh).load(e,(function(e){t.setBuffer(e)})),this}},startTime:{set:function(){console.warn("THREE.Audio: .startTime is now .play( delay ).")}}}),xd.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},_i.prototype.updateCubeMap=function(e,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(e,t)},_i.prototype.clear=function(e,t,n,r){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(e,t,n,r)};const Af={merge:function(e,t,n){let r;console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead."),t.isMesh&&(t.matrixAutoUpdate&&t.updateMatrix(),r=t.matrix,t=t.geometry),e.merge(t,r,n)},center:function(e){return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),e.center()}};function kf(){console.error("THREE.CanvasRenderer has been removed")}function Rf(){console.error("THREE.JSONLoader has been removed.")}Hn.crossOrigin=void 0,Hn.loadTexture=function(e,t,n,r){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const a=new Qu;a.setCrossOrigin(this.crossOrigin);const i=a.load(e,n,void 0,r);return t&&(i.mapping=t),i},Hn.loadTextureCube=function(e,t,n,r){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const a=new Zu;a.setCrossOrigin(this.crossOrigin);const i=a.load(e,n,void 0,r);return t&&(i.mapping=t),i},Hn.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},Hn.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};const Df={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};function Lf(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:r}}))},3607:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},s=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(a,i){function s(e){try{c(r.next(e))}catch(e){i(e)}}function o(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,o)}c((r=r.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0});const o=i(n(2212));var c=n(8618)(o);const l=n(3103);n(9731),n(8912);const u=new o.Scene,h=new o.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,1e3),d=new o.WebGLRenderer;d.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(d.domElement);const p=new c(h,d.domElement);h.position.z=3.5;const f=document.createElement("video"),m=320,g=180,y=new o.VideoTexture(f),x=new o.PlaneBufferGeometry(16,9);x.scale(.5,.5,.5);const v=new o.MeshBasicMaterial({map:y,color:16777215,transparent:!0,opacity:.3});new o.Mesh(x,v);const b=function(e){let t=[];return e.keys().map(((n,r)=>{t.push(e(n))})),t}(n(9591));if(console.log("images: ",b),navigator.mediaDevices&&navigator.mediaDevices.getUserMedia){const e={video:{width:m,height:g,facingMode:"user"}};navigator.mediaDevices.getUserMedia(e).then((function(e){f.srcObject=e,f.play().then((()=>{!function(){s(this,void 0,void 0,(function*(){w=yield l.load(l.SupportedPackages.mediapipeFacemesh,I);const e=yield w.estimateFaces({input:f,returnTensors:!1,flipHorizontal:!1});if(e.length>0){const n=new o.LoadingManager,r=new o.TextureLoader(n);for(let n=0;n<e.length;n++){const a=e[n].scaledMesh;for(let e=0;e<Number(4.5*a.length);e++){var t=b[e%b.length];r.load(t.default,function(e){let t=.08,n=.08;e.image.width>e.image.height?n*=e.image.height/e.image.width:t*=e.image.width/e.image.height;const r=new o.PlaneBufferGeometry(t,n),a=new o.MeshBasicMaterial({color:16777215,side:o.DoubleSide,map:e,transparent:!0,opacity:1}),i=new o.Mesh(r,a);i.position.x=Math.random()*S-S/2,i.position.y=Math.random()*E-E/2,i.position.z=Math.random()*M-M/2;var s=Math.random()+.5;i.scale.x=s,i.scale.y=s,i.scale.z=s,u.add(i),_.push(i)}.bind(this))}}T=!0}}))}()}))})).catch((function(e){console.error("Unable to access the camera/webcam.",e)}))}else console.error("MediaDevices interface not available.");let w,_=[],T=!1,S=9,E=9,M=10;const I={backend:"webgl",maxFaces:1,triangulateMesh:!0,predictIrises:!1};window.addEventListener("resize",(function(){h.aspect=window.innerWidth/window.innerHeight,h.updateProjectionMatrix(),d.setSize(window.innerWidth,window.innerHeight),C()}),!1);var N=function(e){requestAnimationFrame(N),p.update(),function(e){s(this,void 0,void 0,(function*(){if(T){const n=yield w.estimateFaces({input:f,returnTensors:!1,flipHorizontal:!1});if(n.length>0)for(let r=0;r<n.length;r++){const a=n[r].scaledMesh;for(let n=0;n<_.length;n++){let r=5;if(_[n]){var t=.6*(Math.sin(8e-4*(n*n*n+e))+1.3);if(a[n]){const[i,s,o]=a[n];_[n].position.x=(-i/m+.5)*r*(m/g),_[n].position.y=(-s/g+.5)*r,_[n].position.z=-o/300*r,t=.6*(Math.sin(8e-4*(10.5*n+n+e))+1.3)}_[n].material.opacity=t}}}}}))}(e),C()};function C(){d.render(u,h)}window.requestAnimationFrame(N)},9591:(e,t,n)=>{var r={"./HG7  (1).jpg":2313,"./HG7  (10).png":9470,"./HG7  (11).png":1213,"./HG7  (12).PNG":6302,"./HG7  (13).png":8613,"./HG7  (14).PNG":8708,"./HG7  (15).png":4251,"./HG7  (16).png":2679,"./HG7  (17).PNG":783,"./HG7  (18).PNG":4763,"./HG7  (19).png":1922,"./HG7  (2).png":5685,"./HG7  (20).png":7346,"./HG7  (21).png":4099,"./HG7  (22).png":9533,"./HG7  (23).PNG":4317,"./HG7  (24).png":7704,"./HG7  (25).png":2158,"./HG7  (26).PNG":5071,"./HG7  (27).png":5247,"./HG7  (3).PNG":5559,"./HG7  (4).PNG":1242,"./HG7  (5).PNG":7800,"./HG7  (6).png":9450,"./HG7  (7).PNG":351,"./HG7  (8).PNG":1619,"./HG7  (9).PNG":3091,"./HG8 (1).png":2408,"./HG8 (2).png":8642,"./HG8 (3).png":4682,"./HG8 (4).png":2256,"./HG8 (5).JPG":8523,"./HG8 (6).png":6304,"./HG8 (7).JPG":9769,"./HG8 (8).JPG":292,"./HG9 (1).JPG":2882,"./HG9 (10).PNG":3094,"./HG9 (11).PNG":1770,"./HG9 (12).png":311,"./HG9 (13).PNG":2648,"./HG9 (14).png":3930,"./HG9 (15).png":7212,"./HG9 (16).png":6945,"./HG9 (17).png":9064,"./HG9 (18).png":4501,"./HG9 (19).png":4229,"./HG9 (2).jpg":1657,"./HG9 (20).PNG":9115,"./HG9 (3).jpg":1562,"./HG9 (4).JPG":7201,"./HG9 (4).png":5602,"./HG9 (5).png":3431,"./HG9 (6).png":9104,"./HG9 (7).PNG":942,"./HG9 (8).PNG":3719,"./HG9 (9).PNG":3270};function a(e){var t=i(e);return n(t)}function i(e){if(!n.o(r,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return r[e]}a.keys=function(){return Object.keys(r)},a.resolve=i,e.exports=a,a.id=9591},3906:()=>{},8352:()=>{},1758:()=>{}},t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.loaded=!0,a.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n(3607)})();
//# sourceMappingURL=main.da397be7cb1fc8853f19.js.map